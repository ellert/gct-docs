<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../xinclude.mod" >
<!ENTITY gridcacreate "<command>grid-ca-create</command>" >
<!ENTITY gridcasign "<command>grid-ca-sign</command>" >
<!ENTITY globususer "<systemitem class='username'>globus</systemitem>" >
<!ENTITY simplecauser "<systemitem class='username'>simpleca</systemitem>" >
%xinclude;

]>
<book id="simplecaAdmin">
<title>GT <replaceable role="entity">version</replaceable> SimpleCA: Admin Guide</title>
<titleabbrev>Admin Guide</titleabbrev>
<bookinfo id="simpleca-admin-introduction">
<abstract><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with SimpleCA. It provides references to information
  on procedures typically performed by system administrators, including installation,
    configuring, deploying, and testing the installation.</para>
<para>    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
            overview, installation, security configuration instructions in the <olink targetdoc="gtadmin" />.  
            Read through this guide before continuing!</simpara>  
    </important></para>
    <para>The following are instructions for how to use SimpleCA to request and
    sign a <glossterm baseform="certificate">certificate</glossterm> for a GT
    <replaceable role="entity">version</replaceable> installation. </para>

    <para>SimpleCA provides an easy way to create and package a
    <glossterm baseform="Certificate Authority">Certificate Authority
    (CA)</glossterm>, as well as tools for requesting and signing user and
    host certificates.  It is similar to OpenSSL's <command>CA.sh</command>
    command but includes support for packaging the CA certificate, creating
    a signing policy file, and generating information needed by clients to
    request certificates.  You can find other CA options in
    <olink targetdoc="gtadmin" targetptr="gtadmin-basic-host"/>. </para>
</abstract>
</bookinfo>
<part id="simpleca-admin-guide">
    <title>Simple CA Administration Guide</title>
<chapter id="simpleca-admin-installing"><title>Building and Installing</title>
    <section id="simpleca-users"><title>Create users </title>
        <para>Make sure you have the following users on your machine:</para>
        <itemizedlist>
            <listitem><simpara>Your <emphasis>user</emphasis> account, which
            will be used to run the client programs.
            </simpara></listitem>
            <listitem><simpara>A &simplecauser; account,
            which will be used to administer the Simple CA. This is created
            automatically if you install SimpleCA from RPM or Debian
            packages.</simpara></listitem>
            <listitem><simpara>A generic &globususer; account,
            if you will be building from the source
            installer.</simpara></listitem>
        </itemizedlist>
    </section>

    <section id="simpleca-install"><title>Install SimpleCA</title>
        <para>SimpleCA can be installed in three ways, from a debian package,
        from an RPM package, and from the source installer. These installation
        methods are described in <olink targetdoc="gtadmin"/></para>

        <para>
        To install SimpleCA from binary packages, install the packages
        <package>globus-simple-ca</package> and
        <package>globus-gsi-cert-utils-progs</package> and their dependencies.
        On Debian based systems, use the command
        <screen><prompt role="root"/><command>apt-get install <package>globus-simple-ca</package> <package>globus-gsi-cert-utils-progs</package></command></screen>
        On RPM-based systems, use the command
        <screen><prompt role="root"/><command>yum install <package>globus-simple-ca</package> <package>globus-gsi-cert-utils-progs</package></command></screen>
        </para>

        <para>
        To install SimpleCA from the source installer, build the
        <literal>globus_simple_ca</literal> and
        <literal>globus_gsi_cert_utils</literal> installer targets with
        the command
        <screen><prompt role="globus"/><command>make <package>globus_simple_ca</package> <package>globus_gsi_cert_utils</package></command></screen>

        Afterward, run the command 
        <screen><prompt role="globus"/><command>make install</command></screen>
        </para>

    </section>
</chapter> <!-- Building and Installing -->
    <chapter id="simpleca-create-ca">
    <title>Creating a SimpleCA</title>

    <para>
        If you install the globus-simpleca Debian or RPM package, it will
        automatically create a <systemitem
        class='username'>simpleca</systemitem> user and a Simple CA
        in <filename>/var/lib/globus/simple_ca</filename>. If want to
        create a custom CA, or are using the source installer, you'll need
        to do the following. Otherwise, you can skip to the
        <olink targetdoc="simplecaAdmin" targetptr="simplecaAdmin-using"/>
        chapter of the SimpleCA documentation, as these steps have already been
        done.
    </para>

    <section>
        <title>Create SimpleCA Administrator Account</title>
        <para>
            Create a user to adminster the SimpleCA. You can use the the
            &globususer; user you used to build 
            Globus, or another user that you create.  For the purposes of this
            document, we'll assume a user named
            <systemitem class="username">simpleca</systemitem>. Log in
            to that user, and run the
            <command>grid-ca-create</command> command. This will prompt for
            information needed to name the
            certificate, how to contact the CA administrator, lifetime of the CA
            certificate, and passphrase, and will then generate the new CA
            certificate and private key. Command-line options described in <olink
            targetdoc="simplecaAdmin" targetptr="grid-ca-create"/> can be used to avoid some of these
            prompts.
        </para>

    </section>

    <section>
        <title>Invoking <command>grid-ca-create</command></title>

        <para>
            If you are creating a SimpleCA for testing purposes,
            you can use the <option>-noint</option> command-line option
            to <command>grid-ca-create</command> to use the default values for
            all prompts like this:

            <screen><prompt role="simpleca"/><command>grid-ca-create -noint</command></screen>
            
            This will create a SimpleCA in the &simplecauser;'s home
            directory with the passphrase <literal>globus</literal>. You can
            then move on to the <olink targetdoc="simplecaAdmin" targetptr="simplecaAdmin-using"/>
            chapter of this document. For step-by-step details to create
            a customized SimpleCA, continue reading this chapter.
        </para>

        <para>
            As the &simplecauser; user, run the command
            <command>grid-ca-create</command>, and you'll see
            output like this:

            <screen><prompt role="simpleca"/><command>grid-ca-create</command>
<computeroutput>    C e r t i f i c a t e    A u t h o r i t y    S e t u p

This script will setup a Certificate Authority for signing Globus
users certificates.  It will also generate a simple CA package
that can be distributed to the users of the CA.

The CA information about the certificates it distributes will
be kept in:

/home/simpleca/.globus/simpleCA</computeroutput></screen>
            This intro screen shows the path that the CA will be created
            into (in this example,
            <filename>/home/simpleca/.globus/simpleCA</filename>). The
            other commands needed by SimpleCA will automatically look in that
            path by default when invoked by the &simplecauser;
            user.
        </para>
    </section> <!-- Invoking grid-ca-create -->

    <section id="simpleca-subjectname"><title>Configure the subject name</title>
            <para>The &gridcacreate; program next prompts you for information
            about the name of CA you wish to create:
            <screen>
<computeroutput>The unique subject name for this CA is:
cn=Globus Simple CA, ou=simpleCA-elephant.globus.org, ou=GlobusTest, o=Grid

Do you want to keep this as the CA subject (y/n) [y]:</computeroutput></screen>
            </para>
            <para>
            To accept the default name, enter <userinput>y</userinput>.
            To choose a different name, type <userinput>n</userinput>,
            after which you will be prompted by
            <screen><computeroutput>Enter a unique subject name for this CA: </computeroutput></screen>
            </para>

            <para>The subject name is an X.509 distinguished name. Typical 
            name component type abbreviations used in Grids are:

            <table>
                <title>CA Name components</title>
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>cn</entry>
                            <entry>Represents "common name".  It identifies
                            this particular certificate as the
                            <glossterm>CA Certificate</glossterm> within the 
                            "GlobusTest/simpleCA-elephant.globus.org" domain,
                            which in this case is Globus Simple CA.</entry>
                        </row>
                        <row>
                            <entry>ou</entry>
                            <entry>Represents "organizational unit".  It
                            identifies this CA from other CAs created by
                            SimpleCA by other people. The second "ou" is
                            specific to your hostname (in this case
                            GlobusTest).</entry>
                        </row>
                        <row>
                            <entry>o</entry>
                            <entry>Represents "organization". It identifies the
                            Grid.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            </para>
        </section> <!-- Configure the subject name -->

        <section id="simpleca-email"><title>Configure the CA's email</title>
            <para>The next prompt looks like this:
            <screen><computeroutput>Enter the email of the CA (this is the email where certificate
requests will be sent to be signed by the CA) [simpleca@elephant.globus.org]: </computeroutput></screen></para>
            <para>Enter the email address where you intend to receive
            certificate requests.  It should be your real email address that
            you check, not the address of the globus user. When users
            request certificates with <command>grid-cert-request</command>,
            they will be instructed to send the request to this address.</para>
        </section> <!-- Configure the CA's email -->

        <section id="simpleca-expiration"><title>Configure the expiration date</title>
            <para>Then you'll see: </para>
            <screen>
The CA certificate has an expiration date. Keep in mind that 
once the CA certificate has expired, all the certificates 
signed by that CA become invalid.  A CA should regenerate 
the CA certificate and start re-issuing ca-setup packages 
before the actual CA certificate expires.  This can be done 
by re-running this setup script.  Enter the number of DAYS 
the CA certificate should last before it expires.
[default: 5 years 1825 days]:</screen>
            <para>This is the number of days for which the CA certificate is
            valid. Once this time expires, the CA certificate will have to be
            recreated. </para>
            <para>To accept the default, hit <keycap>enter</keycap>, or
            otherwise, enter a value in days.</para>
        </section> <!-- Configure the expiration date -->

        <section id="simpleca-passphrase">
        <title>Create a Passphrase to Encrypt the CA's Private Key</title>
            <para>The next prompt will be for the passphrase for the CA's
            private key. It will be used to decrypt the CA's private key when
            signing <!-- or revoking? --> certificates. 
            It should be hard to guess, as its compromise
            might compromise all the certificates signed by the CA.
            You will be prompted twice for the passphrase, to verify that
            you typed it correctly. Enter the passphrase at these prompts.
            <screen><computeroutput>Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:</computeroutput></screen>
        </para>
        </section> <!-- Configure the passphrase -->

        <section id="simpleca-packageoutput"><title>SimpleCA Distribution Files</title>
            <para>Finally &gridcacreate; will create a tarball containing the
            public information about the CA, including its public certificate,
            signing policy, and supported X.509v3 extensions. This information
            is needed on machines that will be trusting the CA, and also on
            machines which will be used to request certificates from this CA.
            </para>

            <para>
             Since we didn't run in this example as root, 
            &gridcacreate; will not be able to write the CA files
            to system paths, so it displays a warning message indicating
            that. We can use the tarball output here, or packages described
            below to install the CA support files on this and other
            machines.</para>

            <para>The package output summary looks like this:

            <screen><computeroutput>Insufficient permissions to install CA into the trusted certifiicate
directory (tried ${sysconfdir}/grid-security/certificates and
${datadir}/certificates)
Creating RPM source tarball... done
	globus_simple_ca_68ea3306</computeroutput></screen>
            </para>
            
            <para>This information will be important for setting up other
            machines in your grid.  The number
            <replaceable>68ea3306</replaceable> in the last line is known as
            your <emphasis>CA hash</emphasis>.  It is an 8 digit hexadecimal
            string which is a hash of the subject name of the CA
            certificate.</para>

            <para>The tarball contains Debian and RPM package metadata, so
            that it can be compiled to a binary package which can be
            easily installed on this and other systems on your Grid.
            It can also be packaged as a GPT setup package for compatibility
            with older versions of the Globus Toolkit.</para>
        </section> <!-- SimpleCA Distribution Files -->

        <section id="simpleca-binarypkgs">
        <title>Generating Binary CA Packages</title>

        <para>
        The <olink targetdoc="simplecaAdmin" targetptr="grid-ca-package"/> command can be used to
        generate RPM, debian, or legacy GPT packages for a SimpleCA, or for any
        other CA which is installed on a host. These packages can make it
        easy to distribute the CA certificate and policy to other hosts with
        which you want to establish Grid trust relationships.
        </para>

        <section>
            <title>Generating RPM Packages</title>
            <para>
            To generate an RPM package for the CA which we created, use the
            following command:

            <screen><prompt role="simpleca"/><command>grid-ca-package -r -cadir ~/.globus/simpleCA</command>
<computeroutput>Creating RPM source tarball... done
        globus_simple_ca_68ea3306.tar.gz
Creating RPM binary.../home/simpleca/globus-simple-ca-68ea3306</computeroutput></screen>

            The resulting rpm package will be placed in the current directory.
            As root, you can install this via the <command>yum</command> or
            <command>rpm</command> tools. This package can then be installed
            on any RPM-based system.
            </para>
        </section> <!-- Generating RPM Packages -->

        <section>
            <title>Generating Debian Packages</title>
            <para>
            To generate an Debian package for the CA which we created, use the
            following command:

            <screen><prompt role="simpleca"/><command>grid-ca-package -d -cadir ~/.globus/simpleCA</command>
    <computeroutput>Creating RPM source tarball... done
        globus_simple_ca_68ea3306.tar.gz
Creating debian binary...dpkg-buildpackage: export CFLAGS from dpkg-buildflags (origin: vendor): -g -O2
<replaceable>
...
Lots of dpkg-buildpackage output</replaceable></computeroutput></screen>

            The resulting debian package will be placed in the current
            directory.  As root, you can install this via the
            <command>dpkg</command> tool.</para>
        </section> <!-- Generating Debian -->

        <section>
            <title>Generating GPT Packages</title>
            <para>
            The <command>grid-ca-package</command> command can also
            generate GPT packages in the form similar to previous versions
            of the Globus Toolkit. This is done with the <option>-g</option>
            and <option>-b</option> command-line options. See <olink
            targetdoc="simplecaAdmin" targetptr="grid-ca-package"/> for more
            details.
            </para>
        </section> <!-- Generating GPT Packages -->
        </section> <!-- Generating Binary Packages -->
    </chapter> <!-- Creating a SimpleCA -->

    <chapter xreflabel="Using a SimpleCA">
    <title id="simplecaAdmin-using" xreflabel="Using a SimpleCA">Using a SimpleCA</title>
    <para>
    As a CA, your main task will be to sign certificates. To sign a certificate
    request, use the tool &gridcasign;. This tool reads a certificate
    request (such as those created by <olink targetdoc="gsicUser"
    targetptr="grid-cert-request"/>) and creates a certificate signed by the
    CA certificate with the public key from in the certificate request.
    This indicates that you confirm that the identity of the certificate
    matches its name. You can use the <command>openssl</command> command
    to view the contents of the certificate request.
    </para>

    <section>
        <title>Examining a Certificate Request</title>
        <para>
        To examine a certificate request, use the command <command>openssl req -text -in <replaceable>REQNAME</replaceable></command>, as shown in the following
        example.
        </para>

        <example>
            <title>Examine a Certificate Request</title>
            <para>
            <screen><prompt role="simpleca"/><command>openssl req -noout -text -in certreq.pem</command>
<computeroutput>Certificate Request:
    Data:
        Version: 0 (0x0)
        Subject: o=Grid, OU=GlobusTest, OU=simpleCA-elephant.globus.org, OU=local, CN=Joe User
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
            RSA Public Key: (1024 bit)
                Modulus (1024 bit):
                    79:bd:a7:29:16:77:4c:e9:82:d3:73:a0:25:34:c7:
                    25:07:67:b3:2d:11:c1:e2:c9:b1:ec:41:20:a7:9a:
                    b7:2f:ee:d4:88:78:14:ff:d4:f2:f9:1b:d3:56:bc:
                    37:6f:f0:06:ea:b0:6f:70:12:a8:34:ac:8e:be:98:
                    00:b9:b8:ec:39:b5:6b:23:ad:1b:00:62:4b:cc:79:
                    97:cc:56:fb:54:7b:03:6d:a7:76:27:4e:ce:bd:94:
                    d0:eb:59:6b:25:c5:30:b0:47:15:bc:11:d5:7e:ff:
                    04:13:70:de:3b:8f:80:65:ae:63:82:61:38:f9:c6:
                    03:4a:92:b0:de:6f:bb:0a:bd
                Exponent: 65537 (0x10001)
        Attributes:
        Requested Extensions:
            Netscape Cert Type: 
                SSL CA, S/MIME CA, Object Signing CA
    Signature Algorithm: sha1WithRSAEncryption
        85:70:a6:5d:de:be:61:45:83:48:43:8d:4b:4b:4a:79:79:98:
        0d:6c:d4:a9:96:26:41:a4:c2:94:10:92:ad:eb:ad:c5:3c:bf:
        d6:4e:84:0a:db:46:96:a9:52:5b:90:cc:6a:d1:57:73:27:98:
        9e:e2:8c:9a:7f:b4:ab:a8:28:2b:02:98:a2:d8:69:73:5e:12:
        ad:5b:de:0c:6e:60:e0:0f:2c:ad:8d:b9:59:3b:d3:49:19:52:
        e0:e1:8a:57:f2:c3:a6:4d:b9:2c:5c:58:ef:0e:59:84:55:8e:
        16:fc:f4:39:82:13:6f:28:a9:59:e3:c8:f1:4e:87:75:33:4f:
        ae:be</computeroutput></screen>
            </para>
            <para>In this case, you see a certificate request with the
            subject distinguished name <literal>o=Grid, OU=GlobusTest,
            OU=simpleCA-elephant.globus.org, OU=local, CN=Joe User</literal>.
            </para>
        </example>
    </section> <!-- Examining a Certificate Request -->
    
    <section>
        <title>Signing a Certificate Request</title>
        <para>If you are satisfied with the certificate request and are
        willing to sign it, use the &gridcasign; command to do so. The
        command will store a copy of the newly signed certificate in the
        SimpleCA directory, so that you can keep track of what you've signed,
        and will also write it to the value of the <option>-out</option>
        parameter. Transmit this result file back to the user which requested
        the certificate.
        </para>

        <example>
            <title>Sign with &gridcasign;</title>

            <screen><prompt role="simpleca"/><command>grid-ca-sign -in certreq.pem -out cert.pem</command>
<computeroutput>

To sign the request
please enter the password for the CA key: 

The new signed certificate is at: /home/simpleca/.globus/simpleCA/newcerts/01.pem</computeroutput></screen>
        </example>

        <para>
            Once you've signed the certificate, if it is a user certificate,
            you must communicate it back to the user, perhaps via email.
        </para>
    </section> <!-- Signing a Certificate Request -->

    <section>
        <title>Revoking a Certificate</title>
        <para>
        SimpleCA does not yet provide a convenient interface to revoke
        a signed certificate, but it can be done with the
        <command>openssl</command> command.
        </para>

        <para>
        <example>
            <title>Revoke a certificate</title>
            <screen><prompt role="simpleca"/><command>openssl ca -config ~/.globus/simpleCA/grid-ca-ssl.conf -revoke ~/.globus/simpleCA/newcerts/01.pem</command>
<computeroutput>Using configuration from /home/simpleca/.globus/simpleCA/grid-ca-ssl.conf
Enter pass phrase for /home/simpleca/.globus/simpleCA/private/cakey.pem:
Revoking Certificate 01.
Data Base Updated</computeroutput></screen>
        </example>
        </para>

        <para>Once a certificate is revoked, you can generate a Certificate
        Revocation List (CRL) for your CA, which will be a signed list of
        certificates which have been revoked. Sites which use your CA will
        need to keep the CRL up to date to be able to reject revoked
        certificates. This CRL can be generated with an
        <command>openssl</command> command. See
        <citerefentry><refentrytitle>ca</refentrytitle><manvolnum>1</manvolnum></citerefentry> for details
        about how to control the CRL lifetime and other options.</para>

        <para>
        <example>
        <title>Create CRL</title>
        <screen><prompt role="simpleca"/><command>openssl ca -config ~/.globus/simpleCA/grid-ca-ssl.conf -gencrl > <filename><replaceable>CAHASH</replaceable>.crl</filename></command>
<computeroutput>Using configuration from /home/simpleca/.globus/simpleCA/grid-ca-ssl.conf
Enter pass phrase for /home/simpleca/.globus/simpleCA/private/cakey.pem:
</computeroutput></screen>
        </example>
        </para>

        <para>
        The output file
        <filename><replaceable>CAHASH</replaceable>.crl</filename> (based
        on the hash of your CA subject name) should be distributed to 
        sites which trust your CA, so that they can install it into
        the trusted certificate directory.
        </para>
    </section> <!-- Revoking a Certificate -->

    <section>
        <title>Renewing a CA</title>
        <para>
        The <command>openssl</command> command can be used to renew a
        CA certificate. This will generate a new CA certificate with the
        same subject name and private key as before, but valid for a
        different time interval. This new certificate packaged and distributed
        as before using <olink targetdoc="simplecaAdmin"
        targetptr="grid-ca-package"/>.
        </para>

        <example>
            <title>Renew CA Certificate</title>

            <para><screen><prompt role="simpleca"/><command>openssl req -key ~/.globus/simpleCA/private/cakey.pem -new -x509 -days 1825 -out newca.pem -config ~/.globus/simpleCA/grid-ca-ssl.conf</command>
<computeroutput>You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Level 0 Organization [Grid]:
Level 0 Organizational Unit [GlobusTest]:
Level 1 Organizational Unit [simpleCA-elephant.globus.org]:
Name (E.g., John M. Smith) []:</computeroutput><userinput>Globus Simple CA</userinput></screen>
            </para>

            <para>
            <important><para>The Subject Name of the new certificate must match
            <emphasis>exactly</emphasis> the previous certificate name, or
            clients will not recognize it as the correct certificate.</para>
            </important>
            </para>
         </example>   
    </section>
</chapter> <!-- Using a SimpleCA -->

<chapter id="simpleca-admin-security_considerations"><title>Security Considerations </title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../Cred_Mgmt_SimpleCA_Security_Considerations_Frag.xml"/>
</chapter>
</part>

<part id="simpleca-admin-reference">
    <title>Simple CA Command Reference</title>

<xi:include xmlns="xi:http://www.w3.org/2001/XInclude"
    href="../Cred_Mgmt_SimpleCA_Interface_Commandline_Frag.xml"/>
</part>
    <glossary role="auto" id="glossary-simplecaAdmin">
        <!-- 
        <remark>some terms not in the docs but wanted in glossary: 
        <glossterm>scheduler</glossterm>
        </remark>
        -->
        <glossdiv><title>A</title>
            <glossentry>
                <glossterm>Dummy term</glossterm>
                <glossdef>
                    <para>This is a dummy entry for the automatic glossary database. Do not edit.</para>
                </glossdef>
            </glossentry>
        </glossdiv>
    </glossary>
</book>
