<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../xinclude.mod" >
%xinclude;

]>
<book id="gsicDeveloper">
<title>GT <replaceable role="entity">version</replaceable> GSI C: Developer&apos;s Guide</title>
<titleabbrev>Developer&apos;s Guide</titleabbrev>
<bookinfo id="gsic-developer-introduction">
<abstract>  <title>Introduction</title>
  <para>This component provides an API for authentication and two APIs for
authorization.</para>
  <para>The authentication API is an implementation of the
GSS-API (RFC 2743 and RFC 2744) extended with the functions described in
the GSS-API Extensions document.</para>
  <para>On the authorization front there is a coarse-grained API, which in
 addition to authorizing also provides a mapping function, and an API
 that allows  finer grained authorization decisions to be made. The
 finer grained API follows the subject, object, action paradigm.</para>
  <para>Both of the authorization APIs allow different back end implementations 
through the use of dynamic library loading.
</para></abstract>
</bookinfo>

<chapter id="gsic-developer-beforeyoubegin">
  <title>Before you begin</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Feature_Summary_Frag.xml"></xi:include>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Platform_Summary_Frag.xml"></xi:include>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Compatibility_Summary_Frag.xml"></xi:include>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Dependencies_Summary_Frag.xml"></xi:include>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Security_Considerations_Frag.xml"></xi:include>
 
</chapter>
  <chapter id="gsic-developer-scenarios">
    <title>Usage scenarios</title>
    <para>There is no content available at this time.</para>
  </chapter>
  <chapter id="gsic-developer-tutorials">
    <title>Tutorials</title>
    <para>There are no tutorials available at this time</para>
  </chapter>
<chapter id="gsic-developer-archdes">
  <title>Architecture and design overview</title>
  <section>
    <title>Authentication</title>
    <para>As mentioned in the introduction, the GSI C security framework uses 
the GSSAPI API and extensions to it to abstract security mechanism specific 
details. Below the GSSAPI layer there exist multiple APIs for dealing with 
      credential management, X.509 certificates in general and <glossterm baseform="proxy certificate">proxy certificates</glossterm> 
in particular as well as security configuration. Each of these APIs is 
described in more detail below.</para>
    <para>The general design principle guiding these APIs is data encapsulation. 
Data structures (handles and attributes) capture and encapsulate the state 
of the system. These data structures are then acted upon by various getters 
and setters, as well as other functions.</para>
    <section>
      <title> The GSS Assist API</title>
      <para>The GSS Assist API provides helper functions wrapping the process of security (GSS) 
context establishment, support for gridmap authorization and various other helper 
functions that wrap GSSAPI functions and capture common usage.</para>
    </section>
    <section>
      <title>GSSAPI</title>
      <para>The GSSAPI implementation provided by the toolkit is based upon SSL/TLS with 
extensions to the standard path validation mechanism to handle proxy certificates. It relies 
upon the credential and certificate utility APIs for general certificate acquisition 
and inspection functionality.</para>
    </section>
    <section>
      <title>The Callback API</title>
      <para>This API provides a callback that can be plugged into the OpenSSL path validation 
framework. This callback provides the additions to path validation required for dealing 
with proxy certificates and X.509 extensions. Furthermore, it allows applications to inspect data, e.g. the 
validated certificate chain, after the validation is done.</para>
    </section>
    <section>
      <title>The Certificate Utilities API</title>
      <para>The Certificate Utilities API provides helper functions for dealing with X.509 
certificates. This API does not use the &quot;handle&quot; concept mentioned in the introduction. 
Rather, it operates on datatypes provided by the OpenSSL APIs.</para>
    </section>
    <section>
      <title>The Credential API</title>
      <para>The Credential API deals with reading and writing certificates from and to the file system and the OpenSSL I/O abstraction layer. It also provides functions for inspecting and validating the read credentials.</para>
    </section>
    <section>
      <title>The Proxy APIs</title>
      <para>The Proxy APIs provide a implementation of the X.509 Proxy Certificate Extension ASN.1 structure as well as functions for creating new proxies.</para>
    </section>
    <section>
      <title>The System Configuration API</title>
      <para>This API serves as a abstraction layer for OS specific information needed by the security infrastructure. It provides OS specific functions for discovering certificates from a set of predefined standard locations as well as functions for doing the same for various configuration files.</para>
    </section>
  </section>
  <section>
    <title>Authorization</title>
    <para>As described in the introduction the GSI C security framework essentially provides two authorization APIs, the generic Authorization API and the Gridmap API. These APIs differ in various ways:</para>
    <para>The Authorization API provides a framework that allows callouts to 3rd party authorization solutions, does not provide a default authorization mechanism and is  geared to authorizing the subject-action-object tuple. </para>
    <para>The Gridmap API on the other hand, while allowing for custom callouts to be plugged in and override the default behavior, provides a default authorization and mapping mechanism based on the <glossterm>grid map file</glossterm>. Also, it only furnishes the callouts with information about the entity to be authorized, i.e. it does not provide information on the action and the object, so it is somewhat simpler in its approach. Finally, it provides the ability to map authorized entities to local system entities, e.g. UNIX user names. More information on the interface used for Gridmap callouts can be found <ulink url="../GSIAuthorizationCalloutSpecification-04.pdf">here</ulink>.</para>
  </section>
</chapter>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_API_Frag.xml"></xi:include>


    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_Protocol_Frag.xml"></xi:include>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_Commandline_Frag.xml"></xi:include>
  
  <!-- 
  <section id="gsic-developer-guis"><title>Overview of Graphical User Interfaces</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_GUI_Frag.xml"/>
  </section>

  <section id="gsic-developer-domain"><title>Semantics and syntax of domain-specific interface</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_Domain_Frag.xml"/>
  </section>
  -->
  
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../GSIC_Interface_Config_Frag.xml"/>
  
  <chapter id="gsic-developer-env"><title>Environment variable interface</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../GSIC_Interface_Env_Frag.xml"></xi:include>
  </chapter>



<chapter id="gsic-developer-debugging">
  <title>Debugging</title>
  <para>For information about system administrator logs, 
    see <olink targetdoc="gsicAdmin" targetptr="gsic-admin-debugging"/> in the GSI C Admin Guide.</para>
</chapter>
<chapter id="gsic-developer-troubleshooting">
  <title>Troubleshooting</title>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../Credential_Troubleshooting_Frag.xml"></xi:include>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../Gridmap_Troubleshooting_Frag.xml"></xi:include>
</chapter>
<chapter id="gsic-developer-relateddocs">
  <title>Related Documentation</title>
  <para>
<itemizedlist>
      <listitem>
        <simpara><ulink url="http://www.faqs.org/rfcs/rfc3820.html">RFC 3820</ulink> Proxy Certificates</simpara>
      </listitem>
      <listitem>
        <simpara><ulink url="http://www.faqs.org/rfcs/rfc2744.html">RFC 2744</ulink> GSSAPI: C-bindings</simpara>
      </listitem>
      <listitem>
        <simpara><ulink url="http://www.faqs.org/rfcs/rfc2743.html">RFC 2743</ulink> GSSAPI</simpara>
      </listitem>
      <listitem>
        <simpara>
          <ulink url="http://www.ggf.org/documents/GWD-I-E/GFD-E.024.pdf">GSSAPI Extensions</ulink>
        </simpara>
      </listitem>
      <listitem>
        <simpara><ulink url="http://www.faqs.org/rfcs/rfc2246.html">RFC 2246</ulink> TLS</simpara>
      </listitem>
      <listitem>
        <simpara>
          <ulink url="http://www.globus.org/toolkit/docs/3.0/gsi/GSI-message-specification-02.doc">Grid Security Infrastructure Message Specification</ulink>
        </simpara>
      </listitem>
    </itemizedlist>
</para>
</chapter>
  <glossary role="auto" id="glossary-gsicDeveloper">
    <!-- 
    <remark>some terms not in the docs but wanted in glossary: 
    <glossterm>scheduler</glossterm>
    </remark>
    -->
    <glossdiv><title>A</title>
      <glossentry>
        <glossterm>Dummy term</glossterm>
        <glossdef>
          <para>This is a dummy entry for the automatic glossary database. Do not edit.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
  </glossary>
</book>