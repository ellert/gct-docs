<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>GT 6 Quickstart</title>
</articleinfo>
<section id="quickstart">
<title>Introduction</title>
<simpara>This is a quickstart that shows a full installation of the Toolkit on
two Fedora Linux machines, named <emphasis role="strong"><literal>elephant</literal></emphasis> and <emphasis role="strong"><literal>donkey</literal></emphasis>. It
shows the installation of prereqs, installation of the toolkit, creation
of certificates, and configuration of services. It is designed to
supplement the <ulink url="../../admin/install/index.html">main admin guide</ulink>,
Scenarios are shown for running GridFTP and GRAM5 services, and using
GridFTP and GRAM clients.</simpara>
<section id="q-typography">
<title>Typographical Conventions</title>
<simpara>Where there is a command to be typed, it will be preceded by one of the
following prompts:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>root# </literal>, <literal>root@donkey# </literal></emphasis>
</term>
<listitem>
<simpara>
     Run this command as the <emphasis role="strong"><literal>root</literal></emphasis> super-user, on the <emphasis role="strong"><literal>elephant</literal></emphasis> or <emphasis role="strong"><literal>donkey</literal></emphasis> hosts respectively. You might have to use a command like <emphasis role="strong"><literal>su</literal></emphasis>(8) or <emphasis role="strong"><literal>sudo</literal></emphasis>(8) to start a root shell before executing the command.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>myproxy% </literal></emphasis>
</term>
<listitem>
<simpara>
     Run this command as the <emphasis role="strong"><literal>myproxy</literal></emphasis> user, on the <emphasis role="strong"><literal>elephant</literal></emphasis> host. This user is created automatically when the <emphasis role="strong"><literal>myproxy-server</literal></emphasis> package is installed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>quser% </literal>, <literal>quser@donkey% </literal></emphasis>
</term>
<listitem>
<simpara>
     Run this command as the normal user account you are intending to interact with your Globus sevices, on the <emphasis role="strong"><literal>elephant</literal></emphasis> or <emphasis role="strong"><literal>donkey</literal></emphasis> hosts. In this document, we use the <emphasis role="strong"><literal>quser</literal></emphasis> accout for this, but if you have another user, you can use it for that purpose.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Commands themselves will be typeset as <emphasis role="strong"><literal>run-this-command
-with-arguments</literal></emphasis>, and responses to the commands like this <literal>Some
Response Text</literal>. If there is some portion of a command which should be
replaced by value, such as a version number, it will be typeset like
this: <emphasis>REPLACEME</emphasis>.</simpara>
<simpara>Finally, in some cases you will be prompted for a passphrase. When that
occurs, the entry of the passphrase will be indicated by <literal>******</literal>,
even though nothing will be printed to the screen.</simpara>
</section>
<section id="q-prereq">
<title>Prerequisites</title>
<simpara>We distribute the Globus Toolkit 6 as a set of RPM and Debian packages
for Linux systems, as an installable package for Mac OS X, as a .zip
file for Windows and Cygwin, as well as a source installer which can be
used on other operating systems. In this quickstart, we will be
installing RPM packages. Thus, it is a prerequisite for following this
quickstart that you are running a distribution for which we provide
RPMs. If you are running a supported Debian or Ubuntu system, the
process is very similar, but you&#8217;ll need to use the <emphasis role="strong"><literal>apt-get</literal></emphasis> or
similar tools to install the packages. For the source installer, there
is more work involved, and you&#8217;ll need to consult the full installation
guide.</simpara>
<simpara>First, we will to set up our system to use the Globus package
repository. This repository contains the Globus software packages,
signed by our build manager. We provide RPM and Debian packages that
contain a source configuration file and the public key which can be used
to verify the packages. If your distribution has Globus 6.0 packages
within its repository, you can skip to the next section.</simpara>
<simpara>The globus toolkit package repo RPM can be downloaded from
<ulink url="http://www.globus.org/ftppub/gt6/installers/repo/globus-toolkit-repo-latest.noarch.rpm">the
repo RPM package on globus.org</ulink>.</simpara>
<simpara>To install binary RPMs, download the globus-toolkit-repo package from
the link above and install it with the command:</simpara>
<screen>root# rpm -hUv globus-toolkit-repo-latest.noarch.rpm</screen>
<simpara>The globus toolkit package repo Debian file can be downloaded from
<ulink url="http://www.globus.org/ftppub/gt6/installers/repo/globus-toolkit-repo%5flatest%5fall.deb">the
repo Debian package on globus.org</ulink>.</simpara>
<simpara>To install Debian or Ubuntu package, download the globus-toolkit-repo
package from the link above and install it with the command:</simpara>
<screen>root# dpkg -i globus-toolkit-repo_latest_all.deb</screen>
<simpara>Once you&#8217;ve installed the Globus repository package, you can use your
operating system&#8217;s packaging tools: <emphasis role="strong"><literal>yum</literal></emphasis> or <emphasis role="strong"><literal>apt-get</literal></emphasis>, to
install the Globus components.</simpara>
<important>
<simpara>For operating systems based on RHEL (such as Red Hat Enterprise Linux,
CentOS, and Scientific Linux), the compatible EPEL repository must be
enabled before installing myproxy. For OS versions 5.x, install the
<ulink url="http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm">EPEL
5 package</ulink>, and for OS version 6.x, use
<ulink url="http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-7.noarch.rpm">6
package</ulink>.
For information about installing these, see the
<ulink url="http://fedoraproject.org/wiki/EPEL/FAQ#How%5fcan%5fI%5finstall%5fthe%5fpackages%5ffrom%5fthe%5fEPEL%5fsoftware%5frepository.3F">EPEL
FAQ</ulink>.
This step is not needed for Fedora, Debian, or Ubuntu systems.</simpara>
</important>
<important>
<simpara>For SUSE Linux Enterprise Server systems which will be using
globus-connect-server, a newer version of apache2 must be installed in
order for myproxy-oauth to work. This is available by adding the Apache2
and Apache2 Modules for SLES11 repositories from opensuse.org.
These can be installed by running these commands:</simpara>
<screen>root# zypper ar http://download.opensuse.org/repositories/Apache/SLE_11_SP3/Apache.repo
root# zypper ar http://download.opensuse.org/repositories/Apache:/Modules/Apache_SLE_11_SP3/Apache:Modules.repo
root# rpm --import http://download.opensuse.org/repositories/Apache/SLE_11_SP3/repodata/repomd.xml.key
root# rpm --import http://download.opensuse.org/repositories/Apache:/Modules/Apache_SLE_11_SP3/repodata/repomd.xml.key</screen>
</important>
</section>
</section>
<section id="q-first">
<title>Setting up the first machine (GridFTP, GRAM, and MyProxy services)</title>
<section id="q-toolkit">
<title>Installing the Toolkit</title>
<simpara>Install packages:</simpara>
<screen>root# yum install globus-gridftp globus-gram5 globus-gsi myproxy \
    myproxy-server myproxy-admin</screen>
<simpara>This will install the GridFTP, GRAM, and MyProxy services, as well as
set up a basic SimpleCA so that you can issue security credentials for
users to run the Globus services.</simpara>
<note>
<simpara>For Debian and Ubuntu systems, use <emphasis role="strong"><literal>apt-get</literal></emphasis> or <emphasis role="strong"><literal>aptitude</literal></emphasis> or another package manager to install the same packages as in the <emphasis role="strong"><literal>yum</literal></emphasis> command above.</simpara>
</note>
</section>
<section id="q-security">
<title>Setting up security on your first machine</title>
<simpara>The Globus Toolkit uses X.509 certificates and proxy certificates to
authenticate and authorize grid users. For this quickstart, we use the
Globus <ulink url="">SimpleCA</ulink> tools to manage our own Certificate Authority, so
that we don&#8217;t need to rely on any external entitty to authorize our grid
users.</simpara>
<note>
<simpara>In many deployment scenarios, certificates for both services and users
are obtained through one or more third party CAs. In such scenarios, it
is unnecessary to use SimpleCA or MyProxy to issue certificates. Since
this quickstart is intended to describe a simple, standalone deployment
scenario, we describe how to use these tools to issue your own
certificates.</simpara>
</note>
<simpara>When the <emphasis role="strong"><literal>globus-simple-ca</literal></emphasis> package is installed, it will
automatically create a new Certificate Authority and deploy its public
certificate into the globus trusted certificate directory. It will also
create a host certificate and key, so that the Globus services will be
able to run.</simpara>
<simpara>We&#8217;ll also need to copy the host certificate and key into place so that
the myproxy service can use it as well.</simpara>
<screen>root# install -o myproxy -m 644 \
    /etc/grid-security/hostcert.pem \
    /etc/grid-security/myproxy/hostcert.pem
root# install -o myproxy -m 600 \
    /etc/grid-security/hostkey.pem \
    /etc/grid-security/myproxy/hostkey.pem</screen>
</section>
<section id="_creating_a_myproxy_server">
<title>Creating a MyProxy Server</title>
<simpara>We are going to create a MyProxy server on elephant, following the
instructions at
<ulink url="http://grid.ncsa.illinois.edu/myproxy/fromscratch.html#server">http://grid.ncsa.illinois.edu/myproxy/fromscratch.html#server</ulink>.
This will be used to store our user&#8217;s certificates. In order to enable
myproxy to use the SimpleCA, modify the <literal>/etc/myproxy-server.config</literal>
file, by uncommenting every line in the section  file, by uncommenting
every line in the section <literal>Complete Sample Policy #1</literal> such that
section looks like this <ulink url="myproxy-server.config">myproxy
configuration</ulink>:</simpara>
<screen>#
# Complete Sample Policy #1 - Credential Repository
#
# The following lines define a sample policy that enables all
# myproxy-server credential repository features.
# See below for more examples.
accepted_credentials       "*"
authorized_retrievers      "*"
default_retrievers         "*"
authorized_renewers        "*"
default_renewers           "none"
authorized_key_retrievers  "*"
default_key_retrievers     "none"
trusted_retrievers         "*"
default_trusted_retrievers "none"
cert_dir /etc/grid-security/certificates</screen>
<simpara>We&#8217;ll next add the myproxy user to the simpleca group so that the
myproxy server can create certificates.</simpara>
<screen>root# usermod -a -G simpleca myproxy</screen>
<simpara>Start the myproxy server:</simpara>
<screen>root# service myproxy-server start
Starting myproxy-server (via systemctl):                   [  OK  ]</screen>
<note>
<simpara>For Debian and Ubuntu systems, use the <emphasis role="strong"><literal>invoke-rc.d</literal></emphasis> command in place of <emphasis role="strong"><literal>service</literal></emphasis>.</simpara>
</note>
<simpara>Check that it is running:</simpara>
<screen>root# service myproxy-server status
myproxy-server.service - LSB: Startup the MyProxy server daemon
          Loaded: loaded (/etc/rc.d/init.d/myproxy-server)
          Active: active (running) since Fri, 02 Nov 2012 09:07:51 -0400; 1min 20s ago
         Process: 1205 ExecStart=/etc/rc.d/init.d/myproxy-server start (code=exited, status=0/SUCCESS)
          CGroup: name=systemd:/system/myproxy-server.service
                  └ 1214 /usr/sbin/myproxy-server -s /var/lib/myproxy

Nov 02 09:07:51 elephant.globus.org runuser[1210]: pam_unix(runuser:session):...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1212]: myproxy-server v5.9...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1212]: reading configurati...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1212]: usage_stats: initia...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1212]: Socket bound to 0.0...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1212]: Starting myproxy-se...
Nov 02 09:07:51 elephant.globus.org runuser[1210]: pam_unix(runuser:session):...
Nov 02 09:07:51 elephant.globus.org myproxy-server[1205]: Starting myproxy-se...</screen>
<simpara>The important thing to see in the above is that the process is in the
<literal>active (running)</literal> state. [NOTE]</simpara>
<simpara>For other Linux distributions which are not using systemd, the output will be different. You should still see some information indicating the service is running.</simpara>
<simpara>As a final sanity check, we&#8217;ll make sure the myproxy TCP port <literal>7512</literal>
is in use via the netstat command:</simpara>
<screen>root# netstat -an | grep 7512
tcp        0      0 0.0.0.0:7512            0.0.0.0:*               LISTEN</screen>
<section id="q-user-credential">
<title>User Credentials</title>
<simpara>We&#8217;ll need to specify a full name and a login name for the user we&#8217;ll
create credentials for. We&#8217;ll be using the <literal>QuickStart User</literal> as the
user&#8217;s name and <emphasis role="strong"><literal>quser</literal></emphasis> as user&#8217;s account name. You can use this
as well if you first create a quser unix account. Otherwise, you can use
another local user account. Run the <emphasis role="strong"><literal>myproxy-admin-adduser</literal></emphasis>
command as the <emphasis role="strong"><literal>myproxy</literal></emphasis> user to create the credentials. You&#8217;ll be
prompted for a passphrase, which must be at least 6 characters long, to
encrypt the private key for the user. You must communicate this
passphrase to the user who will be accessing this credential. He can use
the <emphasis role="strong"><literal>myproxy-change-passphrase</literal></emphasis> command to change the passphrase.</simpara>
<simpara>The command to create the myproxy credential for the user is</simpara>
<screen>root# su - -s /bin/sh myproxy
myproxy% PATH=$PATH:/usr/sbin
myproxy% myproxy-admin-adduser -c "QuickStart User" -l quser
Legacy library getopts.pl will be removed from the Perl core distribution in the next major release. Please install it from the CPAN distribution Perl4::CoreLibs. It is being used at /usr/sbin/myproxy-admin-adduser, line 42.
Enter PEM pass phrase: ******
Verifying - Enter PEM pass phrase:******

The new signed certificate is at: /var/lib/globus/simple_ca/newcerts/02.pem

using storage directory /var/lib/myproxy
Credential stored successfully
Certificate subject is:
/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=QuickStart User</screen>
</section>
<section id="q-gridmap">
<title>User Authorization</title>
<simpara>Finally, we&#8217;ll create a grid map file entry for this credential, so that
the holder of that credential can use it to access globus services.
We&#8217;ll use the
<ulink url="../..gsic/user/index.html#grid-mapfile-add-entry"><emphasis role="strong"><literal>grid-mapfile-add-entry</literal></emphasis></ulink>
program for this. We need to use the exact string from the output above
as the parameter to the <emphasis>-dn</emphasis> command-line option, and the local account
name of user to authorize as the parameter to the <emphasis>-ln</emphasis> command-line
option.</simpara>
<screen>root# grid-mapfile-add-entry -dn \
    "/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=QuickStart User" \
    -ln quser
Modifying /etc/grid-security/grid-mapfile ...
/etc/grid-security/grid-mapfile does not exist... Attempting to create /etc/grid-security/grid-mapfile
New entry:
"/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=QuickStart User" quser
(1) entry added</screen>
</section>
</section>
<section id="q-gridftp">
<title>Setting up GridFTP</title>
<simpara>Now that we have our host and user credentials in place, we can start a
globus service. This set up comes from the
<ulink url="../..gridftp/admin/index.html">GridFTP Admin Guide</ulink>.</simpara>
<simpara>Start the GridFTP server:</simpara>
<screen>root# service globus-gridftp-server start
Started GridFTP Server                                     [  OK  ]</screen>
<simpara>Check that the GridFTP server is running and listening on the gridftp
port:</simpara>
<screen>root# service globus-gridftp-server status
GridFTP Server Running (pid=20087)
root# netstat -an | grep 2811
tcp        0      0 0.0.0.0:2811            0.0.0.0:*               LISTEN</screen>
<simpara>Now the GridFTP server is waiting for a request, so we&#8217;ll generate a
proxy from the myproxy service by using <emphasis role="strong"><literal>myproxy-logon</literal></emphasis> and then
copy a file from the GridFTP server with the <emphasis role="strong"><literal>globus-url-copy</literal></emphasis>
command. We&#8217;ll use the passphrase used to create the myproxy credential
for <emphasis role="strong"><literal>quser</literal></emphasis>.</simpara>
<screen>quser% myproxy-logon -s elephant
Enter MyProxy pass phrase: ******
A credential has been received for user quser in /tmp/x509up_u1001
quser% globus-url-copy gsiftp://elephant.globus.org/etc/group \
    file:///tmp/quser.test.copy
quser% diff /tmp/quser.test.copy /etc/group</screen>
<simpara>At this point, we&#8217;ve configured the myproxy and GridFTP services and
verified that we can create a security credential and transfer a file.
If you had trouble, check the security troubleshooting section in the
<ulink url="../..gsic/admin/index.html">Security Admin Guide</ulink>. Now we can move
on to setting up GRAM5 resource management.</simpara>
</section>
<section id="q-gram">
<title>Setting up GRAM5</title>
<simpara>Now that we have security and GridFTP set up, we can set up GRAM for
resource management. There are several different Local Resource Managers
(LRMs) that one could configure GRAM to use, but this guide will explain
the simple case of setting up a "fork" jobmanager, without auditing. For
details on all other configuration options, and for reference, you can
see the <ulink url="../..gram5/admin/index.html">GRAM5 Admin Guide</ulink>. The GRAM
service will use the same host credential as the GridFTP service, and is
configured by default to use the fork manager, so all we need to do now
is start the service.</simpara>
<simpara>Start the GRAM gatekeeper:</simpara>
<screen>root# service globus-gatekeeper start
Started globus-gatekeeper                                  [  OK  ]</screen>
<simpara>We can now verify that the service is running and listening on the GRAM5
port:</simpara>
<screen>root# service globus-gatekeeper status
globus-gatekeeper is running (pid=20199)
root# netstat -an | grep 2119
tcp6       0      0 :::2119                 :::*                    LISTEN</screen>
<simpara>The gatekeeper is set up to run, and is ready to authorize job
submissions and pass them on to the fork job manager. We can now run a
couple of test jobs:</simpara>
<screen>quser% myproxy-logon -s elephant
Enter MyProxy pass phrase: ******
A credential has been received for user quser in /tmp/x509up_u1001.
quser% globus-job-run elephant /bin/hostname
elephant.globus.org
quser% globus-job-run elephant /usr/bin/whoami
quser</screen>
<simpara>If you had trouble, check the security troubleshooting section in the
<ulink url="../..gsic/admin/index.html">Security Admin Guide</ulink>. To learn more
about using GRAM 5, take a look at the
<ulink url="../..gram5/user/index.html#gram5-user-submitting-jobs">GRAM User&#8217;s
Guide</ulink>.</simpara>
</section>
</section>
<section id="q-second">
<title>Setting up your second machine</title>
<simpara>Alas, it&#8217;s not much of a grid with just one machine. So let&#8217;s start up
on another machine and add it to this little test grid.</simpara>
<section id="q-prereq2">
<title>Setting up your second machine: Prereqs</title>
<simpara>See <ulink url="#q-prereq">Prereqs</ulink>.</simpara>
</section>
<section id="q-toolkit2">
<title>Setting up your second machine: Installation</title>
<simpara>Install packages as before:</simpara>
<screen>root@donkey# yum install globus-gridftp myproxy globus-gram5</screen>
</section>
<section id="q-security2">
<title>Setting up your second machine: Security</title>
<simpara>Now let&#8217;s get security set up on the second machine. We&#8217;re going to
trust the original simpleCA to this new machine; there&#8217;s no need to
create a new one. First, we&#8217;ll bootstrap trust of the SimpleCA running
on elephant:</simpara>
<screen>root@donkey# myproxy-get-trustroots -b -s elephant
Bootstrapping MyProxy server root of trust.
New trusted MyProxy server: /O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/CN=host/elephant.globus.org
New trusted CA (e3d1c34d.0): /O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/CN=Globus Simple CA
Trust roots have been installed in /etc/grid-security/certificates/.</screen>
<simpara>This allows clients and services on <emphasis role="strong"><literal>donkey</literal></emphasis> to trust certificates
which are signed by the CA on <emphasis role="strong"><literal>elephant</literal></emphasis> machine. If we weren&#8217;t
going to run any Globus services on <emphasis role="strong"><literal>donkey</literal></emphasis>, then we could stop
here. Users on <emphasis role="strong"><literal>donkey</literal></emphasis> could acquire credentials using the
<emphasis role="strong"><literal>myproxy-logon</literal></emphasis> command and perform file transfers and execute
jobs using the <emphasis role="strong"><literal>globus-url-copy</literal></emphasis> and <emphasis role="strong"><literal>globus-job-run</literal></emphasis>
commands. However, we&#8217;ll continue to configure the GridFTP and GRAM5
services on <emphasis role="strong"><literal>donkey</literal></emphasis> as well.</simpara>
<simpara>We&#8217;re going to create the host certificate for donkey, but we create it
on elephant, so that we don&#8217;t have to copy the certificate request
between machines. The <emphasis role="strong"><literal>myproxy-admin-addservice</literal></emphasis> command will
prompt for a passphrase for this credential. We will use this passphrase
to retrieve the credential on donkey.</simpara>
<screen>myproxy% myproxy-admin-addservice -c "donkey.globus.org" -l donkey
Legacy library getopts.pl will be removed from the Perl core distribution in the next major release. Please install it from the CPAN distribution Perl4::CoreLibs. It is being used at /sbin/myproxy-admin-addservice, line 42.
Enter PEM pass phrase:******
Verifying - Enter PEM pass phrase:******

The new signed certificate is at: /var/lib/globus/simple_ca/newcerts/03.pem

using storage directory /var/lib/myproxy
Credential stored successfully
Certificate subject is:
/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=donkey.globus.org</screen>
<simpara>Next we&#8217;ll retrieve the credential on donkey as the root user.</simpara>
<screen>root@donkey# myproxy-retrieve -s elephant -k donkey.globus.org -l donkey
Enter MyProxy pass phrase: ******
Credentials for quser have been stored in
/etc/grid-security/hostcert.pem and
/etc/grid-security/hostkey.pem.</screen>
<simpara>At this point, we no longer need to have <emphasis role="strong"><literal>donkey</literal></emphasis>'s host
certificate on <emphasis role="strong"><literal>elephant</literal></emphasis>'s myproxy server, so we&#8217;ll delete it.</simpara>
<screen>root@donkey# myproxy-destroy -s elephant -k donkey.globus.org -l donkey
MyProxy credential 'donkey.globus.org' for user donkey was successfully removed.</screen>
<simpara>And as a final setup, we&#8217;ll add quser&#8217;s credential to the grid-mapfile
on <emphasis role="strong"><literal>donkey</literal></emphasis>, so that the <emphasis role="strong"><literal>quser</literal></emphasis> account can access services
there as well.</simpara>
<screen>root@donkey# grid-mapfile-add-entry -dn \
    "/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=QuickStart User" \
    -ln quser
Modifying /etc/grid-security/grid-mapfile ...
/etc/grid-security/grid-mapfile does not exist... Attempting to create /etc/grid-security/grid-mapfile
New entry:
"/O=Grid/OU=GlobusTest/OU=simpleCA-elephant.globus.org/OU=local/CN=QuickStart User" quser
(1) entry added</screen>
<simpara>At this point, we have set up security on donkey to trust the CA on
elephant. We have created a host certificate for donkey so that we can
run Globus services on donkey, and we have enabled the quser account to
use services on donkey. The last thing to do is to turn on the Globus
services on donkey.</simpara>
</section>
<section id="q-gridftp2">
<title>Setting up your second machine: GridFTP</title>
<simpara>GridFTP set up on the second machine is identical to the first. I&#8217;ll
just list the commands here; see <ulink url="#q-gridftp">#q-gridftp</ulink> for additional
information.</simpara>
<screen>root@donkey# service globus-gridftp-server start
Started GridFTP Server                                     [  OK  ]</screen>
<simpara>Now we can test it.</simpara>
<simpara>First, we&#8217;ll retrive a proxy credential from the myproxy server so that
the user on donkey can interact with the Globus services. Here we&#8217;ll use
the same passphrase as we used to create the <emphasis role="strong"><literal>quser</literal></emphasis> credential.</simpara>
<screen>quser@donkey% myproxy-logon -s elephant
Enter MyProxy pass phrase: ******
A credential has been received for user quser in /tmp/x509up_u1001.</screen>
<simpara>Next we&#8217;ll transfer a file between the gridftp servers on donkey and
elephant:</simpara>
<screen>quser@donkey% globus-url-copy gsiftp://elephant.globus.org/etc/group \
   gsiftp://donkey.globus.org/tmp/from-elephant</screen>
<simpara>That was a slightly more complicated test than we ran on elephant
earlier. In this case, we did a third-party transfer between two GridFTP
servers. It worked, so I have the local and remote security configured
correctly.</simpara>
<simpara>If you run into problems, perhaps you have a firewall between the two
machines? GridFTP needs to communicate on data ports, not just port
2811. The error for this condition looks like:</simpara>
<screen>error: globus_ftp_client: the server responded with an error
500 500-Command failed. : callback failed.
500-globus_xio: Unable to connect to 140.221.8.19:42777
500-globus_xio: System error in connect: No route to host
500-globus_xio: A system call failed: No route to host
500 End.</screen>
<simpara>You can set up a range of ports to be open on the firewall and configure
GridFTP to use them. See
<ulink url="../..gridftp/admin/index.html#gridftp-config-security-firewalls">the
GridFTP admin firewall doc.</ulink></simpara>
</section>
<section id="q-gram2">
<title>Setting up your second machine: GRAM5</title>
<simpara>Now we can submit a staging job. This job will copy the
<emphasis role="strong"><literal>/bin/echo</literal></emphasis> program from donkey to a file called <literal>/tmp/my_echo</literal>.
Then it runs it with some arguments, and captures the stderr/stdout.
Finally, it will clean up the . Then it runs it with some arguments, and
captures the stderr/stdout. Finally, it will clean up the <literal>my_echo</literal>
file when execution is done.  file when execution is done.</simpara>
<screen>quser@donkey% globus-job-run elephant \
    -x '(file_stage_in=(gsiftp://donkey.globus.org/bin/echo /tmp/echo)) \
        (file_clean_up=/tmp/echo)' /bin/ls -l /tmp/echo
 -rw-r--r-- 1 quser quser 27120 Nov  2 09:56 /tmp/echo</screen>
<simpara>This example staged in a file, had an executable act on that file, and
cleaned up the file afterward.</simpara>
<simpara>You can get other examples of GRAM files from
<ulink url="../..gram5/user/index.html#gram5-user-usagescenarios">GRAM usage
scenarios</ulink>.</simpara>
</section>
</section>
<section id="q-conclusion">
<title>Conclusion</title>
<simpara>Hopefully this guide has been helpful in familiarizing you with some of the
administration tasks and tools to use the Globus Toolkit. If you&#8217;ve reached
this point successfully, you should have enough knowledge to enable additional
hosts to use your grid by repeating the tasks in <ulink url="#q-second">Setting up your
second machine</ulink>. Also, by repeating the tasks in <ulink url="#q-user-credential">User
Credentials </ulink> and <ulink url="#q-gridmap">User Authorization </ulink> you can enable
additional users to access your compute and data resources.</simpara>
</section>
</article>
