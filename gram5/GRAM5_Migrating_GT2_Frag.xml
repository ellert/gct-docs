<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

  <chapter id="gram5-migrating-gt2">
    <title>Migrating GRAM from GT2</title>
    <indexterm type="gram5"><primary>migrating</primary><secondary>from 2.4.x</secondary></indexterm>
<section> <title>Admin - Migration Guide</title>

  <section id="gram5-migrating-gt2-install"><title>Installation / Deployment Differences</title>

<para>In GRAM2, jobs are submitted to a job manager process started by a
Gatekeeper process. In GRAM5, the job submit protocol is the same; however,
all jobs for a particular user and LRM run in the same job manager process.
</para>

</section> <!-- Install / Deploy Differences -->


  <section id="gram5-migrating-gt2-security"><title>Security Differences</title>

    <section id="gram5-migrating-gt2-proxies"><title>Proxies and Delegation</title>

<para>
  In GRAM2, the GRAM client is required to delegate a proxy credential to
  the Gatekeeper so that the job manager can send authenticated job state change
  messages. Because each job is monitored by a separate job manager in GRAM2,
  each job manager has access to a different delegated credential. In GRAM5,
  the shared job manager uses the delegated credential with the latest
  expiration time as its credential.
</para>

<para>
  In GRAM2, the client can control the job manager proxy timeout by setting
  the value of <literal>proxy_timeout</literal> RSL attribute to a time interval
  in seconds indicating when the job manager will exit if the proxy is about
  to expire. In GRAM5, this is a job manager-wide setting and the
  <literal>proxy_timeout</literal> RSL attribute is ignored.
</para>

</section> <!-- Proxies and Delegation -->
</section> <!-- Security Differences -->


    <section id="gram5-migrating-gt2-network"><title>Network Communication</title>

<para>
  In GRAM2, the standard output and standard error streams of a job may be
  sent in near real time to a file server such as the GASS server embedded in
  a <command>globusrun</command> execution. In GRAM5 the same RSL syntax is
  used to name output and error stream destinations, but those are not sent
  until after the job execution is complete. 
</para>

<para>
  In GRAM2, the job manager implements intra-job communication via DUCT and 
  task synchronization via DUROC. These features have been dropped in GRAM5.
</para>

<para>
   GRAM5 adds various protocol extensions to the GRAM2 protocol. This is done
   in a way such that the existing GRAM2 protocol processors will ignore
   the extensions to the messages. Details about the protocol and its extensions
   can be found in the <olink targetdoc="gram5PI"
   targetptr="gram5-interface-protocol">GRAM5 public interface
   document</olink>.
</para>

</section> <!-- Network Communication-->

  <section id="gram5-migrating-gt2-lrmdiff"><title>LRM Interaction Differences</title>
<para>
  In GRAM2, all file system and LRM interactions occur within a perl
  module called by the globus-job-manager-script.pl program. Scheduler-specific
  perl modules implement a number of methods which are used by the job manager:
</para>
  <itemizedlist>
    <listitem><simpara>submit</simpara></listitem>
    <listitem><simpara>poll</simpara></listitem>
    <listitem><simpara>cancel</simpara></listitem>
    <listitem><simpara>signal</simpara></listitem>
    <listitem><simpara>make_scratchdir</simpara></listitem>
    <listitem><simpara>remove_scratchdir</simpara></listitem>
    <listitem><simpara>stage_in</simpara></listitem>
    <listitem><simpara>stage_out</simpara></listitem>
    <listitem><simpara>cache_cleanup</simpara></listitem>
    <listitem><simpara>remote_io_file_create</simpara></listitem>
    <listitem><simpara>proxy_relocate</simpara></listitem>
    <listitem><simpara>proxy_update</simpara></listitem>
  </itemizedlist>

<para>
  Only a small set of these script methods are used in the GRAM5
  implementation.  The subset used is:
  <itemizedlist>
    <listitem><simpara>submit</simpara></listitem>
    <listitem><simpara>signal (called when not using SEG)</simpara></listitem>
    <listitem><simpara>poll (called when not using SEG)</simpara></listitem>
    <listitem><simpara>cancel</simpara></listitem>
  </itemizedlist>
  Some of the functionality has been moved into the job manager or other
  services for performance reasons. 
</para>

</section> <!-- LRM Interaction Differences -->


  <section id="gram5-migrating-gt2-localnode"><title>Local Node Impact</title>

<para>
  In GRAM2, each job submitted would cause the following processes to be
  created:
</para>
  <itemizedlist>
    <listitem><simpara>gatekeeper (short lived)</simpara></listitem>
    <listitem><simpara>job manager (lives the duration of the job)</simpara></listitem>
    <listitem><simpara>perl script (short lived 4 or more instances depending on job type)</simpara></listitem>
    <listitem><simpara>perl script poll called periodically</simpara></listitem>
  </itemizedlist>

<para>
  In GRAM5, each job causes the following processes to be created
</para>
  <itemizedlist>
    <listitem><simpara><command>globus-gatekeeper</command> (short lived)</simpara></listitem>
    <listitem><simpara><command>globus-job-manager</command> (short lived for all but one concurrent instance)</simpara></listitem>
    <listitem><simpara><command>globus-job-manager-script</command> (up to 5 per lifetime of the job manager)</simpara></listitem>
    <listitem><simpara><command>globus-fork-starter</command> (up to 5 per job manager when using the fork LRM and the SEG).</simpara></listitem>
  </itemizedlist>

<para>
  Additionally, there will be a per-scheduler instance of the <glossterm baseform="Scheduler Event Generator">SEG</glossterm>-related program,
  <command>globus-job-manager-event-generator</command>.
</para>

</section> <!-- Local Node Impact -->

</section> <!-- Admin -->

  <section id="gram5-migrating-gt2-user"><title>User - Migration Guide</title>

    <section id="gram5-migrating-gt2-commandlinetools"><title>Command Line Tools</title>
<para>
 The <command>globusrun</command> tool in GRAM2 supports DUROC and MPICH-G
 jobs. This feature has been removed in GRAM5, as well as the command-line
 options related to it.
</para>

</section> <!-- Command Line Tools -->

</section> <!-- User -->

<section> <title>Developer - API and RSL Migration Guide</title>

<para>
   The DUROC and DUCT APIs have been removed in GRAM5.
</para>
</section> <!-- Developer -->
</chapter>
