<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
    <!ENTITY cmdname "globus-scheduler-event-generator">
    <!ENTITY cmd "<command>globus-scheduler-event-generator</command>">
]>
<!-- Canonical version of this document lives in 
$Header: /home/ec2-user/alliance-web/alliance/toolkit/docs/5.2/5.2.5/gram5/globus-scheduler-event-generator-manual.xml,v 1.1 2013/06/19 18:12:53 bester Exp $
-->


<refentry id="globus-scheduler-event-generator">
<refmeta>
<refentrytitle>&cmdname;</refentrytitle>
<manvolnum>8</manvolnum>
<refmiscinfo class="author">University of Chicago</refmiscinfo>
</refmeta>

<refnamediv>
<refname>&cmdname;</refname>
<refpurpose>Process LRM events into a common format for use with GRAM</refpurpose>
</refnamediv>
<refsynopsisdiv>

<cmdsynopsis>
&cmd;
<arg choice="plain">-s <replaceable>LRM</replaceable></arg>
<sbr/>
<arg>-t <replaceable>TIMESTAMP</replaceable></arg>
<arg>-d <replaceable>DIRECTORY</replaceable></arg>
<sbr/>
<arg>-b</arg>
<arg>-p <replaceable>PIDFILE</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para>
The &cmd; program processes information from a local resource manager
to generate LRM-independent events which GRAM can use to track job
state changes. Typically, the &cmd; is started at system boot time
for all LRM adapters which have been installed. The only required parameter
to &cmd; is <option>-s <replaceable>LRM</replaceable></option>, which
indicates what LRM-specific module to load. A list of available modules can
be found by using the
<command>globus-scheduler-event-generator-admin <option>-l</option></command>
command.
</para>

<para>
Other options control how the &cmd; program runs and where its output goes.
These options are:

<variablelist>

<varlistentry>
<term><option>-t <replaceable>TIMESTAMP</replaceable></option></term>
<listitem>
<para>
Start processing events which start at <replaceable>TIMESTAMP</replaceable>
in seconds since the UNIX epoch. If not present, the &cmd; will process
events from the time it was started, and not look for historical events.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-d <replaceable>DIRECTORY</replaceable></option></term>
<listitem>
<para>
Write the event log to files in <replaceable>DIRECTORY</replaceable>, instead
of printing them to standard output. Within
<replaceable>DIRECTORY</replaceable>, logs will be named by the time
when they were created in <replaceable>YYYYMMDD</replaceable> format.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-b</option></term>
<listitem>
<para>
Run the &cmd; program in the background.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-p <replaceable>PIDFILE</replaceable></option></term>
<listitem>
<para>
Write the process-id of &cmd; to <replaceable>PIDFILE</replaceable>.
</para>
</listitem>
</varlistentry>

</variablelist>
</para>
</refsect1>


<refsect1><title>Files</title>
<para>
<variablelist>
<varlistentry><term><filename>/var/lib/globus/globus-seg-<replaceable>LRM</replaceable>/<replaceable>YYYYMMDD</replaceable></filename></term>
<listitem><simpara>LRM-independent event log generated by &cmd;</simpara></listitem>
</varlistentry>
</variablelist>
</para>
</refsect1>

<refsect1><title>See Also</title>
<para>
<citerefentry><refentrytitle>globus-scheduler-event-generator-admin</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
<citerefentry><refentrytitle>globus-job-manager</refentrytitle><manvolnum>8</manvolnum></citerefentry>
</para>
</refsect1>
</refentry>
