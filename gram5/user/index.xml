<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>GT 6.0 GRAM5: User&#8217;s Guide</title>
</bookinfo>
<preface>
<title></title>
<simpara>GRAM services provide secure, remote job submission to different local
resource
  managers in a Grid environment. This document describes the
features of the GRAM service and an overview of tools to use the
service.</simpara>
</preface>
<chapter id="gram5-user-overview">
<title>GRAM5 Overview</title>
<simpara>GRAM provides a uniform, remote interface for executing jobs on compute
resources. GRAM jobs consist of file transfers and program execution on
one or more compute elements managed by a local resource manager. The
GRAM client can submit the job and then later poll for its status, or it
can request that the GRAM service notify it when the job changes state
or completes. While the job is executing, the client may send control
messages to the GRAM service to monitor or modify the job. GRAM provides
reliable job submission, job recovery in case of service or client
failures, file staging, and asynchronous notification messages.</simpara>
<simpara>GRAM achieves its uniform interface by implementing a domain-specific
language called the
<ulink url="../..gram5/developer/index.html#gram5-rsl">Resource Specification
Language</ulink> (RSL) which provides a simple way to express job requirements,
environment, and commands in a specification which is independent of the
local resource manager which will actually execute the job.</simpara>
<simpara>The GRAM protocol is a two-phase protocol, so that when jobs are
submitted to a GRAM service, they will not start until a client has
received a contact handle to the job. The GRAM service will not clean up
a job until it has received acknowledgment from the client that the job
completion state has been received. In the case of transient errors,
GRAM clients can reconnect to the GRAM service to determine job state,
or to update information the job will need to stage output files.</simpara>
<simpara>The GRAM service has been built to work in the presence of client and
service failures without losing state information about jobs. If a
client exits and is restarted, it can request job state information,
update URLs for output files to be staged to, and register a new address
to receive job state callbacks. If a service exits and is restarted, it
will resume processing all existing GRAM jobs from their previous state,
and continue to send state updates to any clients which are registered
for them.</simpara>
<simpara>GRAM provides file staging before and after a job runs, scratch
directory management, and a cache location for common files. File
staging is Grid-aware and access remote storage resources via the
GridFTP, ftp https, http protocols.</simpara>
<simpara>Because the GRAM service implements client callbacks for job state
changes, clients can submit a number of jobs and be notified when each
completes. This allows clients to be more responsive to changes in state
than services which require polling for job completion.</simpara>
<section id="gram5-user-client-tools">
<title>GRAM Client Tools</title>
<simpara>There are a number of GRAM clients which can be used to interact with
the GRAM service. The Globus Toolkit includes <emphasis role="strong"><literal>globusrun</literal></emphasis>,
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, and <emphasis role="strong"><literal>globus-job-run</literal></emphasis>. Other projects
provide higher-level tools which can be used to manage large sets of
jobs.</simpara>
<section id="_condor_g">
<title>Condor-G</title>
<simpara>Condor is a high-throughput job scheduler from the University of
Wisconsin. It provides a facility called Condor-G to run jobs via GRAM.
See the
<ulink url="http://research.cs.wisc.edu/condor/manual/latest/index.html">Condor
documentation</ulink>, especially the section on Grid Universe, which describes
how to write Condor Classified Ads to run jobs using GRAM services. The
<literal>gt5</literal> Grid type provides the best performance for using GRAM with
Condor-G.</simpara>
</section>
<section id="_swift">
<title>Swift</title>
<simpara>The <ulink url="http://www.ci.uchicago.edu/swift/main/">Swift</ulink> system from the
University of Chicago is a data-oriented coarse grained scripting
language that supports dataset typing and mapping, dataset iteration,
conditional branching, and procedural composition. The SwiftScript
language can be used to create workflows that are executed on various
services, including GRAM. See the
<ulink url="http://www.ci.uchicago.edu/swift/guides/userguide.php">Swift User&#8217;s
Guide</ulink> for information about using Swift.</simpara>
</section>
<section id="_gridway">
<title>GridWay</title>
<simpara>The <ulink url="http://www.gridway.org/">GridWay Metascheduler</ulink> enables large-scale,
reliable and efficient sharing of computing resources: clusters,
supercomputers, stand-alone servers. It supports different LRM systems
(PBS, SGE, LSF, Condor) within a single organization or scattered across
several administrative domains. The
<ulink url="http://www.gridway.org/doku.php?id=documentation">GridWay</ulink> manual
describes how to use GridWay.</simpara>
</section>
<section id="_gram_apis">
<title>GRAM APIs</title>
<simpara>In addition to the tools above, you can write your own GRAM clients,
using the public APIs described in the
<ulink url="../..gram5/developer/index.html">GRAM5 Developer&#8217;s Guide</ulink>. The
client APIs there can be used to write custom applications that interact
with GRAM services in C/C++ or Java.</simpara>
</section>
</section>
<section id="_portals_and_science_gateways_that_use_gram">
<title>Portals and Science Gateways that use GRAM</title>
<section id="_xsede">
<title>XSEDE</title>
<simpara><ulink url="https://www.xsede.org">XSEDE</ulink> provides a number of domain-specific
<ulink url="https://www.xsede.org/gateways-overview">science gateways and portals</ulink>,
which provide interfaces to various computation and data resources,
including some managed by GRAM.</simpara>
<simpara>These include <ulink url="http://www.cgd.ucar.edu/amp/">CGD&#8217;s Atmospheric Modeling &amp;
Predictability Section</ulink> from NCAR, the
<ulink url="http://uslims.uthscsa.edu">UltraScan LIMS Portal</ulink> at the Bioinformatics
Core Facility at the University of Texas Health Science Center at San
Antonio, the <ulink url="https://sidgrid.ci.uchicago.edu">Social Informatics Data
(SID) Grid</ulink> at the University of Chicago, and <ulink url="http://scec.org">Southern
California Earthquake Center</ulink> headquarted at the University of Southern
California.</simpara>
</section>
</section>
</chapter>
<chapter id="gram5-user-usagescenarios">
<title>Using GRAM5</title>
<section id="gram5-user-prepare">
<title>Before Getting Started</title>
<section id="_gram_and_security">
<title>GRAM and Security</title>
<simpara>GRAM uses the <ulink url="">Grid Security Infrastructure</ulink> for its security
implementation, based on X.509 certificates and the TLSv1 protocol to
authenticate user identities with GRAM services. Before using GRAM, you
must first obtain a security credential. This is typically done by
requesting a certificate from a site-specific CA, or by using a portal
to obtain a temporary credential. In typical use, GRAM uses a
<ulink url="http://www.ietf.org/rfc/rfc3820.txt">proxy certificate</ulink> which is a
short-term credential digitally signed by a private key. Please read the
<ulink url="../..gsic/user/index.html#gsic-user-basic-procedure">../..gsic/user/index.html#gsic-user-basic-procedure</ulink> to learn more
about how to obtain and use a GSI credential before continuing this
guide.</simpara>
</section>
<section id="gram5-user-resource-names">
<title>GRAM Resource Names</title>
<simpara>Before interacting with a GRAM service, you must know its contact
address. GRAM uses a very flexible URL-like syntax to contain
information about the service&#8217;s hostname, TCP port number, service name,
and security identity. In the basic case, you will only need to use the
service&#8217;s hostname to contact the service. However, if the service is
configured to run on a non-standard port, or with a custom service name,
or credential which doesn&#8217;t match its hostname, you will need to use one
of the longer forms.</simpara>
<simpara>A fully-qualified resource name looks something like
<literal>grid.example.org:2120/jobmanager-sge:/C=US/O=Example/OU=Grid/CN=host/grid.example.org</literal>.
Breaking this down, the resource name includes:</simpara>
<informaltable
frame="all"
rowsep="1" colsep="1"
>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top"> Name Component </entry>
<entry align="left" valign="top"> Example </entry>
<entry align="left" valign="top"> Meaning </entry>
<entry align="left" valign="top"> Default</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Host Name</simpara></entry>
<entry align="left" valign="top"><simpara><literal>grid.example.org</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Host which the GRAM service is running on.</simpara></entry>
<entry align="left" valign="top"><simpara>None. This is always a required component.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>TCP Port</simpara></entry>
<entry align="left" valign="top"><simpara><literal>2120</literal></simpara></entry>
<entry align="left" valign="top"><simpara>TCP port which the GRAM service is listening on. If multiple GRAM services
are running on the same machine, they may use alternate TCP ports.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>2119</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Service Name</simpara></entry>
<entry align="left" valign="top"><simpara><literal>jobmanager-sge</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The name of the GRAM service on the given host. A
host may provide access to multiple resources
using different local resource managers.  This name is used to
distinguish which service to use for a particular job request. Typically, a host
will provide a default entry called <literal>jobmanager</literal> which will interface
with a batch computing or high-throughput scheduling system, and another called
<literal>jobmanager-fork</literal> for simple non-compute jobs.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>jobmanager</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Credential Name</simpara></entry>
<entry align="left" valign="top"><simpara><literal>/C=US/O=Example/OU=Grid /CN=host/grid.example.org</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The name of the credential which the GRAM service is using. This is only
needed if the credential&#8217;s common name does not match the host name.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>host@</literal><emphasis>hostname</emphasis></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Any component of the resource name may be omitted, except for the host
name, and defaults will be used. The field separator <literal>:</literal> must be
retained when skipping between name components.</simpara>
</section>
</section>
<section id="gram5-user-submitting-jobs">
<title>Basic Client Interace</title>
<simpara>This section contains the basic command-line interface for interacting
with gram services. For these examples, we will use the GRAM resource
named <literal>grid.example.org:2119/jobmanager-pbs</literal>. You will need to change
that to resources which you have been granted access.</simpara>
<section id="_batch_and_interactive_use">
<title>Batch and Interactive Use</title>
<simpara>The tools <emphasis role="strong"><literal>globus-job-run</literal></emphasis> and <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> an both
be used to submit jobs to GRAM resources. The difference is that
<emphasis role="strong"><literal>globus-job-run</literal></emphasis> will wait until the job terminates before exiting
and prints job standard output and stderr after the job completes, while
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis> will submit the job and then exit immediately,
printing the job contact to its standard output stream. The job can be
then polled for status with the <emphasis role="strong"><literal>globus-job-status</literal></emphasis> command, its
output can be fetched with the <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> and cleaned
up with the <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> command.</simpara>
</section>
<section id="_running_basic_jobs_with_emphasis_role_strong_literal_globus_job_run_literal_emphasis">
<title>Running Basic Jobs with <emphasis role="strong"><literal>globus-job-run</literal></emphasis></title>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> provides a simple blocking command-line
interface to the GRAM service. The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program
submits a job to a GRAM resource and waits for the job to terminate.
After the job terminates, the output and error streams of the job are
sent to the output and error streams of <emphasis role="strong"><literal>globus-job-run</literal></emphasis>. Note
that truly interactive jobs are not supported with GRAM.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program has command-line options to control
most aspects of jobs run by GRAM. However, certain behaviors must be
specified by definition of an RSL string containing various job
attributes. A more detailed description about the RSL language is
included on the section on running jobs with <emphasis role="strong"><literal>globusrun</literal></emphasis> below.</simpara>
<simpara>The following examples show some of the common command-line options to
<emphasis role="strong"><literal>globus-job-run</literal></emphasis>. Full
<ulink url="../..gram5/pi/index.html#gram5-cmd-globus-job-run"><emphasis role="strong"><literal>globus-job-run</literal></emphasis>
documentation</ulink> is available in the <ulink url="../..gram5/pi/index.html">GRAM5
public interface guide</ulink>.</simpara>
<example>
<title>Minimal job using globus-job-run</title>
<simpara>The following command line submits a single instance of the
<literal>/bin/hostname</literal> executable to the resource named by  executable to the
resource named by <emphasis role="strong"><literal>grid.example.org/jobmanager-pbs</literal></emphasis>.</simpara>
<screen>%  globus-job-run
node1.grid.example.org</screen>
</example>
<example>
<title>Multiprocess job using globus-job-run</title>
<simpara>The following command line submits ten instances of an executable
<literal>/bin/hostname</literal>. The output of the job is the name of the ten hosts
that the job ran on. The . The output of the job is the name of the ten
hosts that the job ran on. The <emphasis>-np ' option causes
<emphasis role="strong"><literal>globus-job-run</literal></emphasis> to run 'COUNT</emphasis> instances of the executable.</simpara>
<screen>%  globus-job-run
node1.grid.example.org
node3.grid.example.org
node2.grid.example.org
node10.grid.example.org</screen>
</example>
<example>
<title>Staging an executable file using globus-job-run</title>
<simpara>The following command line submits an executable which is local to the
submit machine to the GRAM resource, then executes it. The executable is
removed automatically from the GRAM resource after the job completes.
The <emphasis>-s</emphasis> option prior to the executable name causes
<emphasis role="strong"><literal>globus-job-run</literal></emphasis> to stage the executable using GASS (an
https-based protocol) from the machine running <emphasis role="strong"><literal>globus-job-run</literal></emphasis> to
the GRAM resource.</simpara>
<screen>%  globus-job-run
node1.grid.example.org</screen>
</example>
<example>
<title>Providing an input file to a job using globus-job-run</title>
<simpara>The following command line submits a job to a GRAM resource. When this
job runs, its standard input will read from the file
<literal>$HOME/inputfile.txt</literal>, which is located on the GRAM resource. The ,
which is located on the GRAM resource. The <emphasis>-stdin</emphasis> command-line option
indicates this path.</simpara>
<screen>%  globus-job-run
Hello, Grid</screen>
</example>
<example>
<title>Staging an input file to a job using globus-job-run</title>
<simpara>The following command line submits a job to a GRAM resource. When this
job runs, its standard input will read from the file <literal>inputfile.txt</literal>,
which is located on the submit client machine. The , which is located on
the submit client machine. The <emphasis>-stdin -s</emphasis> command-line option
combination causes the input to be staged in the above executable
staging example.</simpara>
<screen>%  globus-job-run
Hello, staged input on the Grid</screen>
</example>
<example>
<title>Canceling an interactive job</title>
<simpara>This example shows how using the  (or other system-specific mechanism
for sending the <literal>SIGINT</literal> signal) can be used to cancel a GRAM job.</simpara>
<screen>%  globus-job-run

GRAM Job failed because the user cancelled the job (error code 8)</screen>
</example>
<example>
<title>Setting job environment variables with globus-job-run</title>
<simpara>The following command line submits one instances of the executable
<literal>/usr/bin/env</literal>, setting some environment variables in the job
environment beyond those set by GRAM5. The , setting some environment
variables in the job environment beyond those set by GRAM5. The '-env '
command-line option adds the named variable to the job environment. It
may be present multiple times in the command-line to set multiple
environment variables.</simpara>
<screen>%  globus-job-run
HOME=/home/juser
LOGNAME=juser
GLOBUS_GRAM_JOB_CONTACT=https://client.example.org:3882/16001579536700793196/5295612977485997184/
GLOBUS_LOCATION=/opt/globus-</screen>
</example>
</section>
<section id="_submitting_basic_jobs_with_emphasis_role_strong_literal_globus_job_submit_literal_emphasis">
<title>Submitting Basic Jobs with <emphasis role="strong"><literal>globus-job-submit</literal></emphasis></title>
<simpara>A related tool to <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is
<ulink url="../..gram5/pi/index.html#gram5-cmd-globus-job-submit"><emphasis role="strong"><literal>globus-job-submit</literal></emphasis></ulink>.
This command submits a job to a GRAM5 service then exits without waiting
for the job to terminate. Other tools
(<ulink url="../..gram5/pi/index.html#gram5-cmd-globus-job-cancel"><emphasis role="strong"><literal>globus-job-cancel</literal></emphasis></ulink>,
<ulink url="../..gram5/pi/index.html#gram5-cmd-globus-job-clean"><emphasis role="strong"><literal>globus-job-clean</literal></emphasis></ulink>,
and
<ulink url="../..gram5/pi/index.html#gram5-cmd-globus-job-get-output"><emphasis role="strong"><literal>globus-job-get-output</literal></emphasis></ulink>)
allow futher interaction with the job.</simpara>
<important>
<simpara>When using <emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, the job output and state will
remain on disk on the GRAM resource until one of
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis> or <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> is run for that
job. Be sure to clean up your jobs!</simpara>
</important>
<simpara>The <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program has most of the same command-line
options as <emphasis role="strong"><literal>globus-job-run</literal></emphasis>. When run, instead of displaying the
output and error streams of the job, it prints the job contact, which is
used with the other globus-job tools to interact with the job.</simpara>
<example>
<title>globus-job-submit</title>
<simpara>This example shows the interaction of submitting a job via
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, checking its status with
<emphasis role="strong"><literal>globus-job-status</literal></emphasis>, getting its output with
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis>, and then cleaning the job with
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis>. Note that this example uses the
<literal>jobmanager-fork</literal> service when retrieving input and cleaning the job.
This allows those tasks to be done without waiting in the batch system.
Most sites will allow these sorts of administrative jobs to be run on
the GRAM node, but consult your system administrator to be sure.
Also, note, that the job contact returned from <emphasis role="strong"><literal>globus-job-submit</literal></emphasis>
can be used to get information about the job from any computer, provided
you have GRAM tools installed and your security environment set up.</simpara>
<screen>%  globus-job-submit
https://grid.example.org:38843/16001600430615223386/5295612977486013582/
%  globus-job-status
PENDING
%  globus-job-status
ACTIVE
%  globus-job-status
DONE
%  globus-job-get-output
node1.grid.example.org
%  globus-job-clean

    WARNING: Cleaning a job means:
        - Kill the job if it still running, and
        - Remove the cached output on the remote resource

    Are you sure you want to cleanup the job now (Y/N) ?

y

Cleanup successful.</screen>
</example>
</section>
<section id="_advanced_jobs_with_globus_job_run">
<title>Advanced Jobs with globus-job-run</title>
<example>
<title>Using custom RSL clauses with globus-job-run</title>
<simpara>The following command line submits an mpi job using
<emphasis role="strong"><literal>globus-job-run</literal></emphasis>, setting the <literal>jobtype</literal> RSL attribute to
<literal>mpi</literal>. Any RSL attribute understood by the LRM can be added to a job
via this method.</simpara>
<screen>%  globus-job-run
Hello, MPI (rank: 0, count: 5)
Hello, MPI (rank: 3, count: 5)
Hello, MPI (rank: 1, count: 5)
Hello, MPI (rank: 4, count: 5)
Hello, MPI (rank: 2, count: 5)</screen>
</example>
<example>
<title>Constructing RSL strings with globus-job-run</title>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program can also generate the RSL language
description of a job based on the command-line options given to it. This
example combines some of the features above and prints out the resulting
RSL. This RSL string can be passed to tools such as <emphasis role="strong"><literal>globusrun</literal></emphasis> to
be run later.</simpara>
<screen>%  globus-job-run -dumprsl
 &amp;(jobtype=mpi)
    (executable="a.out")
    (environment= ("GRID" "1") ("TEST" "1"))
    (count=5)</screen>
</example>
</section>
</section>
<section id="gram5-user-globusrun">
<title>Advanced GRAM Client with the globusrun tool</title>
<simpara>The <ulink url="../..gram5/pi/index.html#gram5-cmd-globusrun"><emphasis role="strong"><literal>globusrun</literal></emphasis></ulink>
tool provides a more flexible tool for submitting, monitoring, and
canceling jobs. With this tool, most of the functionality of the GRAM5
APIs are made available from the command-line.</simpara>
<simpara>One major difference between <emphasis role="strong"><literal>globusrun</literal></emphasis> and the other tools
described above is that <emphasis role="strong"><literal>globusrun</literal></emphasis> uses the
<ulink url="../..gram5/pi/index.html#gram5-rsl">RSL language</ulink> to provide the job
description, instead of multiple command-line options to describe the
various aspects of the job. The section on <emphasis role="strong"><literal>globus-job-run</literal></emphasis>
contained a brief example RSL in the <emphasis>-dumprsl</emphasis> example above.</simpara>
<simpara>The following sections show examples of the different modes that
<emphasis role="strong"><literal>globusrun</literal></emphasis> can run in. Full information about <emphasis role="strong"><literal>globusrun</literal></emphasis>
command-line options is available in the public interface guide.</simpara>
<section id="_checking_rsl_syntax">
<title>Checking RSL Syntax</title>
<simpara>This example shows how to check that an RSL document contains a
syntactically correct job description. Note that this mode does not do
semantic validation of the RSL, so an RSL document that passes this test
may not work when submitted to a GRAM5 service.</simpara>
<example>
<title>Checking RSL Syntax</title>
<screen>%  globusrun -p "&amp;(executable=a.out)"

RSL Parsed Successfully...

%  globusrun -p "&amp;/executable=a.out)"

ERROR: cannot parse RSL &amp;/executable=/adfadf/adf /adf /adf)

Syntax: globusrun [-help] [-f RSL file] [-s][-b][-d][...] [-r RM] [RSL]


Use -help to display full usage</screen>
</example>
</section>
<section id="_checking_service_contacts">
<title>Checking Service Contacts</title>
<simpara>This example shows how to check that a <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> is
running at a particular contact and that the client and service have
mutually-trusted credentials.</simpara>
<example>
<title>GRAM Authentication test</title>
<screen>%  globusrun -a -r grid.example.org/jobmanager-pbs
GRAM Authentication test successful
%  globusrun -a -r grid.example.org/jobmanager-lsf
GRAM Authentication test failure: the gatekeeper failed to find the requested service
%  globusrun -a -r grid.example.org/jobmanager-pbs:host@not.example.org
GRAM Authentication test failure: an authorization operation failed
globus_xio_gsi: gss_init_sec_context failed.
GSS Major Status: Unexpected Gatekeeper or Service Name
globus_gsi_gssapi: Authorization denied: The name of the remote host
(host@not.example.org), and the expected name for the remote host
(grid.example.org) do not match. This happens when the name in the host
certificate does not match the information obtained from DNS and is often a DNS
configuration problem.</screen>
</example>
<note>
<simpara>The DNS configuration problem was a common issue in GRAM2, but GRAM5
will not depend on DNS to resolve names for mutual authentication.</simpara>
</note>
</section>
<section id="_checking_gram_service_version">
<title>Checking GRAM service version</title>
<simpara>This example shows how to determine what software version of GRAM5 is
deployed at a particular service contact.</simpara>
<example>
<title>GRAM version check</title>
<screen>%  globusrun -j -r grid.example.org/jobmanager-pbs:host@not.example.org
Toolkit version: 4.3.0-HEAD
Job Manager version: 10.5 (1256257907-0)</screen>
</example>
<note>
<simpara>This example shows the version number for an unreleased development
version of GRAM5. The actual numbers returned will be different.</simpara>
</note>
<note>
<simpara>This feature is new in GRAM5. When contacting a GRAM2 service,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will display the following error message:</simpara>
<screen>GRAM version check failed : an incoming HTTP message did not contain the expected information</screen>
</note>
</section>
<section id="_basic_interactive_job_with_globusrun">
<title>Basic Interactive job with globusrun</title>
<simpara>This example shows how to submit interactive job with <emphasis role="strong"><literal>globusrun</literal></emphasis>.
When the <emphasis>-s</emphasis> is used, the output of the job command is returned to the
client and displayed as if the command ran locally. This is similar to
the behavior of the <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program described above.</simpara>
<example>
<title>Basic Interactive Job</title>
<screen>%  globusrun -s -r example.grid.org/jobmanager-pbs "&amp;(executable=/bin/hostname)(count=5)"
node03.grid.example.org
node01.grid.example.org
node02.grid.example.urg
node05.grid.example.org
node04.grid.example.org</screen>
</example>
</section>
<section id="_basic_batch_job_with_globusrun">
<title>Basic batch job with globusrun</title>
<simpara>This example shows how to submit, monitor, and cancel a batch job using
<emphasis role="strong"><literal>globusrun</literal></emphasis>. This method is useful for the case where the job may
run for a long time, the job may be queued for a long time, or when
there are network reliability issues between the client and service.</simpara>
<example>
<title>Basic Batch Job</title>
<screen>%  globusrun -b -r grid.example.org/jobmanager-pbs "&amp;(executable=/bin/sleep)(arguments=500)"
globus_gram_client_callback_allow successful
GRAM Job submission successful
https://grid.example.org:38824/16001608125017717261/5295612977486019989/
GLOBUS_GRAM_PROTOCOL_JOB_STATE_PENDING
%  globusrun -status https://grid.example.org:38824/16001608125017717261/5295612977486019989/
PENDING
%  globusrun -k https://grid.example.org:38824/16001608125017717261/5295612977486019989/
%</screen>
</example>
</section>
<section id="_refreshing_a_gram5_credential">
<title>Refreshing a GRAM5 Credential</title>
<simpara>The following example shows how to refresh the credential used by a job
manager and a job.</simpara>
<example>
<title>Refreshing a Credential</title>
<screen>%  globusrun -refresh-proxy https://grid.example.org:38824/16001608125017717261/5295612977486019989/
%  echo $?
0</screen>
</example>
<note>
<simpara>In GT 6.0, <emphasis role="strong"><literal>globusrun</literal></emphasis> does not print any diagnostics when given
the <emphasis>-refresh-proxy</emphasis> command-line option. Therefore, check the exit code
as above to ensure that the refresh is successful.</simpara>
</note>
</section>
<section id="_dealing_with_credential_expiration">
<title>Dealing with credential expiration</title>
<simpara>When the Job Manager&#8217;s credential is about to expire, it sends a message
to all clients registered for <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED</literal>
notifications that the job manager is terminating and that the job will
continue to run without the job manager.</simpara>
<simpara>Any client which receives such a message can (if necessary) generate a
new proxy as described above and then submit a <emphasis role="strong">restart request</emphasis> to
start a job manager with a new credential. This job manager will resume
monitoring the jobs which were started prior to proxy expiration.</simpara>
<simpara>In this example, the <emphasis role="strong"><literal>globusrun</literal></emphasis> displays an error message when
the job manager&#8217;s proxy is about to expire. The user creates a new proxy
and resumes monitoring the job with <emphasis role="strong"><literal>globusrun</literal></emphasis>.</simpara>
<example>
<title>Proxy Expiration Example</title>
<screen>%  globusrun -r grid.example.org "&amp;(executable=a.out)"
globus_gram_client_callback_allow successful
GRAM Job submission successful
GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE
GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED
GRAM Job failed because the user proxy expired (job is still running) (error code 131)
%  grid-proxy-init
Your identity: /DC=org/DC=example/OU=grid/CN=Joe User
Enter GRID pass phrase for this identity:
Creating proxy ........................................................................... Done
Your proxy is valid until: Tue Nov 10 04:25:03 2009
%  globusrun -r grid.example.org "&amp;(restart="https://grid.example.org:1997/16001700477575114131/5295612977486005428/)"
globus_gram_client_callback_allow successful
GRAM Job submission successful
GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE
GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE</screen>
</example>
</section>
<section id="_file_staging">
<title>File staging</title>
<simpara>In addition to the standard output and error stream output done by
<emphasis role="strong"><literal>globusrun</literal></emphasis>, GRAM5 can do basic file management tasks to stage
files to the GRAM5 service node before submitting a job and to stage
files from the GRAM5 service node to a file service after the job
completes.</simpara>
<simpara>GRAM5 file staging supports four URL schemes: <literal>ftp</literal>, <literal>gsiftp</literal>,
<literal>http</literal>, and <literal>https</literal>. Note, that for the <literal>https</literal> scheme, GRAM
expects the file server to be running with the same identity as the
client.</simpara>
<simpara>General file staging is controlled by three RSL attributes:
<literal>file_stage_in</literal>, <literal>file_stage_in_shared</literal>, and <literal>file_stage_out</literal>. In
addition, the files named by the RSL attributes <literal>executable</literal>,
<literal>stdin</literal> may be staged in and the files named by the RSL attributes
<literal>stdout</literal> and <literal>stderr</literal> may be staged out.</simpara>
<simpara>The <literal>file_stage_in_shared</literal> RSL attribute instructs GRAM to store a
local copy of the resource named by the URL in the GASS cache. This is
useful if multiple concurrent jobs will be accessing one or more common
files. The GASS cache will manage a reference count for files in the
cache and remove them when all jobs that refer to them complete.</simpara>
<simpara>The following example shows how to stage a few files from a GridFTP
server to the GRAM node. It uses the <literal>rsl_substitution</literal> mechanism to
define a subsitution variable to reduce the amount of redundancy in the
job description.</simpara>
<example>
<title>File stage in</title>
<screen>%  globusrun -s -r grid.example.org/jobmanager-pbs \
    "&amp;(rsl_substitution = (GRIDFTP_SERVER gsiftp://gridftp.example.org)) \
      (executable=/bin/ls)
      (arguments=/tmp/staged_file)
      (file_stage_in = ($(GRIDFTP_SERVER)/staged_file /tmp/staged_file))"
/tmp/staged_file</screen>
</example>
<simpara>The next example uses the <literal>file_stage_in_shared</literal> RSL attribute to
stage a file into the cache. The file is transferred from the client
using the GASS https server embedded in the <emphasis role="strong"><literal>globusrun</literal></emphasis> program
when the <emphasis>-s</emphasis> option is used.</simpara>
<example>
<title>File stage in shared</title>
<screen>%  globusrun -s -r grid.example.org/jobmanager-pbs \
    "&amp;(executable=/bin/ls) \
      (arguments = -l /tmp/staged_file_link1 /tmp/staged_file_link1) \
      (file_stage_in_shared = \
          (\$(GLOBUSRUN_GASS_URL)/staged_file1 /tmp/staged_file_link1))"
lrwxr-xr-x  1 juser   juser  120 Nov 11 20:37 /tmp/staged_file1 -&gt; /home/juser/.globus/.gass_cache/local/md5/ff/771bded8a2c7dacc1a1c0fecafa0ce/md5/39/13ab3db7fc002ed54012083ae6ed1c/data</screen>
</example>
<simpara>The final staging example uses the <literal>file_stage_out</literal> RSL attribute to
transfer a file from the GRAM service to an FTP server using anonymous
FTP</simpara>
<example>
<title>File stage out</title>
<screen>%  globusrun -r grid.example.org/jobmanager-pbs \
    "&amp;(executable=a.out) \
      (file_stage_out = (results.txt ftp://anonymous:nopass@ftp.example.org/incoming/results.txt))"
%</screen>
</example>
<note>
<simpara>In all of the above cases, multiple files may be staged using any
combination of the supported URL schemes.</simpara>
</note>
</section>
<section id="_temporary_files_and_cleanup">
<title>Temporary files and cleanup</title>
<simpara>GRAM5 supports creating a per-job scratch directory which can be used as
a place to store files that will be automatically removed by GRAM when
the job completes. It also supports an explicit list of files to remove
when the job completes.</simpara>
<simpara>This example shows how to stage files into a scratch directory. It again
uses the embedded GASS https server, stages to the GRAM service, then
runs /bin/ls in the temporary directory. After the job completes, the
contents of <literal>$(SCRATCH_DIRECTORY)</literal> and the directory itself are
removed.</simpara>
<example>
<title>Staging to scratch directory</title>
<screen>%  globusrun -s grid.example.org/jobmanager-pbs \
    "&amp;(scratch_dir = \$(HOME)) \
      (directory = \$(SCRATCH_DIRECTORY))
      (file_stage_in = \
          (\$(GLOBUSRUN_GASS_URL)/inputfile $(SCRATCH_DIRECTORY)/inputfile)) \
      (executable = /bin/ls)"
inputfile</screen>
</example>
<simpara>This example shows how to explicitly remove a file that was created by
the job.</simpara>
<example>
<title>Cleaning up a file</title>
<screen>%  globusrun -s grid.example.org/jobmanager-pbs \
    "&amp;(executable = /bin/touch) \
      (arguments = temporary_file) \
      (file_clean_up = temporary_file)"
%</screen>
</example>
</section>
<section id="_reliable_job_submit">
<title>Reliable job submit</title>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> command supports a two-phase commit protocol to
ensure that the client knows the contact of the job which has been
created so that it can be monitored or canceled in the case of a client
or service error. The two-phase commit affects both job submission and
termination.</simpara>
<simpara>The two-phase protocol is enabled by using the <literal>two_phase</literal> RSL
attribute, as in the next example. When this is enabled, job submission
will fail with the error
<literal>GLOBUS_GRAM_PROTOCOL_ERROR_WAITING_FOR_COMMIT</literal>. The client must
respond to this signal with either the
<literal>GLOBUS_GRAM_PROTOCOL_JOB_SIGNAL_COMMIT_REQUEST</literal> or
<literal>GLOBUS_GRAM_PROTOCOL_JOB_SIGNAL_COMMIT_EXTEND</literal> signals to either
commit the job to execution or delay the commit timeout. One of these
signals must be sent prior to the two phase commit timeout, or the job
will be discarded by the GRAM service.</simpara>
<simpara>A two phase protocol is also used at job termination if the
<literal>save_state</literal> RSL attribute is used along with the <literal>two_phase</literal>
attribute. When the job manager sends a callback with the job state set
to <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE</literal> or
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE</literal> it will wait to clean up the job
until the two phase commit occurs. The client must reply with the
<literal>GLOBUS_GRAM_PROTOCOL_JOB_SIGNAL_COMMIT_END</literal> signal to cause the job
to be cleaned. Otherwise, the job will be unloaded from memory until a
client restarts the job and sends the signal.</simpara>
<example>
<title>Two phase commit example</title>
<simpara>In this example, the user submits a job with a <literal>two_phase</literal> timeout of
30 seconds and the <literal>save_state</literal> attribute. The client must send commit
signals to ensure the job runs.</simpara>
<screen>%  globusrun -r grid.example.org/jobmanager-pbs \
    "&amp;(two_phase = 30) \
      (save_state = yes) \
      (executable = a.out)"

globus_gram_client_callback_allow successful
GRAM Job submission successful
GLOBUS_GRAM_PROTOCOL_JOB_STATE_PENDING
GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE
GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE
%</screen>
</example>
</section>
<section id="_reconnecting_to_a_job">
<title>Reconnecting to a job</title>
<simpara>If a job manager or client exits before a job has completed, the job
will continue to run. The client can reconnect to a job manager and
receive job state notifications and output using the <literal>restart</literal> RSL
attribute.</simpara>
<example>
<title>Restart example</title>
<simpara>This example uses <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> to submit a batch job and
then <emphasis role="strong"><literal>globusrun</literal></emphasis> to reconnect to the job.</simpara>
<screen>%  globus-job-submit grid.example.org/jobmanager-pbs /bin/sleep 90
https://grid.example.org:38824/16001746665595486521/5295612977486005662/
%  globusrun -r grid.example.org/jobmanager-pbs \
    "&amp;(restart = https://grid.example.org:38824/16001746665595486521/5295612977486005662/)"
globus_gram_client_callback_allow successful
GRAM Job submission successful
GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE
%</screen>
</example>
</section>
<section id="_submitting_a_java_job">
<title>Submitting a Java job</title>
<simpara>To submit a job that runs a java program, the client must ensure that
the job can find the Java interpreter and its classes. This example sets
the default <literal>PATH</literal> and <literal>CLASSPATH</literal> environment variables and uses
the shell to locate the path to the <emphasis role="strong"><literal>java</literal></emphasis> program.</simpara>
<example>
<title>Java example</title>
<simpara>This example uses <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> to submit a java job,
staging a jar file from a remote service.</simpara>
<screen>%  globusrun -r grid.example.org/jobmanager-pbs \
    "&amp;(environment = (PATH '/usr/bin:/bin') (CLASSPATH \$(SCRATCH_DIRECTORY)))
      (scratch_dir = \$(HOME))
      (directory = \$(SCRATCH_DIRECTORY))
      (rsl_substitution = (JAVA_SERVER http://java.example.org))
      (file_stage_in =
          (\$(JAVA_SERVER)/example.jar \$(SCRATCH_DIRECTORY)/example.jar)
          (\$(JAVA_SERVER)/support.jar \$(SCRATCH_DIRECTORY)/support.jar))
      (executable=/bin/sh)
      (arguments=-c 'java -jar example.jar')"
globus_gram_client_callback_allow successful
GRAM Job submission successful
GLOBUS_GRAM_PROTOCOL_JOB_STATE_PENDING
GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE
GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE
%</screen>
</example>
</section>
</section>
</chapter>
<chapter id="gram5-user-troubleshooting">
<title>Troubleshooting</title>
<section id="gram5-troubleshooting-client">
<title>GRAM Client Troubleshooting</title>
<section id="_credential_problems">
<title>Credential Problems</title>
<simpara>GRAM requires a client certificate and private key in order authenticate
with the GRAM service. If these are not available, the GRAM client will
fail. In typical use, a user will create a temporary proxy certificate
either derived from their identity certificate issued by some
certificate authority, or from a service such as myproxy. If a GRAM
client command returns any error containing the string <literal>GSS Major
Status</literal> you&#8217;ve hit a credential problem. Look at the
<ulink url="../..gsic/user/index.html#security-credential-errors">Troubleshooting
Section</ulink> of the GSI manual for details about how to diagnose and correct
these errors. The  tool with the <emphasis>-p</emphasis> command-line option is especially
helpful for diagnosing some of these types of problems.</simpara>
</section>
<section id="_connection_problems">
<title>Connection Problems</title>
<simpara>There are a few things which can go wrong when trying to contact a GRAM
service. These have slightly different error types which can help
diagnose which problem is occurring.</simpara>
<section id="_invalid_resource_name">
<title>Invalid Resource Name</title>
<simpara>If the hostname or TCP port you are using for a GRAM resource name is
not correct, then the GRAM client will be unable to access the service.
Errors of this type will look like this:</simpara>
<screen>%  globus-job-run grid.example.org/jobmanager-fork /bin/hostname

GRAM Job submission failed because the connection to the server failed (check host and port) (error code 12)</screen>
<simpara>When this occurs, check with the resource administrator for correct
resource naming so that you can contact the service.</simpara>
</section>
<section id="_mutual_authentication_failure">
<title>Mutual Authentication Failure</title>
<simpara>GRAM performs mutual authentication, that is, both the client and
service provide certificates indicating who they are. The service uses
the client&#8217;s identity to map the user to a local unix account. The
client uses the server&#8217;s identity to verify that the service is running
with a host credential. The failure of the client to trust the server&#8217;s
certificate will generate an error message that looks like this:
<literal>globus_gsi_gssapi: Authorization denied: The expected name for the
remote host (<ulink url="mailto:host@alias.example.org">host@alias.example.org</ulink>) does not match the authenticated
name of the remote host (<ulink url="mailto:host@grid.example.org">host@grid.example.org</ulink>). This happens when the
name in the host certificate does not match the information obtained
from DNS and is often a DNS configuration problem.</literal></simpara>
<simpara>This mismatch can happen for a number of reasons: a site administrator
has multiple hosts sharing a certificate, a host has multiple DNS
aliases, and the client is not aware of which name the server is using
for its certificate, or a host&#8217;s name has changed since the certificate
was issued. The remedy for the client, after confirming with the GRAM
administrator that the name after "authenticated name of the remote
host" is the correct certificate name is to use a form of the GRAM
resource name which includes this name. For example, explicitly adding a
name to the abbreviated GRAM contact so that instead of
<literal>alias.example.org</literal>, you would use
<literal>alias.example.org::host@grid.example.org</literal>.</simpara>
</section>
<section id="_certificate_trust_issues">
<title>Certificate Trust Issues</title>
<simpara>Because of the mutual authentication, both GRAM users and services can
hit problems if they do not trust their peer&#8217;s certificate or the
Certificate Authority which issued it. If the client doesn&#8217;t trust the
server&#8217;s certificate, it is easier to diagnose, because the GRAM service
doesn&#8217;t send much information back to the client if it doesn&#8217;t trust it.
However, working with the system administrator to get information from
the GRAM logs will usually fix these problems fairly easily.</simpara>
<simpara>If the service&#8217;s certificate is not trusted, the client will receive a
message like this:</simpara>
<screen>%  globus-job-run grid.example.org /bin/hostname
GRAM Job submission failed because an authentication operation failed
OpenSSL Error: s3_clnt.c:915: in library: SSL routines, function SSL3_GET_SERVER_CERTIFICATE: certificate verify failed
globus_gsi_callback_module: Could not verify credential
globus_gsi_callback_module: Can't get the local trusted CA certificate: Untrusted self-signed certificate in chain with hash bbfccedf</screen>
<simpara>This error indicates that certificate chain from the service certificate
to the client contained a self-signed certificate (usually an indication
that it&#8217;s a CA certificate), which the client doesn&#8217;t trust, and
includes the hash of the certificate name (<literal>bbfccedf</literal> in this case).
If you hit this particular type of error, you should send the
information to the GRAM administrator and determine which CA should be
trusted and what its signing policy is, to determine if you want to add
it to your local set of trust roots.</simpara>
<note>
<simpara>Different versions of OpenSSL produce different hashes for the same
certificate names. If you upgrade a system (or transfer CA certificates
between systems) to a different version of OpenSSL, you may hit this
problem even if you think you have the CA certificate in your trusted
certificate directory. If so, run the
<emphasis role="strong"><literal>globus-update-certificate-dir</literal></emphasis> program to update your hashes.</simpara>
</note>
<simpara>There are other reasons why a certificate might not be trusted (it&#8217;s in
a revoked list, it has expired or was issued in the future, etc). For
more details look at the
<ulink url="../..gsic/user/index.html#gsic-user-troubleshooting">troubleshooting
information</ulink> in the GSI user&#8217;s guide.</simpara>
<simpara>If for some reason the service does not trust your certificate, you&#8217;ll
get a rather cryptic message from GRAM that looks like this:</simpara>
<screen>%  globus-job-run grid.example.org /bin/hostname
GRAM Job submission failed because an authentication operation failed
globus_gsi_gssapi: Unable to verify remote side's credentials
globus_gsi_gssapi: Unable to verify remote side's credentials: Couldn't verify the remote certificate
OpenSSL Error: s3_pkt.c:1086: in library: SSL routines, function SSL3_READ_BYTES: sslv3 alert bad certificate SSL alert number 42
 (error code 7)</screen>
<simpara>To remedy this, consult the GRAM administrator to get information from
the <literal>/var/log/globus-gatekeeper.log</literal> file to determine the reason why
the gatekeeper didn&#8217;t like your certificate. Again it could be CA trust
issues, clock skew, or a revoked certificate. The error in the
gatekeeper log would typically look like the client-side trust issue
above.  file to determine the reason why the gatekeeper didn&#8217;t like your
certificate. Again it could be CA trust issues, clock skew, or a revoked
certificate. The error in the gatekeeper log would typically look like
the client-side trust issue above.</simpara>
</section>
<section id="_authentication_with_the_remote_server_failed">
<title>Authentication with the Remote Server Failed</title>
<simpara>Once the GRAM service has authenticated the client, it maps the client&#8217;s
identity to a local user account using a grid-mapfile or other mapping
service. If this fails, the client will receive a message that looks
like this:</simpara>
<screen>%  globus-job-run grid.example.org /bin/hostname
GRAM Job submission failed because authentication with the remote server failed (error code 7)</screen>
<simpara>To remedy this, consult the system administrator of the GRAM resource to
be added to the authorized user&#8217;s list. Be sure to send your credential
subject name to make it easier for them. To get that information, run
the command <emphasis role="strong"><literal>grid-cert-info -s</literal></emphasis>.</simpara>
</section>
<section id="_unable_to_find_the_requested_service">
<title>Unable to Find the Requested Service</title>
<simpara>Recall that a GRAM resource name includes a component called the
<literal>service name</literal>. The default if not specified is <literal>jobmanager</literal>, but
some sites may not use that name, or have a different LRM name than you
expect. If you specify an incorrect service name, or the default is not
present, you&#8217;ll get an error that looks like this:</simpara>
<screen>%  globus-job-run grid.example.org /bin/hostname
GRAM Job submission failed because the gatekeeper failed to find the requested service (error code 93)</screen>
<simpara>If you get this error, you&#8217;ll need to determine which services are
available on that GRAM resource, either by asking the admin or by
looking at the entries in <literal>/etc/grid-services</literal></simpara>
</section>
<section id="_failed_to_run_the_job_manager">
<title>Failed to Run the Job Manager</title>
<simpara>The GRAM service is split between a priveleged process called the
<literal>globus-gatekeeper</literal> and a non-privileged process called the  and a
non-privileged process called the <literal>globus-job-manager</literal> which runs as a
user process. If the  which runs as a user process. If the
<literal>globus-gatekeeper</literal> is unable to locate the  is unable to locate the
<literal>globus-job-manager</literal> process, then this misconfiguration will show up
like this:  process, then this misconfiguration will show up like this:</simpara>
<screen>%  globus-job-run grid.example.org /bin/hostname
GRAM Job submission failed because the gatekeeper failed to run the job manager (error code 47)</screen>
<simpara>This is an installation mistake, and the administrator of the GRAM
resource must fix this.</simpara>
</section>
</section>
<section id="_jobs_are_hanging">
<title>Jobs are Hanging</title>
<simpara>One problem GRAM users sometimes encounter is that it looks like jobs
submitted to GRAM are not making any progress, even though the local
resource manager thinks they&#8217;ve run. There are a couple of reasons why
this might occur: GRAM is not getting the information it needs from the
local resource manager or the GRAM client is not getting the information
it needs. We&#8217;ll cover diagnosing and handling the latter case in this
document, as the other is an system administrator issue.</simpara>
<simpara>The way <emphasis role="strong"><literal>globus-job-run</literal></emphasis> and <emphasis role="strong"><literal>globusrun</literal></emphasis> determine that jobs
have completed is via GRAM job state callbacks. These are messages sent
by the GRAM service to the client node indicating that something
significant has happened in the lifecycle of the job. If for some reason
the GRAM service can not get those messages to the client, the client
will not be able to detect job state changes.</simpara>
<simpara>In order to determine if this is the case, submit a job using
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, and then use the <emphasis role="strong"><literal>globus-job-status</literal></emphasis>
command to see if the job state changes. If it does not, then consult
the GRAM administrator---there might be some problem with the
installation. If it does, then for some reason the callbacks are not
happening. This might be firewall issues or host naming issues.</simpara>
<simpara>The GRAM client sends a "callback contact" to the GRAM service when it
submits a job, in order that it can receive notifications. This contact
is a reference to a https server embedded in the GRAM client which only
handles GRAM state callbacks. As with all web servers, it has a URL
which defines how to contact it, which in this case consists of the
client host name and the service port number. If the host name that is
used is not resolvable (such as a for a laptop with a dynamic address),
then the GRAM service will not be able to contact it. If that&#8217;s the
case, you can set the <literal>GLOBUS_HOSTNAME </literal> environment variable to the
IP address that your client can be reached at, and then submit your
jobs. This will cause GRAM to publish that address instead of what it
thinks the client&#8217;s host name is.</simpara>
<simpara>Another way that the GRAM service would be unable to send job state
updates to a client would be if there&#8217;s a firewall between the service
and the client. If that&#8217;s the case, you might need to set the
<literal>GLOBUS_TCP_PORT_RANGE</literal> environment variable to a comma-separated list
of numbers which represent a range of minimum and maximum TCP port
numbers to listen on. You might have to contact your site administrator
to determine what TCP ports are allowed. If there are none, you can
still use <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> and <emphasis role="strong"><literal>globus-job-status</literal></emphasis> to
track your job&#8217;s state changes, or use another tool like those mentioned
in the <ulink url="../..gram5/user/index.html#gram5-user-client-tools">section
about client tools</ulink>.</simpara>
</section>
<section id="_logs_and_debugging">
<title>Logs and Debugging</title>
<simpara>The GRAM service has a log file which contains information about the job
as it is processed. These logs are located by default in
<literal>/var/log/globus/gram_$USERNAME.log</literal>. There are some different logging
levels available, as . There are some different logging levels
available, as
<ulink url="../..gram5/admin/index.html#gram5-log-levels">described in the GRAM
Adminstrator&#8217;s Guide</ulink>. These can be controlled on a per-job basis by
adding the <literal>loglevel</literal> RSL attribute to your job description. The
default is to log only <literal>FATAL</literal> and <literal>ERROR</literal> messages, but other
levels can sometimes help understand what is going on.</simpara>
</section>
<section id="_diagnosing_lrm_errors">
<title>Diagnosing LRM Errors</title>
<simpara>Sometimes, bugs creep into the LRM adapter scripts. When that occurs,
the GRAM job will usually fail with an error like this:</simpara>
<screen>GRAM Job failed because the job manager detected an invalid script status (error
code 25)</screen>
<simpara>If this occurs, you may have to work with a GRAM administrator to help
debug this problem. One helpful thing you can do when reporting it is to
save the GRAM internal script data so that it can be used outside of the
GRAM service to see what the low-level error looks like. To do this, add
the RSL fragment <literal>(savejobdescription = yes)</literal> to your job request.
This will cause GRAM to leave a file called something like
<literal>$HOME/gram_[0-9]*.pl</literal> in your home directory. You can use this with
the internal tool  in your home directory. You can use this with the
internal tool <literal>/usr/share/globus/globus-job-manager-script.pl</literal> to try
to submit the job to the LRM without using the GRAM service. The command
line  to try to submit the job to the LRM without using the GRAM
service. The command line
<emphasis role="strong"><literal>/usr/share/globus/globus-job-manager-script.pl -m </literal></emphasis> will attempt
to submit the job to the LRM. It will show all the information the LRM
script sends to the GRAM service, which might include some perl-language
error or badly formatted output from the script (which must only output
lines which begin with <literal>GRAM_SCRIPT_</literal>.</simpara>
<simpara>In some extreme cases, the savejobdescription option will not generate a
file. If that&#8217;s the case, pass <literal>/dev/null</literal> as the argument to the  as
the argument to the <emphasis>-f</emphasis> command-line option. The problem is likely a
perl syntax error which will be reached before the job description is
loaded.</simpara>
</section>
<section id="_email_support">
<title>Email Support</title>
<simpara>If all else fails, please send information about your problem to
<ulink url="mailto:gram-user@globus.org">gram-user@globus.org</ulink>. You&#8217;ll have to subscribe to a list before you can
send an e-mail to it. See
<ulink url="http://dev.globus.org/wiki/Mailing%5fLists">here</ulink> for general e-mail
lists and information on how to subscribe to a list and
<ulink url="http://dev.globus.org/wiki/GRAM#Mailing%5fLists">here</ulink> for GRAM specific
lists. Depending on the problem, you may be requested to file a bug
report to the globus project&#8217;s <ulink url="https://globus.atlassian.net">Issue
Tracker</ulink>.</simpara>
</section>
</section>
</chapter>
<chapter id="gram5-user-clientcli">
<title>Command-line Client Reference Pages</title>
<simpara>This section contains reference pages for all of the tools described in
the previous section. These pages contain all the command-line options
for these tools. These are available as manpages in the documentation
subpackages for the globus-gram-client-tools package.</simpara>
<section id="gram5-cmd-globusrun">
<title>GLOBUSRUN(1)</title>
<section id="_name">
<title>NAME</title>
<simpara>globusrun - Execute and manage jobs via GRAM</simpara>
</section>
<section id="_synopsis">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globusrun</literal></emphasis> [<literal>-help</literal> ] [<literal>-usage</literal> ] [<literal>-version</literal> ] [<literal>-versions</literal> ]</simpara>
</section>
<section id="_description">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program for submits and manages jobs run on a
local or remote job host. The jobs are controlled by the
<emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program which interfaces with a local
resource manager that schedules and executes the job.</simpara>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program can be run in a number of different modes
chosen by command-line options.</simpara>
<simpara>When <emphasis>-help</emphasis>, <emphasis>-usage</emphasis>, <emphasis>-version</emphasis>, or <emphasis>-versions</emphasis> command-line options
are used, <emphasis role="strong"><literal>globusrun</literal></emphasis> will print out diagnostic information and
then exit.</simpara>
<simpara>When the <emphasis>-p</emphasis> or <emphasis>-parse</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will verify the syntax of the RSL specification and
then terminate. If the syntax is valid, <emphasis role="strong"><literal>globusrun</literal></emphasis> will print out
the string "<literal>RSL Parsed Successfully&#8230;</literal>" and exit with a zero exit
code; otherwise, it will print an error message and terminate with a
non-zero exit code.</simpara>
<simpara>When the <emphasis>-a</emphasis> or <emphasis>-authenticate-only</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will verify that the service named by
<emphasis>RESOURCE_CONTACT</emphasis> exists and the client&#8217;s credentials are granted
permission to access that service. If authentication is successful,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will display the string "<literal>GRAM Authentication test
successful</literal>" and exit with a zero exit code; otherwise it will print an
explanation of the problem and will with a non-zero exit code.</simpara>
<simpara>When the <emphasis>-j</emphasis> or <emphasis>-jobmanager-version</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to determine the software version that
the service named by <emphasis>RESOURCE_CONTACT</emphasis> is running. If successful, it
will display both the Toolkit version and the Job Manager package
version and exit with a zero exit code; otherwise, it will print an
explanation of the problem and exit with a non-zero exit code.</simpara>
<simpara>When the <emphasis>-k</emphasis> or <emphasis>-kill</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to terminate the job named by <emphasis>JOB_ID</emphasis>.
If successful, <emphasis role="strong"><literal>globusrun</literal></emphasis> will exit with zero; otherwise it will
display an explanation of the problem and exit with a non-zero exit
code.</simpara>
<simpara>When the <emphasis>-y</emphasis> or <emphasis>-refresh-proxy</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to delegate a new X.509 proxy to the job
manager which is managing the job named by <emphasis>JOB_ID</emphasis>. If successful,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will exit with zero; otherwise it will display an
explanation of the problem and exit with a non-zero exit code. This
behavior can be modified by the <emphasis>-full-proxy</emphasis> or <emphasis>-D</emphasis> command-line
options to enable full proxy delegation. The default is limited proxy
delegation.</simpara>
<simpara>When the <emphasis>-status</emphasis> command-line option is present, <emphasis role="strong"><literal>globusrun</literal></emphasis>
will attempt to determine the current state of the job. If successful,
the state will be printed to standard output and <emphasis role="strong"><literal>globusrun</literal></emphasis> will
exit with a zero exit code; otherwise, a description of the error will
be displayed and it will exit with a non-zero exit code.</simpara>
<simpara>Otherwise, <emphasis role="strong"><literal>globusrun</literal></emphasis> will submit the job to a GRAM service. By
default, <emphasis role="strong"><literal>globusrun</literal></emphasis> waits until the job has terminated or failed
before exiting, displaying information about job state changes and at
exit time, the job exit code if it is provided by the GRAM service.</simpara>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program can also function as a <emphasis role="strong"><literal>GASS</literal></emphasis> file
server to allow the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program to stage files to
and from the machine on which <emphasis role="strong"><literal>globusrun</literal></emphasis> is executed to the GRAM
service node. This behavior is controlled by the <emphasis>-s</emphasis>, <emphasis>-o</emphasis>, and <emphasis>-w</emphasis>
command-line options.</simpara>
<simpara>Jobs submitted by <emphasis role="strong"><literal>globusrun</literal></emphasis> can be monitored interactively or
detached. To have <emphasis role="strong"><literal>globusrun</literal></emphasis> detach from the GRAM service after
submitting the job, use the <emphasis>-b</emphasis> or <emphasis>-F</emphasis> command-line options.</simpara>
</section>
<section id="_options">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globusrun</literal></emphasis> consist of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-usage</emphasis>
</term>
<listitem>
<simpara>
     Display a one-line usage summary to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of <emphasis role="strong"><literal>globusrun</literal></emphasis> to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of all modules used by <emphasis role="strong"><literal>globusrun</literal></emphasis> (including DiRT information) to standard error and then exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p, -parse</emphasis>
</term>
<listitem>
<simpara>
     Do a parse check on the job specification and print diagnostics. If a parse error occurs, <emphasis role="strong"><literal>globusrun</literal></emphasis> exits with a non-zero exit code.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara><emphasis role="strong">-f <emphasis>RSL_FILENAME</emphasis>, -file
        <emphasis>RSL_FILENAME</emphasis></emphasis>::
     Read job specification from the file named by <emphasis>RSL_FILENAME</emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-n, -no-interrupt</emphasis>
</term>
<listitem>
<simpara>
     Disable handling of the <literal>SIGINT</literal> signal, so that the interrupt character (typically ) causes <emphasis role="strong"><literal>globusrun</literal></emphasis> to terminate without canceling the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-r <emphasis>RESOURCE_CONTACT</emphasis>, -resource <emphasis>RESOURCE_CONTACT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the request to the resource specified by <emphasis>RESOURCE_CONTACT</emphasis>. A
resource may be specified in the following ways:
</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis>HOST</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>::'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT':'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
<simpara>If any of <emphasis>PORT</emphasis>, <emphasis>SERVICE</emphasis>, or <emphasis>SUBJECT</emphasis> is omitted, the defaults of
<literal>2811</literal>, <literal>jobmanager</literal>, and <literal>host@</literal><emphasis>HOST</emphasis> are used respectively.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-j, -jobmanager-version</emphasis>
</term>
<listitem>
<simpara>
     Print the software version being run by the service running at <emphasis>RESOURCE_CONTACT</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-k <emphasis>JOB_ID</emphasis>, -kill <emphasis>JOB_ID</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Kill the job named by <emphasis>JOB_ID</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-D, -full-proxy</emphasis>
</term>
<listitem>
<simpara>
     Delegate a full impersonation proxy to the service. By default, a limited proxy is delegated when needed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-y, -refresh-proxy</emphasis>
</term>
<listitem>
<simpara>
     Delegate a new proxy to the service processing <emphasis>JOB_ID</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-status</emphasis>
</term>
<listitem>
<simpara>
     Display the current status of the job named by <emphasis>JOB_ID</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q, -quiet</emphasis>
</term>
<listitem>
<simpara>
     Do not display job state change or exit code information.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-o, -output-enable</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams only. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s, -server</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams for writing and any file local the the <emphasis role="strong"><literal>globusrun</literal></emphasis> invocation for reading. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-w, -write-allow</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams for writing and any file local the the <emphasis role="strong"><literal>globusrun</literal></emphasis> invocation for reading or writing. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-b, -batch</emphasis>
</term>
<listitem>
<simpara>
     Terminate after submitting the job to the GRAM service. The <emphasis role="strong"><literal>globusrun</literal></emphasis> program will exit after the job hits any of the following states: <literal>PENDING</literal>, <literal>ACTIVE</literal>, <literal>FAILED</literal>, or <literal>DONE</literal>. The GASS-related options can be used to stage input files, but standard output, standard error, and file staging after the job completes will not be processed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-F, -fast-batch</emphasis>
</term>
<listitem>
<simpara>
     Terminate after submitting the job to the GRAM service. The <emphasis role="strong"><literal>globusrun</literal></emphasis> program will exit after it receives a reply from the service. The <emphasis>JOB_ID</emphasis> will be displayed to standard output before terminating so that the job can be checked with the <emphasis>-status</emphasis> command-line option or modified by the <emphasis>-refresh-proxy</emphasis> or <emphasis>-kill</emphasis> command-line options.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d, -dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job with the <literal>dryrun</literal> attribute set to true. When this is done, the job manager will prepare to start the job but start short of submitting it to the service. This can be used to detect problems with the <emphasis>RSL_SPECIFICATION</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment">
<title>Environment</title>
<simpara>If the following variables affect the execution of <emphasis role="strong"><literal>globusrun</literal></emphasis></simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs">
<title>Bugs</title>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program assumes any failure to contact the job
means the job has terminated. In fact, this may be due to the
<emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program exiting after all jobs it is managing
have reached the <literal>DONE</literal> or <literal>FAILED</literal> states. In order to reliably
detect job termination, the <literal>two_phase</literal> RSL attribute should be used.</simpara>
</section>
<section id="_see_also">
<title>See Also</title>
<simpara><literal>globus-job-submit(1)</literal>, <literal>globus-job-run(1)</literal>,
<literal>globus-job-clean(1)</literal>, <literal>globus-job-get-output(1)</literal>,
<literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-cancel">
<title>GLOBUS-JOB-CANCEL(1)</title>
<section id="_name_2">
<title>NAME</title>
<simpara>globus-job-cancel - Cancel a GRAM batch job</simpara>
</section>
<section id="_synopsis_2">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> <literal>-f</literal>  | <literal>-force</literal>  <literal>-q</literal>  | <literal>-quiet</literal>  <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_2">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program cancels the job named by <emphasis>JOBID</emphasis>.
Any cached files associated with the job will remain until
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis> is executed for the job.</simpara>
<simpara>By default, <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> prompts the user prior to
canceling the job. This behavior can be overridden by specifying the
<emphasis>-f</emphasis> or <emphasis>-force</emphasis> command-line options.</simpara>
</section>
<section id="_options_2">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-force, -f</emphasis>
</term>
<listitem>
<simpara>
     Do not prompt to confirm job cancel and clean-up.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-quiet, -q</emphasis>
</term>
<listitem>
<simpara>
     Do not print diagnostics for succesful cancel. Implies <emphasis>-f</emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_2">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-cancel</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-clean">
<title>GLOBUS-JOB-CLEAN(1)</title>
<section id="_name_3">
<title>NAME</title>
<simpara>globus-job-clean - Cancel and clean up a GRAM batch job</simpara>
</section>
<section id="_synopsis_3">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-clean</literal></emphasis> <literal>-r</literal> <emphasis>RESOURCE</emphasis> | <literal>-resource</literal> <emphasis>RESOURCE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-f</literal>  | <literal>-force</literal>  <literal>-q</literal>  | <literal>-quiet</literal>  <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_3">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program cancels the job named by <emphasis>JOBID</emphasis> if
it is still running, and then removes any cached files on the GRAM
service node related to that job. In order to do the file clean up, it
submits a job which removes the cache files. By default this cleanup job
is submitted to the default GRAM resource running on the same host as
the job. This behavior can be controlled by specifying a resource
manager contact string as the parameter to the <emphasis>-r</emphasis> or <emphasis>-resource</emphasis>
option.</simpara>
<simpara>By default, <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> prompts the user prior to canceling
the job. This behavior can be overridden by specifying the <emphasis>-f</emphasis> or
<emphasis>-force</emphasis> command-line options.</simpara>
</section>
<section id="_options_3">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-resource <emphasis>RESOURCE</emphasis>, -r <emphasis>RESOURCE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the clean-up job to the resource named by <emphasis>RESOURCE</emphasis> instead of the default GRAM service on the same host as the job contact.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-force, -f</emphasis>
</term>
<listitem>
<simpara>
     Do not prompt to confirm job cancel and clean-up.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-quiet, -q</emphasis>
</term>
<listitem>
<simpara>
     Do not print diagnostics for succesful clean-up. Implies <emphasis>-f</emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_3">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-get-output">
<title>GLOBUS-JOB-GET-OUTPUT(1)</title>
<section id="_name_4">
<title>NAME</title>
<simpara>globus-job-get-output - Retrieve the output and error streams from a GRAM job</simpara>
</section>
<section id="_synopsis_4">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> <literal>-r</literal> <emphasis>RESOURCE</emphasis> | <literal>-resource</literal> <emphasis>RESOURCE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-out</literal>  | <literal>-err</literal>  <literal>-t</literal> <emphasis>LINES</emphasis> | <literal>-tail</literal> <emphasis>LINES</emphasis> <literal>-follow</literal> <emphasis>LINES</emphasis> | <literal>-f</literal> <emphasis>LINES</emphasis> <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_4">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program retrieves the output and error
streams of the job named by <emphasis>JOBID</emphasis>. By default,
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> will retrieve all output and error data
from the job and display them to its own output and error streams. Other
behavior can be controlled by using command-line options. The data
retrieval is implemented by submitting another job which simply displays
the contents of the first job&#8217;s output and error streams. By default
this retrieval job is submitted to the default GRAM resource running on
the same host as the job. This behavior can be controlled by specifying
a particular resource manager contact string as the <emphasis>RESOURCE</emphasis> parameter
to the <emphasis>-r</emphasis> or <emphasis>-resource</emphasis> option.</simpara>
</section>
<section id="_options_4">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-resource <emphasis>RESOURCE</emphasis>, -r <emphasis>RESOURCE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the retrieval job to the resource named by <emphasis>RESOURCE</emphasis> instead of the default GRAM service on the same host as the job contact.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-out</emphasis>
</term>
<listitem>
<simpara>
     Retrieve only the standard output stream of the job. The default is to retrieve both standard output and standard error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-err</emphasis>
</term>
<listitem>
<simpara>
     Retrieve only the standard error stream of the job. The default is to retrieve both standard output and standard error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-tail <emphasis>LINES</emphasis>, -t <emphasis>LINES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Print only the last <emphasis>LINES</emphasis> count lines of output from the data streams being retrieved. By default, the entire output and error file data is retrieved. This option can not be used along with the <emphasis>-f</emphasis> or <emphasis>-follow</emphasis> options.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-follow <emphasis>LINES</emphasis>, -f <emphasis>LINES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Print the last <emphasis>LINES</emphasis> count lines of output from the data streams being retrieved and then wait until canceled, printing any subsequent job output that occurs. By default, the entire output and error file data is retrieved. This option can not be used along with the <emphasis>-t</emphasis> or <emphasis>-tail</emphasis> options.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_4">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-run">
<title>GLOBUS-JOB-RUN(1)</title>
<section id="_name_5">
<title>NAME</title>
<simpara>globus-job-run - Execute a job using GRAM</simpara>
</section>
<section id="_synopsis_5">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-run</literal></emphasis> [<literal>-dumprsl</literal> ] [<literal>-dryrun</literal> ] [<literal>-verify</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-file</literal> <emphasis>ARGUMENT_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <emphasis>SERVICE_CONTACT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-np</literal> <emphasis>PROCESSES</emphasis> | <literal>-count</literal> <emphasis>PROCESSES</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-m</literal> <emphasis>MAX_TIME</emphasis> | <literal>-maxtime</literal> <emphasis>MAX_TIME</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-p</literal> <emphasis>PROJECT</emphasis> | <literal>-project</literal> <emphasis>PROJECT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-q</literal> <emphasis>QUEUE</emphasis> | <literal>-queue</literal> <emphasis>QUEUE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-d</literal> <emphasis>DIRECTORY</emphasis> | <literal>-directory</literal> <emphasis>DIRECTORY</emphasis> [<literal>-env</literal> <emphasis>NAME</emphasis>'VALUE'] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-stdin</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDIN_FILE</emphasis>] [<literal>-stdout</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDOUT_FILE</emphasis>] [<literal>-stderr</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDERR_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x</literal> <emphasis>RSL_CLAUSE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-l</literal>  | <literal>-s</literal>  <emphasis>EXECUTABLE</emphasis> [<literal>ARGUMENT</literal> &#8230;]</simpara>
</section>
<section id="_description_5">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program constructs a job description from its
command-line options and then submits the job to the GRAM service
running at <emphasis>SERVICE_CONTACT</emphasis>. The executable and arguments to the
executable are provided on the command-line after all other options.
Note that the <emphasis>-dumprsl</emphasis>, <emphasis>-dryrun</emphasis>, <emphasis>-verify</emphasis>, and <emphasis>-file</emphasis> command-line
options must occur before the first non-option argument, the
<emphasis>SERVICE_CONTACT</emphasis>.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> provides similar functionality to
<emphasis role="strong"><literal>globusrun</literal></emphasis> in that it allows interactive start-up of GRAM jobs.
However, unlike <emphasis role="strong"><literal>globusrun</literal></emphasis>, it uses command-line parameters to
define the job instead of RSL expressions.</simpara>
</section>
<section id="_options_5">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-run</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dumprsl</emphasis>
</term>
<listitem>
<simpara>
     Translate the command-line options to <emphasis role="strong"><literal>globus-job-run</literal></emphasis> into an RSL expression that can be used with tools such as <emphasis role="strong"><literal>globusrun</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled. When this option is used, the GRAM service prepares to execute the job but stops before submitting the job to the LRM. This can be used to diagnose some problems such as missing files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-verify</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled and then without it enabled if the dryrun is successful.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-file <emphasis>ARGUMENT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read additional command-line options from <emphasis>ARGUMENT_FILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-np <emphasis>PROCESSES</emphasis>, -count <emphasis>PROCESSES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Start <emphasis>PROCESSES</emphasis> instances of the executable as a single job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-m <emphasis>MAX_TIME</emphasis>, -maxtime <emphasis>MAX_TIME</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Schedule the job to run for a maximum of <emphasis>MAX_TIME</emphasis> minutes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PROJECT</emphasis>, -project <emphasis>PROJECT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job use the allocation <emphasis>PROJECT</emphasis> when submitting the job to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q <emphasis>QUEUE</emphasis>, -queue <emphasis>QUEUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job be submitted to the LRM using the named <emphasis>QUEUE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d <emphasis>DIRECTORY</emphasis>, -directory <emphasis>DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Run the job in the directory named by <emphasis>DIRECTORY</emphasis>. Input and output files will be interpreted relative to this directory. This directory must exist on the file system on the LRM-managed resource. If not specified, the job will run in the home directory of the user the job is running as.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-env <emphasis>NAME</emphasis>=<emphasis>VALUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Define an environment variable named by <emphasis>NAME</emphasis> with the value <emphasis>VALUE</emphasis> in the job environment. This option may be specified multiple times to define multiple environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdin [-l | -s] <emphasis>STDIN_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDIN_FILE</emphasis> as the standard input of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdout [-l | -s] <emphasis>STDOUT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDOUT_FILE</emphasis> as the destination for the standard output of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stderr [-l | -s] <emphasis>STDERR_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDERR_FILE</emphasis> as the destination for the standard error of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x <emphasis>RSL_CLAUSE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Add a set of custom RSL attributes described by <emphasis>RSL_CLAUSE</emphasis> to the job description. The clause must be an RSL conjunction and may contain one or more attributes. This can be used to include attributes which can not be defined by other command-line options of <emphasis role="strong"><literal>globus-job-run</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-l</emphasis> option is specified, then the executable is interpreted to be on a file system local to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-s</emphasis> option is specified, then the executable is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_5">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-run</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_2">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-job-submit(1)</literal>, <literal>globus-job-clean(1)</literal>,
<literal>globus-job-get-output(1)</literal>, <literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-status">
<title>GLOBUS-JOB-STATUS(1)</title>
<section id="_name_6">
<title>NAME</title>
<simpara>globus-job-status - Check the status of a GRAM5 job</simpara>
</section>
<section id="_synopsis_6">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-status</literal></emphasis> <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_6">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program checks the status of a GRAM job by
sending a status request to the job manager contact for that job
specifed by the <emphasis>JOBID</emphasis> parameter. If successful, it will print the job
status to standard output. The states supported by
<emphasis role="strong"><literal>globus-job-status</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">PENDING</emphasis>
</term>
<listitem>
<simpara>
     The job has been submitted to the LRM but has not yet begun execution.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">ACTIVE</emphasis>
</term>
<listitem>
<simpara>
     The job has begun execution.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">FAILED</emphasis>
</term>
<listitem>
<simpara>
     The job has failed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">SUSPENDED</emphasis>
</term>
<listitem>
<simpara>
     The job is currently suspended by the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">DONE</emphasis>
</term>
<listitem>
<simpara>
     The job has completed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">UNSUBMITTED</emphasis>
</term>
<listitem>
<simpara>
     The job has been accepted by GRAM, but not yet submitted to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">STAGE_IN</emphasis>
</term>
<listitem>
<simpara>
     The job has been accepted by GRAM and is currently staging files prior
to being submitted to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">STAGE_OUT</emphasis>
</term>
<listitem>
<simpara>
     The job has completed execution and is currently staging files from the
service node to other http, GASS, or GridFTP servers.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_options_6">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-status</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_6">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-status</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">X509_USER_PROXY</emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">X509_CERT_DIR</emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs_2">
<title>Bugs</title>
<simpara>The <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program can not distinguish between the
case of the job manager terminating for any reason and the job being in
the <literal>DONE</literal> state.</simpara>
</section>
<section id="_see_also_3">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-submit">
<title>GLOBUS-JOB-SUBMIT(1)</title>
<section id="_name_7">
<title>NAME</title>
<simpara>globus-job-submit - Submit a batch job using GRAM</simpara>
</section>
<section id="_synopsis_7">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-submit</literal></emphasis> [<literal>-dumprsl</literal> ] [<literal>-dryrun</literal> ] [<literal>-verify</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-file</literal> <emphasis>ARGUMENT_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <emphasis>SERVICE_CONTACT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-np</literal> <emphasis>PROCESSES</emphasis> | <literal>-count</literal> <emphasis>PROCESSES</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-m</literal> <emphasis>MAX_TIME</emphasis> | <literal>-maxtime</literal> <emphasis>MAX_TIME</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-p</literal> <emphasis>PROJECT</emphasis> | <literal>-project</literal> <emphasis>PROJECT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-q</literal> <emphasis>QUEUE</emphasis> | <literal>-queue</literal> <emphasis>QUEUE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-d</literal> <emphasis>DIRECTORY</emphasis> | <literal>-directory</literal> <emphasis>DIRECTORY</emphasis> [<literal>-env</literal> <emphasis>NAME</emphasis>'VALUE'] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-stdin</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDIN_FILE</emphasis>] [<literal>-stdout</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDOUT_FILE</emphasis>] [<literal>-stderr</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDERR_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x</literal> <emphasis>RSL_CLAUSE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-l</literal>  | <literal>-s</literal>  <emphasis>EXECUTABLE</emphasis> [<literal>ARGUMENT</literal> &#8230;]</simpara>
</section>
<section id="_description_7">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program constructs a job description from
its command-line options and then submits the job to the GRAM service
running at <emphasis>SERVICE_CONTACT</emphasis>. The executable and arguments to the
executable are provided on the command-line after all other options.
Note that the <emphasis>-dumprsl</emphasis>, <emphasis>-dryrun</emphasis>, <emphasis>-verify</emphasis>, and <emphasis>-file</emphasis> command-line
options must occur before the first non-option argument, the
<emphasis>SERVICE_CONTACT</emphasis>.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> provides similar functionality to
<emphasis role="strong"><literal>globusrun</literal></emphasis> in that it allows batch submission of GRAM jobs.
However, unlike <emphasis role="strong"><literal>globusrun</literal></emphasis>, it uses command-line parameters to
define the job instead of RSL expressions.</simpara>
<simpara>To retrieve the output and error streams of the job, use the program
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis>. To reclaim resources used by the job by
deleting cached files and job state, use the program
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis>. To cancel a batch job submitted by
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, use the program <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis>.</simpara>
</section>
<section id="_options_7">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dumprsl</emphasis>
</term>
<listitem>
<simpara>
     Translate the command-line options to <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> into an RSL expression that can be used with tools such as <emphasis role="strong"><literal>globusrun</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled. When this option is used, the GRAM service prepares to execute the job but stops before submitting the job to the LRM. This can be used to diagnose some problems such as missing files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-verify</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled and then without it enabled if the dryrun is successful.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-file <emphasis>ARGUMENT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read additional command-line options from <emphasis>ARGUMENT_FILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-np <emphasis>PROCESSES</emphasis>, -count <emphasis>PROCESSES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Start <emphasis>PROCESSES</emphasis> instances of the executable as a single job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-m <emphasis>MAX_TIME</emphasis>, -maxtime <emphasis>MAX_TIME</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Schedule the job to run for a maximum of <emphasis>MAX_TIME</emphasis> minutes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PROJECT</emphasis>, -project <emphasis>PROJECT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job use the allocation <emphasis>PROJECT</emphasis> when submitting the job to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q <emphasis>QUEUE</emphasis>, -queue <emphasis>QUEUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job be submitted to the LRM using the named <emphasis>QUEUE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d <emphasis>DIRECTORY</emphasis>, -directory <emphasis>DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Run the job in the directory named by <emphasis>DIRECTORY</emphasis>. Input and output files will be interpreted relative to this directory. This directory must exist on the file system on the LRM-managed resource. If not specified, the job will run in the home directory of the user the job is running as.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-env <emphasis>NAME</emphasis>=<emphasis>VALUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Define an environment variable named by <emphasis>NAME</emphasis> with the value <emphasis>VALUE</emphasis> in the job environment. This option may be specified multiple times to define multiple environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdin [-l | -s] <emphasis>STDIN_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDIN_FILE</emphasis> as the standard input of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdout [-l | -s] <emphasis>STDOUT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDOUT_FILE</emphasis> as the destination for the standard output of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stderr [-l | -s] <emphasis>STDERR_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDERR_FILE</emphasis> as the destination for the standard error of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x <emphasis>RSL_CLAUSE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Add a set of custom RSL attributes described by <emphasis>RSL_CLAUSE</emphasis> to the job description. The clause must be an RSL conjunction and may contain one or more attributes. This can be used to include attributes which can not be defined by other command-line options of <emphasis role="strong"><literal>globus-job-submit</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-l</emphasis> option is specified, then the executable is interpreted to be on a file system local to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-s</emphasis> option is specified, then the executable is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_7">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_4">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-job-run(1)</literal>, <literal>globus-job-clean(1)</literal>,
<literal>globus-job-get-output(1)</literal>, <literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
</chapter>
<chapter id="gram5-user-rsl">
<title>GRAM RSL Quick Reference</title>
<simpara>The GRAM RSL language is described in detail in the
<ulink url="../..gram5/developer/index.html#gram5-rsl">GRAM Developer&#8217;s Guide</ulink>.
For basic use, job description RSLs consist of a set of RSL attributes
preceded by the &amp; character. The basic job description looks like:</simpara>
<screen>&amp;
    (attribute = value )
    (attribute = value )
    ...</screen>
<simpara>The following list contains the RSL attributes which are available in
the core job manager. Other LRM-specific RSL attributes may also be
available in some situations.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>arguments</literal></emphasis>
</term>
<listitem>
<simpara>
     The command line arguments for the executable. Use quotes, if a space is required in a single argument.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>count</literal></emphasis>
</term>
<listitem>
<simpara>
     The number of executions of the executable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>directory</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies the path of the directory the jobmanager will use as the default directory for the requested job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>dry_run</literal></emphasis>
</term>
<listitem>
<simpara>
     If dryrun = yes then the jobmanager will not submit the job for execution and will return success.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>environment</literal></emphasis>
</term>
<listitem>
<simpara>
     The environment variables that will be defined for the executable in addition to default set that is given to the job by the jobmanager.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>executable</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the executable file to run on the remote machine. If the value is a GASS URL, the file is transferred to the remote gass cache before executing the job and removed after the job has terminated.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_clean_up</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of files which will be removed after the job is completed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_in</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("remote URL" "local file") pairs which indicate files to be staged to the nodes which will run the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_in_shared</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("remote URL" "local file") pairs which indicate files to be staged into the cache. A symlink from the cache to the "local file" path will be made.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_out</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("local file" "remote URL") pairs which indicate files to be staged from the job to a GASS-compatible file server.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gass_cache</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies location to override the GASS cache location.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gram_my_job</literal></emphasis>
</term>
<listitem>
<simpara>
     Obsolete and ignored.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>host_count</literal></emphasis>
</term>
<listitem>
<simpara>
     Only applies to clusters of SMP computers, such as newer IBM SP systems. Defines the number of nodes ("pizza boxes") to distribute the "count" processes across.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>job_type</literal></emphasis>
</term>
<listitem>
<simpara>
     This specifies how the jobmanager should start the job. Possible values are single (even if the count &gt; 1, only start 1 process or thread), multiple (start count processes or threads), mpi (use the appropriate method (e.g. mpirun) to start a program compiled with a vendor-provided MPI library. Program is started with count nodes), and condor (starts condor jobs in the "condor" universe.)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>library_path</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of paths to be appended to the system-specific library path environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>loglevel</literal></emphasis>
</term>
<listitem>
<simpara>
     Override the default log level for this job. The value of this attribute consists of a combination of the strings FATAL, ERROR, WARN, INFO, DEBUG, TRACE joined by the | character
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>logpattern</literal></emphasis>
</term>
<listitem>
<simpara>
     Override the default log path pattern for this job. The value of this attribute is a string (potentially containing RSL substitutions) that is evaluated to the path to write the log to. If the resulting string contains the string $(DATE) (or any other RSL substitution), it will be reevaluated at log time.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_cpu_time</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum cputime for a single execution of the executable. The units is in minutes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set cputime, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_memory</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum amount of memory for a single execution of the executable. The units is in Megabytes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set maxMemory, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_time</literal></emphasis>
</term>
<listitem>
<simpara>
     The maximum walltime or cputime for a single execution of the executable. Walltime or cputime is selected by the GRAM scheduler being interfaced. The units is in minutes. The value will go through an atoi() conversion in order to get an integer.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_wall_time</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum walltime for a single execution of the executable. The units is in minutes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set walltime, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>min_memory</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the minimum amount of memory for a single execution of the executable. The units is in Megabytes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set minMemory, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>project</literal></emphasis>
</term>
<listitem>
<simpara>
     Target the job to be allocated to a project account as defined by the scheduler at the defined (remote) resource.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>proxy_timeout</literal></emphasis>
</term>
<listitem>
<simpara>
     Obsolete and ignored. Now a job-manager-wide setting.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>queue</literal></emphasis>
</term>
<listitem>
<simpara>
     Target the job to a queue (class) name as defined by the scheduler at the defined (remote) resource.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>remote_io_url</literal></emphasis>
</term>
<listitem>
<simpara>
     Writes the given value (a URL base string) to a file, and adds the path to that file to the environment throught the GLOBUS_REMOTE_IO_URL environment variable. If this is specified as part of a job restart RSL, the job manager will update the file&#8217;s contents. This is intended for jobs that want to access files via GASS, but the URL of the GASS server has changed due to a GASS server restart.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>restart</literal></emphasis>
</term>
<listitem>
<simpara>
     Start a new job manager, but instead of submitting a new job, start managing an existing job. The job manager will search for the job state file created by the original job manager. If it finds the file and successfully reads it, it will become the new manager of the job, sending callbacks on status and streaming stdout/err if appropriate. It will fail if it detects that the old jobmanager is still alive (via a timestamp in the state file). If stdout or stderr was being streamed over the network, new stdout and stderr attributes can be specified in the restart RSL and the jobmanager will stream to the new locations (useful when output is going to a GASS server started by the client that&#8217;s listening on a dynamic port, and the client was restarted). The new job manager will return a new contact string that should be used to communicate with it. If a jobmanager is restarted multiple times, any of the previous contact strings can be given for the restart attribute.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>rsl_substitution</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of values which can be substituted into other rsl attributes' values through the $(SUBSTITUTION) mechanism.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>save_state</literal></emphasis>
</term>
<listitem>
<simpara>
     Causes the jobmanager to save it&#8217;s job state information to a persistent file on disk. If the job manager exits or is suspended, the client can later start up a new job manager which can continue monitoring the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>savejobdescription</literal></emphasis>
</term>
<listitem>
<simpara>
     Save a copy of the job description to $HOME
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>scratch_dir</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies the location to create a scratch subdirectory in. A SCRATCH_DIRECTORY RSL substitution will be filled with the name of the directory which is created.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stderr</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the remote file to store the standard error from the job. If the value is a GASS URL, the standard error from the job is transferred dynamically during the execution of the job. There are two accepted forms of this value. It can consist of a single destination: stderr = URL, or a sequence of destinations: stderr = (DESTINATION) (DESTINATION). In the latter case, the DESTINATION may itself be a URL or a sequence of an x-gass-cache URL followed by a cache tag."
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stderr_position</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies where in the file remote standard error streaming should be restarted from. Must be 0.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdin</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the file to be used as standard input for the executable on the remote machine. If the value is a GASS URL, the file is transferred to the remote gass cache before executing the job and removed after the job has terminated.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdout</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the remote file to store the standard output from the job. If the value is a GASS URL, the standard output from the job is transferred dynamically during the execution of the job. There are two accepted forms of this value. It can consist of a single destination: stdout = URL, or a sequence of destinations: stdout = (DESTINATION) (DESTINATION). In the latter case, the DESTINATION may itself be a URL or a sequence of an x-gass-cache URL followed by a cache tag.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdout_position</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies where in the file remote output streaming should be restarted from. Must be 0.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>two_phase</literal></emphasis>
</term>
<listitem>
<simpara>
     Use a two-phase commit for job submission and completion. The job manager will respond to the initial job request with a WAITING_FOR_COMMIT error. It will then wait for a signal from the client before doing the actual job submission. The integer supplied is the number of seconds the job manager should wait before timing out. If the job manager times out before receiving the commit signal, or if a client issues a cancel signal, the job manager will clean up the job&#8217;s files and exit, sending a callback with the job status as GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED. After the job manager sends a DONE or FAILED callback, it will wait for a commit signal from the client. If it receives one, it cleans up and exits as usual. If it times out and save_state was enabled, it will leave all of the job&#8217;s files in place and exit (assuming the client is down and will attempt a job restart later). The timeoutvalue can be extended via a signal. When one of the following errors occurs, the job manager does not delete the job state file when it exits: GLOBUS_GRAM_PROTOCOL_ERROR_COMMIT_TIMED_OUT, GLOBUS_GRAM_PROTOCOL_ERROR_TTL_EXPIRED, GLOBUS_GRAM_PROTOCOL_ERROR_JM_STOPPED, GLOBUS_GRAM_PROTOCOL_ERROR_USER_PROXY_EXPIRED. In these cases, it can not be restarted, so the job manager will not wait for the commit signal after sending the FAILED callback
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>username</literal></emphasis>
</term>
<listitem>
<simpara>
     Verify that the job is running as this user.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</chapter>
<chapter id="gram5-user-errors">
<title>GRAM Error Message Reference</title>
<section id="gram5-error-codes">
<title>Errors</title>
<table id="gram5-errors-table"
frame="all"
rowsep="1" colsep="1"
>
<title>GRAM5 Error Codes</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Error Code </entry>
<entry align="left" valign="top"> Reason </entry>
<entry align="left" valign="top"> Possible Solutions</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>one of the RSL parameters is not supported</simpara></entry>
<entry align="left" valign="top"><simpara>Check RSL documentation</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL length is greater than the maximum allowed</simpara></entry>
<entry align="left" valign="top"><simpara>Use RSL substitutions to reduce length of RSL strings</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>3</simpara></entry>
<entry align="left" valign="top"><simpara>an I/O operation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Enable trace logging and report to <ulink url="mailto:gram-dev@globus.org">gram-dev@globus.org</ulink></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>4</simpara></entry>
<entry align="left" valign="top"><simpara>jobmanager unable to set default to the directory requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>directory</literal> attribute refers to a directory that exists on the target system.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5</simpara></entry>
<entry align="left" valign="top"><simpara>the executable does not exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute refers to an executable that exists on the target system.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>6</simpara></entry>
<entry align="left" valign="top"><simpara>of an unused INSUFFICIENT_FUNDS</simpara></entry>
<entry align="left" valign="top"><simpara>Unimplemented feature.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>authentication with the remote server failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the contact string contains the proper X.509 DN.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>8</simpara></entry>
<entry align="left" valign="top"><simpara>the user cancelled the job</simpara></entry>
<entry align="left" valign="top"><simpara>Don&#8217;t cancel jobs you want to complete.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>9</simpara></entry>
<entry align="left" valign="top"><simpara>the system cancelled the job</simpara></entry>
<entry align="left" valign="top"><simpara>Check RSL requirements such as maximum time and memory are valid for the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>10</simpara></entry>
<entry align="left" valign="top"><simpara>data transfer to the server failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check gatekeeper and/or job manager logs to see why the process failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>11</simpara></entry>
<entry align="left" valign="top"><simpara>the stdin file does not exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdin</literal> attribute refers to a file that exists on the target system or has a valid ftp, gsiftp, http, or https URL.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>12</simpara></entry>
<entry align="left" valign="top"><simpara>the connection to the server failed (check host and port)</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the service is running on the expected TCP/IP port.
       Check that no firewall prevents contacting that TCP/IP port.
       Check <literal>$GLOBUS_LOCATION/var/globus-gatekeeper.log</literal> for runtme configuration errors.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>13</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>maxtime</emphasis> value is not an integer</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>maxtime</literal> value evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>14</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>count</emphasis> value is not an integer</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>count</literal> value evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>15</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager received an invalid RSL</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL string can be parsed by using <emphasis role="strong"><literal>globusrun -p RSL</literal></emphasis>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>16</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed in allowing others to make contact</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>17</simpara></entry>
<entry align="left" valign="top"><simpara>the job failed when the job manager attempted to run it</simpara></entry>
<entry align="left" valign="top"><simpara>Verify that the LRM is configured properly.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>18</simpara></entry>
<entry align="left" valign="top"><simpara>an invalid paradyn was specified</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>19</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>The RSL <literal>jobtype</literal> attribute is not indicated as supported by the LRM. Valid <literal>jobtype</literal> values are <literal>single</literal>,  <literal>multiple</literal>, <literal>mpi</literal>, and <literal>condor</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>20</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>myjob</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>21</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to locate an internal script argument file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/libexec/globus-job-manager-script.pl</literal> exists and is executable.
Check that the LRM-specific perl module is located in <literal>$GLOBUS_LOCATION/lib/perl/Globus/GRAM/JobManager/</literal> directory and is valid. The command <emphasis role="strong"><literal>perl -I$GLOBUS_LOCATION/lib/perl $GLOBUS_LOCATION/lib/perl/Globus/GRAM/JobManager/LRM.pm</literal></emphasis> can be used to check if there are any syntax errors in the script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>22</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create an internal script argument file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that your home directory is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>23</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid job state</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>24</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid script response</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs. This is likely a bug in the LRM script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>25</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid script status</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs. This is likely a bug in the LRM script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>26</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> value is not supported by this job manager</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>jobtype</literal> attribute is implemented by the LRM script. Note that some job types require configuration</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>27</simpara></entry>
<entry align="left" valign="top"><simpara>unused ERROR_UNIMPLEMENTED</simpara></entry>
<entry align="left" valign="top"><simpara>LRM does not support some feature included in the job request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>28</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create an internal script submission file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home file system is not full. Check job manager log</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>29</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager cannot find the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that client is delegating a proxy when authenticating with the gatekeeper.
Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>30</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>31</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to cancel the job as requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>32</simpara></entry>
<entry align="left" valign="top"><simpara>system memory allocation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for details.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>33</simpara></entry>
<entry align="left" valign="top"><simpara>the interprocess job communication initialization failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>34</simpara></entry>
<entry align="left" valign="top"><simpara>the interprocess job communication setup failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>35</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>host count</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>host_count</literal> attribute evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>36</simpara></entry>
<entry align="left" valign="top"><simpara>one of the provided RSL parameters is unsupported</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for details about invalid parameter.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>37</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>queue</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>queue</literal> attribute evaluates to a string that corresponds to an LRM-specific queue name.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>38</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>project</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>project</literal> attribute evaluates to a string that corresponds to an LRM-specific project name.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>39</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL string includes variables that could not be identified</simpara></entry>
<entry align="left" valign="top"><simpara>Check that all RSL substitutions are defined before being used in the job description.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>40</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>environment</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>environment</literal> attribute contains a sequence of <emphasis>VARIABLE</emphasis> <emphasis>VALUE</emphasis> pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>41</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>dryrun</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Remove the RSL <literal>dryrun</literal> attribute from the job description.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>42</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL is invalid (an empty string)</simpara></entry>
<entry align="left" valign="top"><simpara>Include a non-empty RSL string in your job submission request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>43</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to stage the executable</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the executable is reachable from the GRAM5 service node.
Check that the executable exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the executable.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>44</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to stage the stdin file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the standard input file is reachable from the GRAM5 service node.
Check that the standard input file exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the standard input file.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>45</simpara></entry>
<entry align="left" valign="top"><simpara>the requested job manager type is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>46</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>arguments</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>47</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper failed to run the job manager</simpara></entry>
<entry align="left" valign="top"><simpara>Check the gatekeeper or job manager logs for more information.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>48</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL could not be properly parsed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL string can be parsed by using <emphasis role="strong"><literal>globusrun -p RSL</literal></emphasis>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>49</simpara></entry>
<entry align="left" valign="top"><simpara>there is a version mismatch between GRAM components</simpara></entry>
<entry align="left" valign="top"><simpara>Ask system administrator to upgrade GRAM service to GRAM2 or GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>50</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>arguments</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>arguments</literal> attribute evaluates to a sequence of strings.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>51</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>count</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>count</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>52</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>directory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>directory</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>53</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>dryrun</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>dryrun</literal> attribute evaluates to either <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>54</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>environment</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>environment</literal> attribute evaluates to a sequence of VARIABLE, VALUE pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>55</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>executable</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>56</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>host_count</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>host_count</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>57</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>jobtype</literal> attribute evaluates to one of <literal>single</literal>, <literal>multiple</literal>, <literal>mpi</literal>, or <literal>condor</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>58</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>maxtime</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>maxtime</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>59</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>myjob</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>60</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>paradyn</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>61</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>project</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>project</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>62</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>queue</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>queue</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>63</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stderr</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stderr</literal> attribute evaluates to a string value or a sequence of DESTINATION URLs with optional CACHE_TAG string parameters.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>64</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdin</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdin</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>65</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdout</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdout</literal> attribute evaluates to a string value or a sequence of DESTINATION URLs with optional CACHE_TAG string parameters.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>66</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to locate an internal script</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for more details.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>67</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call pipe()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>68</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call fcntl()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>69</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create the temporary stdout filename</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>70</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create the temporary stderr filename</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>71</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call fork()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>72</simpara></entry>
<entry align="left" valign="top"><simpara>the executable file permissions do not allow execution</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute refers to an executable program or script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>73</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open stdout</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdout</literal> attribute refers to one or more valid destination files or URLs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>74</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open stderr</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stderr</literal> attribute refers to one or more valid destination files or URLs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>75</simpara></entry>
<entry align="left" valign="top"><simpara>the cache file could not be opened in order to relocate the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home directory is writable and not full on the GRAM5 service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>76</simpara></entry>
<entry align="left" valign="top"><simpara>cannot access cache files in ~/.globus/.gass_cache, check permissions, quota, and disk space</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home directory is writable and not full on the GRAM5 service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>77</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to insert the contact in the client contact list</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>78</simpara></entry>
<entry align="left" valign="top"><simpara>the contact was not found in the job manager&#8217;s client contact list</simpara></entry>
<entry align="left" valign="top"><simpara>Don&#8217;t attempt to unregister callback contacts that are not registered</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>79</simpara></entry>
<entry align="left" valign="top"><simpara>connecting to the job manager failed.  Possible reasons: job terminated, invalid job contact, network problems, &#8230;</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job manager process is running.
Check that the job manager credential has not expired.
Check that the job manager contact refers to the correct TCP/IP host and port.
Check that the job manager contact is not blocked by a firewall.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>80</simpara></entry>
<entry align="left" valign="top"><simpara>the syntax of the job contact is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the syntax of job contact string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>81</simpara></entry>
<entry align="left" valign="top"><simpara>the executable parameter in the RSL is undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Include the RSL <literal>executable</literal> in all job requests.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>82</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager service is misconfigured.  condor arch undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Add the <emphasis>-condor-arch</emphasis> to the command-line or configuration file for a job manager configured to use the <literal>condor</literal> LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>83</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager service is misconfigured.  condor os undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Add the <emphasis>-condor-os</emphasis> to the command-line or configuration file for a job manager configured to use the <literal>condor</literal> LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>84</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>min_memory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>min_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>85</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_memory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>86</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>min_memory</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>min_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>87</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_memory</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>88</simpara></entry>
<entry align="left" valign="top"><simpara>the creation of a HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>89</simpara></entry>
<entry align="left" valign="top"><simpara>parsing incoming HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>90</simpara></entry>
<entry align="left" valign="top"><simpara>the packing of information into a HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>91</simpara></entry>
<entry align="left" valign="top"><simpara>an incoming HTTP message did not contain the expected information</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>92</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager does not support the service that the client requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the client is talking to the correct servce</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>93</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper failed to find the requested service</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>94</simpara></entry>
<entry align="left" valign="top"><simpara>the jobmanager does not accept any new requests (shutting down)</simpara></entry>
<entry align="left" valign="top"><simpara>Execute queries before the job has been cleaned up.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>95</simpara></entry>
<entry align="left" valign="top"><simpara>the client failed to close the listener associated with the callback URL</simpara></entry>
<entry align="left" valign="top"><simpara>Call <literal>globus_gram_client_callback_disallow()</literal> with a valid the callback contact.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>96</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper contact cannot be parsed</simpara></entry>
<entry align="left" valign="top"><simpara>Check the syntax of the gatekeeper contact string you are attempting to contact.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>97</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not find the <emphasis>poe</emphasis> command</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>98</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not find the <emphasis>mpirun</emphasis> command</simpara></entry>
<entry align="left" valign="top"><simpara>Configure the LRM script with <literal>mpirun</literal> in your path.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>99</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>start_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>reservation_handle</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>101</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_wall_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_wall_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>102</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_wall_time</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_wall_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>103</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_cpu_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_cpu_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>104</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_cpu_time</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_cpu_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>105</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is misconfigured, a scheduler script is missing</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the adminstrator has configured the LRM by running its setup script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>106</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is misconfigured, a scheduler script has invalid permissions</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the adminstrator has installed the <literal>GLOBUS_LOCATION/libexec/globus-job-manager-script.pl</literal> script.
Check that the file system containing that script allows file execution.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>107</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to signal the job</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>108</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager did not recognize/support the signal type</simpara></entry>
<entry align="left" valign="top"><simpara>Check that your signal operation is using the correct signal constant.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>109</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to get the job id from the local scheduler</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>110</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is waiting for a commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Send a two-phase commit signal to the job manager to acknowledge receiving the job contact from the job manager.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>111</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager timed out while waiting for a commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Send a two-phase commit signal to the job manager to acknowledge receiving the job contact from the job manager.
Increase the two-phase commit time out for your job.
Check that the job manager contact TCP/IP port is reachable from your client.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>112</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>save_state</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>save_state</literal> attribute is set to <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>113</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>restart</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>restart</literal> attribute evaluates to a string containing a job contact string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>114</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>two_phase</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>two_phase</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>115</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>two_phase</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>two_phase</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>116</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdout_position</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>117</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>stdout_position</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>118</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stderr_position</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>119</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>stderr_position</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>120</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager restart attempt failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>121</simpara></entry>
<entry align="left" valign="top"><simpara>the job state file doesn&#8217;t exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job contact you are trying to restart matches one that the job manager returned to you.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>122</simpara></entry>
<entry align="left" valign="top"><simpara>could not read the job state file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the state file directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>123</simpara></entry>
<entry align="left" valign="top"><simpara>could not write the job state file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the state file directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>124</simpara></entry>
<entry align="left" valign="top"><simpara>old job manager is still alive</simpara></entry>
<entry align="left" valign="top"><simpara>Contact the returned job manager contact to manage the job you are trying to restart.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>125</simpara></entry>
<entry align="left" valign="top"><simpara>job manager state file TTL expired</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE in GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>126</simpara></entry>
<entry align="left" valign="top"><simpara>it is unknown if the job was submitted</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>127</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>remote_io_url</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>remote_io_url</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>128</simpara></entry>
<entry align="left" valign="top"><simpara>could not write the remote io url file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home file system on the job manager service node is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>129</simpara></entry>
<entry align="left" valign="top"><simpara>the standard output/error size is different</simpara></entry>
<entry align="left" valign="top"><simpara>Send a stdio update signal to redirect the job manager output to a new URL</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>130</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager was sent a stop signal (job is still running)</simpara></entry>
<entry align="left" valign="top"><simpara>Submit a restart request to monitor the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>131</simpara></entry>
<entry align="left" valign="top"><simpara>the user proxy expired (job is still running)</simpara></entry>
<entry align="left" valign="top"><simpara>Generate a new proxy and then submit a restart request to monitor the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>132</simpara></entry>
<entry align="left" valign="top"><simpara>the job was not submitted by original jobmanager</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>133</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is not waiting for that commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Do not send a commit signal to a job that is not waiting for a commit signal.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>134</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL scheduler specific parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the LRM-specific documentation to determine what values are legal for the RSL extensions implemented by the LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>135</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not stage in a file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the file to stage is reachable from the GRAM5 service node.
Check that the file to stage exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the file to stage.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>136</simpara></entry>
<entry align="left" valign="top"><simpara>the scratch directory could not be created</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the directory named by the RSL <literal>scratch_dir</literal> attribute exists and is writable.
Check that the directory named by the RSL <literal>scratch_dir</literal> attribute is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>137</simpara></entry>
<entry align="left" valign="top"><simpara>the provided <emphasis>gass_cache</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>138</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for job submission</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use restart- or signal-only RSL attributes when submitting a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>139</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for stdio update</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use submit- or restart-only RSL attributes when sending a stdio update signal to a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>140</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for job restart</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use submit- or signal-only RSL attributes when restarting a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>141</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_in</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_in</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>142</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_in_shared</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_in_shared</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>143</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_out</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_out</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>144</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>gass_cache</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>145</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_cleanup</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_clean_up</literal> attribute evaluates to a sequence of strings.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>146</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>scratch_dir</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>scratch_dir</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>147</simpara></entry>
<entry align="left" valign="top"><simpara>the provided scheduler-specific RSL parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the LRM-specific documentation to determine what values are legal for the RSL extensions implemented by the LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>148</simpara></entry>
<entry align="left" valign="top"><simpara>a required RSL attribute was not defined in the RSL spec</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute is present in your job request RSL.
Check that the RSL <literal>restart</literal> attributes is present in your restart RSL.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>149</simpara></entry>
<entry align="left" valign="top"><simpara>the gass_cache attribute points to an invalid cache directory</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attributes evaluates to a directory that exists or can be created.
Check that the user&#8217;s home file system is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>150</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>save_state</emphasis> parameter has an invalid value</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>save_state</literal> attribute has a value of <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>151</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not open the RSL attribute validation file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/globus-gram-job-manager.rvf</literal> is present and readable on the job manager service node.
Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/</literal><emphasis>LRM</emphasis><literal>.rvf</literal> is readable on the job manager service node if present.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>152</simpara></entry>
<entry align="left" valign="top"><simpara>the  job manager could not read the RSL attribute validation file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/globus-gram-job-manager.rvf</literal> is valid.
Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/</literal><emphasis>LRM</emphasis><literal>.rvf</literal> is valid if present.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>153</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>proxy_timeout</emphasis> is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>proxy_timeout</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>154</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>proxy_timeout</emphasis> value is not greater than zero</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>proxy_timeout</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>155</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not stage out a file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the source file being staged exists on the job manager service node.
Check that the directory of the destination file being staged exists on the file service node.
Check that the directory of the destination file being staged is writable by the user.
Check that the destination file service is reachable by the job manager service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>156</simpara></entry>
<entry align="left" valign="top"><simpara>the job contact string does not match any which the job manager is handling</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job contact string matches one returned from a job request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>157</simpara></entry>
<entry align="left" valign="top"><simpara>proxy delegation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job manager service node trusts the signer of your credential.
Check that you trust the signer of the job manager service node&#8217;s credential.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>158</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not lock the state lock file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file system holding the job state directory supports POSIX advisory locking.
Check that the job state directory is writable by the user on the service node.
Check that the job state directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>159</simpara></entry>
<entry align="left" valign="top"><simpara>an invalid globus_io_clientattr_t was used.</simpara></entry>
<entry align="left" valign="top"><simpara>Check that you have initialized the <literal>globus_io_clientattr_t</literal> attribute prior to using it with the GRAM client API.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>160</simpara></entry>
<entry align="left" valign="top"><simpara>an null parameter was passed to the gram library</simpara></entry>
<entry align="left" valign="top"><simpara>Check that you are passing legal values to all GRAM API calls.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>161</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is still streaming output</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>162</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your GRAM system administrator to allow a particular certificate to be authorized.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>163</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system reported a failure</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>164</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request - invalid job id</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.
Use a credential which is authorized to interact with a particular GRAM job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>165</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request - not authorized to run the specified executable</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.
Use a credential which is authorized to interact with a particular GRAM job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>166</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>user_name</emphasis> parameter is invalid.</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>user_name</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>167</simpara></entry>
<entry align="left" valign="top"><simpara>the job is not running in the account named by the <emphasis>user_name</emphasis> parameter.</simpara></entry>
<entry align="left" valign="top"><simpara>Ask with the GRAM system administrator to add an authorization entry to allow your credential to run jobs as the specified user account.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</chapter>
<chapter id="gram5-user-knownproblems">
<title>Known Problems in GRAM5</title>
<section id="gram5-outstanding">
<title>Known Problems in GRAM5</title>
<itemizedlist>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-45">GT-45</ulink>: Manager lock double-locked
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-47">GT-47</ulink>: globus-job-manager null pointer dereference for some call paths
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-52">GT-52</ulink>: SEG may deadlock with threads
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-56">GT-56</ulink>: Tear-down of object requires multiple threads
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-103">GT-103</ulink>: GRAM refresh credentials test sometimes fails because job terminates
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-292">GT-292</ulink>: Service tags may not isolate services completely
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-324">GT-324</ulink>: Behaviour of globus-job-status
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-369">GT-369</ulink>: GRAM5 skips some SEG events for PBS batch system
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-389">GT-389</ulink>: globusrun and globus-job-run don&#8217;t report job failures to user
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-418">GT-418</ulink>: globus-gatekeeper leaves stale processes behind if port 2119 is probed
</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter id="gram5-usage">
<title>Usage statistics collection by the Globus Alliance</title>
<section id="gram5-usage-stats">
<title>GRAM5-specific usage statistics</title>
<simpara>The following usage statistics are sent by default in a UDP packet (in
addition to the GRAM component code, packet version, timestamp, and
source IP address) at the end of each job.</simpara>
<itemizedlist>
<listitem>
<simpara>
Job Manager Session ID
</simpara>
</listitem>
<listitem>
<simpara>
dryrun used
</simpara>
</listitem>
<listitem>
<simpara>
RSL Host Count
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_UNSUBMITTED</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_FILE_STAGE_IN</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_PENDING</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_FILE_STAGE_OUT</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Timestamp when job hit <literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Job Failure Code
</simpara>
</listitem>
<listitem>
<simpara>
Number of times status is called
</simpara>
</listitem>
<listitem>
<simpara>
Number of times register is called
</simpara>
</listitem>
<listitem>
<simpara>
Number of times signal is called
</simpara>
</listitem>
<listitem>
<simpara>
Number of times refresh is called
</simpara>
</listitem>
<listitem>
<simpara>
Number of files named in file_clean_up RSL
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged in (including executable, stdin) from http servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged in (including executable, stdin) from https servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged in (including executable, stdin) from ftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged in (including executable, stdin) from gsiftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged into the GASS cache from http servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged into the GASS cache from https servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged into the GASS cache from ftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged into the GASS cache from gsiftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged out (including stdout and stderr) to http servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged out (including stdout and stderr) to https servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged out (including stdout and stderr) to ftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Number of files being staged out (including stdout and stderr) to gsiftp servers
</simpara>
</listitem>
<listitem>
<simpara>
Bitmask of used RSL attributes (values are 2^id from the gram5_rsl_attributes table)
</simpara>
</listitem>
<listitem>
<simpara>
Number of times unregister is called
</simpara>
</listitem>
<listitem>
<simpara>
Value of the <literal>count</literal> RSL attribute
</simpara>
</listitem>
<listitem>
<simpara>
Comma-separated list of string names of other RSL attributes not in the set defined in <literal>globus-gram-job-manager.rvf</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Job type string
</simpara>
</listitem>
<listitem>
<simpara>
Number of times the job was restarted
</simpara>
</listitem>
<listitem>
<simpara>
Total number of state callbacks sent to all clients for this job
</simpara>
</listitem>
</itemizedlist>
<simpara>The following information can be sent as well in a job status packet but
it is not sent unless explicitly enabled by the system administrator:</simpara>
<itemizedlist>
<listitem>
<simpara>
Value of the executable RSL attribute
</simpara>
</listitem>
<listitem>
<simpara>
Value of the arguments RSL attribute
</simpara>
</listitem>
<listitem>
<simpara>
IP adddress and port of the client that submitted the job
</simpara>
</listitem>
<listitem>
<simpara>
User DN of the client that submitted the job
</simpara>
</listitem>
</itemizedlist>
<simpara>In addition to job-related status, the job manager sends information
periodically about its execution status. The following information is
sent by default in a UDP packet (in addition to the GRAM component code,
packet version, timestamp, and source IP address) at job manager start
and every 1 hour during the job manager lifetime:</simpara>
<itemizedlist>
<listitem>
<simpara>
Job Manager Start Time
</simpara>
</listitem>
<listitem>
<simpara>
Job Manager Session ID
</simpara>
</listitem>
<listitem>
<simpara>
Job Manager Status Time
</simpara>
</listitem>
<listitem>
<simpara>
Job Manager Version
</simpara>
</listitem>
<listitem>
<simpara>
LRM
</simpara>
</listitem>
<listitem>
<simpara>
Poll used
</simpara>
</listitem>
<listitem>
<simpara>
Audit used
</simpara>
</listitem>
<listitem>
<simpara>
Number of restarted jobs
</simpara>
</listitem>
<listitem>
<simpara>
Total number of jobs
</simpara>
</listitem>
<listitem>
<simpara>
Total number of failed jobs
</simpara>
</listitem>
<listitem>
<simpara>
Total number of canceled jobs
</simpara>
</listitem>
<listitem>
<simpara>
Total number of completed jobs
</simpara>
</listitem>
<listitem>
<simpara>
Total number of dry-run jobs
</simpara>
</listitem>
<listitem>
<simpara>
Peak number of concurrently managed jobs
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently being managed
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the UNSUBMITTED state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the STAGE_IN state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the PENDING state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the ACTIVE state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the STAGE_OUT state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the FAILED state
</simpara>
</listitem>
<listitem>
<simpara>
Number of jobs currently in the DONE state
</simpara>
</listitem>
</itemizedlist>
<simpara>Also, please see our
<ulink url="/toolkit/docs/latest-stable/Usage_Stats.html">policy statement</ulink> on
the collection of usage statistics.</simpara>
</section>
</chapter>
</book>
