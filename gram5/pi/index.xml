<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>GT 6.0 Component Guide to Public Interfaces: GRAM5</title>
</bookinfo>
<chapter id="gram5-apis" xreflabel=" Guide to Public Interfaces">
<title>APIs</title>
<section id="_c_api_documentation_links">
<title>C API Documentation Links</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><ulink url="http://toolkit.globus.org/api/c-globus-6.0/group%5f%5fglobus%5f%5fgram%5f%5fprotocol.html">GRAM Protocol</ulink></emphasis>
</term>
<listitem>
<simpara>
     Low-level functions for processing GRAM protocol messages. Symbolic constants for RSL attributes, signals, and job states.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><ulink url="http://www.globus.org/api/c-globus-6.0/group%5f%5fglobus%5f%5fgram%5f%5fclient.html">GRAM Client</ulink></emphasis>
</term>
<listitem>
<simpara>
     Functions for submitting job requests, sending signals, and listening for job state updates.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><ulink url="http://www.globus.org/api/c-globus-6.0/group%5f%5fglobus%5f%5frsl.html">RSL</ulink></emphasis>
</term>
<listitem>
<simpara>
     Functions for parsing and manipulating job specifications in the RSL language.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><ulink url="http://www.globus.org/api/c-globus-6.0/group%5f%5fglobus%5f%5fscheduler%5f%5fevent%5f%5fgenerator.html">Scheduler Event Generator</ulink></emphasis>
</term>
<listitem>
<simpara>
     Functions for generating and parsing LRM-independent job state change events.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_gram5_perl_api_reference">
<title>GRAM5 Perl API Reference</title>
<simpara>GRAM5 also provides a Perl API for creating LRM interface implementations.</simpara>
<section id="Globus::GRAM::Error">
<title>GLOBUS::GRAM::ERROR(3pm)</title>
<section id="_name">
<title>NAME</title>
<simpara>Globus::GRAM::Error - GRAM Protocol Error Constants</simpara>
</section>
<section id="ID-c60796a234d35f578606676c401dfc40">
<title>DESCRIPTION</title>
<simpara>The Globus::GRAM::Error module defines symbolic names for the Error
constants in the GRAM Protocol.</simpara>
<simpara>The Globus::GRAM::Error module methods return an object consisting of an
integer erorr code, and (optionally) a string explaining the error.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">$error = new Globus::GRAM::Error($number, $string);</emphasis>
</term>
<listitem>
<simpara>
     Create a new error object with the given error number and string
description. This is called by the error-specific factory methods
described below.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error&#8594;string()</emphasis>
</term>
<listitem>
<simpara>
     Return the error string associated with a Globus::GRAM::Error object.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error&#8594;value()</emphasis>
</term>
<listitem>
<simpara>
     Return the integer error code associated with a Globus::GRAM::Error
object.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::PARAMETER_NOT_SUPPORTED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new PARAMETER_NOT_SUPPORTED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_REQUEST()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_REQUEST GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::NO_RESOURCES()</emphasis>
</term>
<listitem>
<simpara>
     Create a new NO_RESOURCES GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_DIRECTORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_DIRECTORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::EXECUTABLE_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new EXECUTABLE_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INSUFFICIENT_FUNDS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INSUFFICIENT_FUNDS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::AUTHORIZATION()</emphasis>
</term>
<listitem>
<simpara>
     Create a new AUTHORIZATION GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::USER_CANCELLED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new USER_CANCELLED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::SYSTEM_CANCELLED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new SYSTEM_CANCELLED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::PROTOCOL_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new PROTOCOL_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STDIN_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STDIN_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CONNECTION_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CONNECTION_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_MAXTIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_MAXTIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_COUNT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_COUNT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::NULL_SPECIFICATION_TREE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new NULL_SPECIFICATION_TREE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JM_FAILED_ALLOW_ATTACH()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JM_FAILED_ALLOW_ATTACH GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOB_EXECUTION_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOB_EXECUTION_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_PARADYN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_PARADYN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_JOBTYPE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_JOBTYPE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_GRAM_MYJOB()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_GRAM_MYJOB GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_SCRIPT_ARG_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_SCRIPT_ARG_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::ARG_FILE_CREATION_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new ARG_FILE_CREATION_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_JOBSTATE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_JOBSTATE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SCRIPT_REPLY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SCRIPT_REPLY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SCRIPT_STATUS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SCRIPT_STATUS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOBTYPE_NOT_SUPPORTED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOBTYPE_NOT_SUPPORTED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::UNIMPLEMENTED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new UNIMPLEMENTED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::TEMP_SCRIPT_FILE_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new TEMP_SCRIPT_FILE_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::USER_PROXY_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new USER_PROXY_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_USER_PROXY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_USER_PROXY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOB_CANCEL_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOB_CANCEL_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::MALLOC_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new MALLOC_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::DUCT_INIT_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new DUCT_INIT_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::DUCT_LSP_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new DUCT_LSP_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_HOST_COUNT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_HOST_COUNT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::UNSUPPORTED_PARAMETER()</emphasis>
</term>
<listitem>
<simpara>
     Create a new UNSUPPORTED_PARAMETER GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_QUEUE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_QUEUE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_PROJECT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_PROJECT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_EVALUATION_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_EVALUATION_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_RSL_ENVIRONMENT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_RSL_ENVIRONMENT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::DRYRUN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new DRYRUN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::ZERO_LENGTH_RSL()</emphasis>
</term>
<listitem>
<simpara>
     Create a new ZERO_LENGTH_RSL GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STAGING_EXECUTABLE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STAGING_EXECUTABLE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STAGING_STDIN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STAGING_STDIN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_JOB_MANAGER_TYPE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_JOB_MANAGER_TYPE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_ARGUMENTS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_ARGUMENTS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::GATEKEEPER_MISCONFIGURED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new GATEKEEPER_MISCONFIGURED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_RSL()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_RSL GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::VERSION_MISMATCH()</emphasis>
</term>
<listitem>
<simpara>
     Create a new VERSION_MISMATCH GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_ARGUMENTS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_ARGUMENTS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_COUNT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_COUNT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_DIRECTORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_DIRECTORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_DRYRUN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_DRYRUN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_ENVIRONMENT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_ENVIRONMENT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_EXECUTABLE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_EXECUTABLE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_HOST_COUNT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_HOST_COUNT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_JOBTYPE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_JOBTYPE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MAXTIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MAXTIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MYJOB()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MYJOB GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_PARADYN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_PARADYN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_PROJECT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_PROJECT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_QUEUE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_QUEUE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_STDERR()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_STDERR GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_STDIN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_STDIN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_STDOUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_STDOUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_JOBMANAGER_SCRIPT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_JOBMANAGER_SCRIPT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CREATING_PIPE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CREATING_PIPE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::FCNTL_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new FCNTL_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STDOUT_FILENAME_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STDOUT_FILENAME_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STDERR_FILENAME_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STDERR_FILENAME_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::FORKING_EXECUTABLE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new FORKING_EXECUTABLE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::EXECUTABLE_PERMISSIONS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new EXECUTABLE_PERMISSIONS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_STDOUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_STDOUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_STDERR()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_STDERR GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_CACHE_USER_PROXY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_CACHE_USER_PROXY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_CACHE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_CACHE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INSERTING_CLIENT_CONTACT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INSERTING_CLIENT_CONTACT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CLIENT_CONTACT_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CLIENT_CONTACT_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CONTACTING_JOB_MANAGER()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CONTACTING_JOB_MANAGER GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_JOB_CONTACT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_JOB_CONTACT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::UNDEFINED_EXE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new UNDEFINED_EXE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CONDOR_ARCH()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CONDOR_ARCH GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CONDOR_OS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CONDOR_OS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MIN_MEMORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MIN_MEMORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MAX_MEMORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MAX_MEMORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_MIN_MEMORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_MIN_MEMORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_MAX_MEMORY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_MAX_MEMORY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::HTTP_FRAME_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new HTTP_FRAME_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::HTTP_UNFRAME_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new HTTP_UNFRAME_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::HTTP_PACK_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new HTTP_PACK_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::HTTP_UNPACK_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new HTTP_UNPACK_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_JOB_QUERY()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_JOB_QUERY GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::SERVICE_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new SERVICE_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOB_QUERY_DENIAL()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOB_QUERY_DENIAL GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::CALLBACK_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new CALLBACK_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::BAD_GATEKEEPER_CONTACT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new BAD_GATEKEEPER_CONTACT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::POE_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new POE_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::MPIRUN_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new MPIRUN_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_START_TIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_START_TIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_RESERVATION_HANDLE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_RESERVATION_HANDLE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MAX_WALL_TIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MAX_WALL_TIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_MAX_WALL_TIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_MAX_WALL_TIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_MAX_CPU_TIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_MAX_CPU_TIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_MAX_CPU_TIME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_MAX_CPU_TIME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JM_SCRIPT_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JM_SCRIPT_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JM_SCRIPT_PERMISSIONS()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JM_SCRIPT_PERMISSIONS GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::SIGNALING_JOB()</emphasis>
</term>
<listitem>
<simpara>
     Create a new SIGNALING_JOB GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::UNKNOWN_SIGNAL_TYPE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new UNKNOWN_SIGNAL_TYPE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::GETTING_JOBID()</emphasis>
</term>
<listitem>
<simpara>
     Create a new GETTING_JOBID GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::WAITING_FOR_COMMIT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new WAITING_FOR_COMMIT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::COMMIT_TIMED_OUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new COMMIT_TIMED_OUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_SAVE_STATE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_SAVE_STATE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_RESTART()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_RESTART GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_TWO_PHASE_COMMIT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_TWO_PHASE_COMMIT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_TWO_PHASE_COMMIT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_TWO_PHASE_COMMIT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_STDOUT_POSITION()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_STDOUT_POSITION GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_STDOUT_POSITION()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_STDOUT_POSITION GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_STDERR_POSITION()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_STDERR_POSITION GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_STDERR_POSITION()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_STDERR_POSITION GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RESTART_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RESTART_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::NO_STATE_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new NO_STATE_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::READING_STATE_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new READING_STATE_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::WRITING_STATE_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new WRITING_STATE_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OLD_JM_ALIVE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OLD_JM_ALIVE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::TTL_EXPIRED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new TTL_EXPIRED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::SUBMIT_UNKNOWN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new SUBMIT_UNKNOWN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_REMOTE_IO_URL()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_REMOTE_IO_URL GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::WRITING_REMOTE_IO_URL()</emphasis>
</term>
<listitem>
<simpara>
     Create a new WRITING_REMOTE_IO_URL GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STDIO_SIZE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STDIO_SIZE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JM_STOPPED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JM_STOPPED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::USER_PROXY_EXPIRED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new USER_PROXY_EXPIRED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOB_UNSUBMITTED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOB_UNSUBMITTED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_COMMIT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_COMMIT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_SCHEDULER_SPECIFIC()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_SCHEDULER_SPECIFIC GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STAGE_IN_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STAGE_IN_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SCRATCH()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SCRATCH GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_CACHE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_CACHE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SUBMIT_ATTRIBUTE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SUBMIT_ATTRIBUTE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_STDIO_UPDATE_ATTRIBUTE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_STDIO_UPDATE_ATTRIBUTE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_RESTART_ATTRIBUTE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_RESTART_ATTRIBUTE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_FILE_STAGE_IN()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_FILE_STAGE_IN GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_FILE_STAGE_IN_SHARED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_FILE_STAGE_IN_SHARED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_FILE_STAGE_OUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_FILE_STAGE_OUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_GASS_CACHE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_GASS_CACHE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_FILE_CLEANUP()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_FILE_CLEANUP GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_SCRATCH()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_SCRATCH GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SCHEDULER_SPECIFIC()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SCHEDULER_SPECIFIC GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::UNDEFINED_ATTRIBUTE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new UNDEFINED_ATTRIBUTE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_CACHE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_CACHE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_SAVE_STATE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_SAVE_STATE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::OPENING_VALIDATION_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new OPENING_VALIDATION_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::READING_VALIDATION_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new READING_VALIDATION_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_PROXY_TIMEOUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_PROXY_TIMEOUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_PROXY_TIMEOUT()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_PROXY_TIMEOUT GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STAGE_OUT_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STAGE_OUT_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::JOB_CONTACT_NOT_FOUND()</emphasis>
</term>
<listitem>
<simpara>
     Create a new JOB_CONTACT_NOT_FOUND GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::DELEGATION_FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new DELEGATION_FAILED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::LOCKING_STATE_LOCK_FILE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new LOCKING_STATE_LOCK_FILE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_ATTR()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_ATTR GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::NULL_PARAMETER()</emphasis>
</term>
<listitem>
<simpara>
     Create a new NULL_PARAMETER GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::STILL_STREAMING()</emphasis>
</term>
<listitem>
<simpara>
     Create a new STILL_STREAMING GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::AUTHORIZATION_DENIED()</emphasis>
</term>
<listitem>
<simpara>
     Create a new AUTHORIZATION_DENIED GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::AUTHORIZATION_SYSTEM_FAILURE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new AUTHORIZATION_SYSTEM_FAILURE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::AUTHORIZATION_DENIED_JOB_ID()</emphasis>
</term>
<listitem>
<simpara>
     Create a new AUTHORIZATION_DENIED_JOB_ID GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::AUTHORIZATION_DENIED_EXECUTABLE()</emphasis>
</term>
<listitem>
<simpara>
     Create a new AUTHORIZATION_DENIED_EXECUTABLE GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::RSL_USER_NAME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new RSL_USER_NAME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::INVALID_USER_NAME()</emphasis>
</term>
<listitem>
<simpara>
     Create a new INVALID_USER_NAME GRAM error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$error = Globus::GRAM::Error::LAST()</emphasis>
</term>
<listitem>
<simpara>
     Create a new LAST GRAM error.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="Globus::GRAM::JobDescription">
<title>GLOBUS::GRAM::JOBDESCRIPTION(3pm)</title>
<section id="_name_2">
<title>NAME</title>
<simpara>Globus::GRAM::JobDescription - GRAM Job Description</simpara>
</section>
<section id="_name_3">
<title>NAME</title>
<literallayout class="monospaced">-</literallayout>
</section>
<section id="ID-0438a8e2a51c2613b43085fb482b3c22">
<title>DESCRIPTION</title>
<simpara>This object contains the parameters of a job request in a simple object
wrapper. The object may be queried to determine the value of any RSL
parameter, may be updated with new parameters, and may be saved in the
filesystem for later use.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">new Globus::GRAM::JobDescription(</emphasis>$filename<emphasis role="strong">)</emphasis>
</term>
<listitem>
<simpara>
     A JobDescription is constructed from a file consisting of a Perl hash of
parameter &#8658; array mappings. Every value in the Job Description is
stored internally as an array, even single literals, similar to the way
an RSL tree is parsed in C. An example of such a file is
</simpara>
<screen>$description =
{
    executable  =&gt; [ '/bin/echo' ],
    arguments   =&gt; [ 'hello', 'world' ],
    environment =&gt; [
                       [
                           'GLOBUS_GRAM_JOB_CONTACT',
                           'https://globus.org:1234/2345/4332'
                       ]
                   ]
};</screen>
<simpara>which corresponds to the rsl fragment</simpara>
<screen>&amp;(executable  = /bin/echo)
 (arguments   = hello world)
 (environment =
     (GLOBUS_GRAM_JOB_CONTACT 'https://globus.org:1234/2345/4332')
 )</screen>
<simpara>When the library_path RSL attribute is specified, this object modifies
the environment RSL attribute value to append its value to any system
specific variables.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$description&#8594;</emphasis>add<emphasis role="strong">(<emphasis>name</emphasis>, </emphasis>$value<emphasis role="strong">);</emphasis>
</term>
<listitem>
<simpara>
     Add a parameter to a job description. The parameter will be normalized
internally so that the access methods described below will work with
this new parameter. As an example,
</simpara>
<screen>$description-&gt;add('new_attribute', $new_value)</screen>
<simpara>will create a new attribute in the JobDescription, which can be accessed
by calling the <emphasis role="strong">$description-</emphasis>new_attribute&gt;() method.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis role="strong">*$value</emphasis> $description&#8594;<emphasis role="strong">get</emphasis>(<emphasis>name</emphasis>);</emphasis>*
</term>
<listitem>
<simpara>
     Get a parameter from a job description. As an example,
</simpara>
<screen>$description-&gt;get('attribute')</screen>
<simpara>will return the appropriate attribute in the JobDescription by name.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$description&#8594;</emphasis>save<emphasis role="strong">([$filename])</emphasis>
</term>
<listitem>
<simpara>
     Save the JobDescription, including any added parameters, to the file
named by $filename if present, or replacing the file used in
constructing the object.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$description&#8594;</emphasis>print_recursive<emphasis role="strong">($file_handle)</emphasis>
</term>
<listitem>
<simpara>
     Write the value of the job description object to the file handle
specified in the argument list.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$description&#8594;</emphasis>parameter<emphasis role="strong">()</emphasis>
</term>
<listitem>
<simpara>
     For any parameter defined in the JobDescription can be accessed by
calling the method named by the parameter. The method names are
automatically created when the JobDescription is created, and may be
invoked with arbitrary SillyCaps or underscores. That is, the parameter
gram_myjob may be accessed by the GramMyJob, grammyjob, or gram_my_job
method names (and others).
</simpara>
<simpara>If the attributes does not in this object, then undef will be returned.</simpara>
<simpara>In a list context, this returns the list of values associated with an
attribute.</simpara>
<simpara>In a scalar context, if the attribute&#8217;s value consist of a single
literal, then that literal will be returned, otherwise undef will be
returned.</simpara>
<simpara>For example, from a JobDescription called $d constructed from a
description file containing</simpara>
<screen>{
    executable =&gt; [ '/bin/echo' ],
    arguments  =&gt; [ 'hello', 'world' ]
}</screen>
<simpara>The following will hold:</simpara>
<screen>$executable = $d-&gt;executable()    # '/bin/echo'
$arguments = $d-&gt;arguments()      # undef
@executable = $d-&gt;executable()    # ('/bin/echo')
@arguments = $d-&gt;arguments()      # ('hello', 'world')
$not_present = $d-&gt;not_present()  # undef
@not_present = $d-&gt;not_present()  # ()</screen>
<simpara>To test for existence of a value:</simpara>
<screen>@not_present = $d-&gt;not_present()
print "Not defined\n" if(!defined($not_present[0]));</screen>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="Globus::GRAM::JobManager">
<title>GLOBUS::GRAM::JOBMANAGER(3pm)</title>
<section id="_name_4">
<title>NAME</title>
<simpara>Globus::GRAM::JobManager - Base class for all Job Manager scripts</simpara>
</section>
<section id="_name_5">
<title>NAME</title>
<literallayout class="monospaced">-</literallayout>
</section>
<section id="ID-e96f19759006b55f2a0d9c05142531b8">
<title>DESCRIPTION</title>
<simpara>The Globus::GRAM::JobManager module implements the base behavior for a
Job Manager script interface. Scheduler-specific job manager scripts
must inherit from this module in order to be used by the job manager.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">$manager = Globus::GRAM::JobManager&#8594;new($JobDescription)</emphasis>
</term>
<listitem>
<simpara>
     Each Globus::GRAM::JobManager object is created by calling the
constructor with a single argument, a Globus::GRAM::JobDescription
object containing the information about the job request which the script
will be modifying. Modules which subclass Globus::GRAM::JobManager MUST
call the super-class&#8217;s constructor, as in this code fragment:
</simpara>
<screen>my $proto = shift;
my $class = ref($proto) || $proto;
my $self = $class-&gt;SUPER::new(@_);

bless $self, $class;</screen>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;log($string)</emphasis>
</term>
<listitem>
<simpara>
     Log a message to the job manager log file. The message is preceded by a
timestamp.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;nfssync($object,$create)</emphasis>
</term>
<listitem>
<simpara>
     Send an NFS update by touching the file (or directory) in question. If
the $create is true, a file will be created. If it is false, the $object
will not be created.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;respond($message)</emphasis>
</term>
<listitem>
<simpara>
     Send a response to the job manager program. The response may either be a
hash reference consisting of a hash of (variable, value) pairs, which
will be returned to the job manager, or an already formatted string.
This only needs to be directly called by a job manager implementation
when the script wants to send a partial response while processing one of
the scheduler interface methods (for example, to indicate that a file
has been staged).
</simpara>
<simpara>The valid keys for a response are defined in the RESPONSES section.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;submit()</emphasis>
</term>
<listitem>
<simpara>
     Submit a job request to the scheduler. The default implementation
returns with the Globus::GRAM::Error::UNIMPLEMENTED error. Scheduler
specific subclasses should reimplement this method to submit the job to
the scheduler.
</simpara>
<simpara>A scheduler which implements this method should return a hash reference
containing a scheduler-specific job identifier as the value of the
hash&#8217;s JOB_ID key, and optionally, the a GRAM job state as the value of
the hash&#8217;s JOB_STATE key if the job submission was successful; otherwise
a Globus::GRAM::Error value should be returned. The job state values are
defined in the Globus::GRAM::JobState module. The job parameters (as
found in the job rsl) are defined in Globus::GRAM::Jobdescription object</simpara>
<simpara>For example:</simpara>
<screen>return {JOB_STATE =&gt; Globus::GRAM::JobState::PENDING,
        JOB_ID =&gt; $job_id};</screen>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;poll()</emphasis>
</term>
<listitem>
<simpara>
     Poll a job&#8217;s status. The default implementation returns with the
Globus::GRAM::Error::UNIMPLEMENTED error. Scheduler specific subclasses
should reimplement this method to poll the scheduler.
</simpara>
<simpara>A scheduler which implements this method should return a hash reference
containing the JOB_STATE value. The job&#8217;s ID can be accessed by calling</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;cancel()</emphasis>
</term>
<listitem>
<simpara>
     Cancel a job. The default implementation returns with the
Globus::GRAM::Error::UNIMPLEMENTED error. Scheduler specific subclasses
should reimplement this method to remove the job from the scheduler.
</simpara>
<simpara>A scheduler which implements this method should return a hash reference
containing the JOB_STATE value. The job&#8217;s ID can be accessed by calling</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;signal()</emphasis>
</term>
<listitem>
<simpara>
     Signal a job. The default implementation returns with the
Globus::GRAM::Error::UNIMPLEMENTED error. Scheduler specific subclasses
should reimplement this method to remove the job from the scheduler. The
JobManager module can determine the job&#8217;s ID, the signal number, and the
(optional) signal arguments from the Job Description by calling it&#8217;s
job_id(), signal(), and and signal_arg() methods, respectively.
</simpara>
<simpara>Depending on the signal, it may be appropriate for the JobManager object
to return a hash reference containing a JOB_STATE update.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;make_scratchdir()</emphasis>
</term>
<listitem>
<simpara>
     Create a scratch directory for a job. The scratch directory location is
based on the JobDescription&#8217;s scratch_dir_base() and scratch_dir()
methods.
</simpara>
<simpara>If the scratch_dir() value is a relative path, then a directory will be
created as a subdirectory of scratch_dir_base()/scratch_dir(),
otherwise, it will be created as a subdirectory of scratch_dir(). This
method will return a hash reference containing mapping SCRATCH_DIR to
the absolute path of newly created scratch directory if successful.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;remove_scratchdir()</emphasis>
</term>
<listitem>
<simpara>
     Delete a job&#8217;s scratch directory. All files and subdirectories of the
JobDescription&#8217;s scratch_directory() will be deleted.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;file_cleanup()</emphasis>
</term>
<listitem>
<simpara>
     Delete some job-related files. All files listed in the JobDescription&#8217;s
file_cleanup() array will be deleted.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;rewrite_urls()</emphasis>
</term>
<listitem>
<simpara>
     Looks up URLs listed in the JobDescription&#8217;s stdin() and executable(),
and replaces them with paths to locally cached copies.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;stage_in()</emphasis>
</term>
<listitem>
<simpara>
     Stage input files need for the job from remote storage. The files to be
staged are defined by the array of [URL, path] pairs in the job
description&#8217;s file_stage_in() and file_stage_in_shared() methods. The
Globus::GRAM::JobManager module provides an implementation of this
functionality using the globus-url-copy and globus-gass-cache programs.
Files which are staged in are not automatically removed when the job
terminates.
</simpara>
<simpara>This function returns intermediate responses using the
Globus::GRAM::JobManager::response() method to let the job manager know
when each individual file has been staged.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;stage_out()</emphasis>
</term>
<listitem>
<simpara>
     Stage output files generated by this job to remote storage. The files to
be staged are defined by the array of [URL, destination] pairs in the
job description&#8217;s file_stage_out() method. The Globus::GRAM::JobManager
module provides an implementation of this functionality using the
globus-url-copy program. Files which are staged out are not removed by
this method.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;cache_cleanup()</emphasis>
</term>
<listitem>
<simpara>
     Clean up cache references in the GASS which match this job&#8217;s cache tag .
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;remote_io_file_create()</emphasis>
</term>
<listitem>
<simpara>
     Create the remote I/O file in the job dir which will contain the
remote_io_url RSL attribute&#8217;s value.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;proxy_relocate()</emphasis>
</term>
<listitem>
<simpara>
     Relocate the delegated proxy for job execution. Job Managers need to
override the default if they intend to relocate the proxy into some
common file system other than the cache. The job manager program does
not depend on the new location of the proxy. Job Manager modules must
not remove the default proxy.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$hashref = $manager&#8594;proxy_update();</emphasis>
</term>
<term>
<emphasis role="strong">$manager&#8594;append_path($ref, $var, $path)</emphasis>
</term>
<listitem>
<simpara>
     Append $path to the value of $ref&#8594;{$var}, dealing with the case where
$ref&#8594;{$var} is not yet defined.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;pipe_out_cmd(@arg)</emphasis>
</term>
<listitem>
<simpara>
     Create a new process to run the first argument application with the
remaining arguments (which may be empty). No shell metacharacter will be
evaluated, avoiding a shell invocation. Stderr is redirected to
/dev/null and stdout is being captured by the parent process, which is
also the result returned. In list mode, all lines are returned, in
scalar mode, only the first line is being returned. The line termination
character is already cut off. Use this function as more efficient
backticks, if you do not need shell metacharacter evaluation.
</simpara>
<simpara>Caution: This function deviates in two manners from regular backticks.
Firstly, it chomps the line terminator from the output. Secondly, it
returns only the first line in scalar context instead of a multiline
concatinated string. As with regular backticks, the result may be
undefined in scalar context, if no result exists.</simpara>
<simpara>A child error code with an exit code of 127 indicates that the
application could not be run. The scalar result returned by this
function is usually undef&#8217;ed in this case.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">($stder, $rc) = $manager&#8594;pipe_err_cmd(@arg)</emphasis>
</term>
<listitem>
<simpara>
     Create a new process to run the first argument application with the
remaining arguments (which may be empty). No shell metacharacter will be
evaluated, avoiding a shell invocation.
</simpara>
<simpara>This method returns a list of two items, the standard error of the
program, and the exit code of the program. If the error code is 127,
then the application could not be run. Standard output is discarded.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;fork_and_exec_cmd(@arg)</emphasis>
</term>
<listitem>
<simpara>
     Fork off a child to run the first argument in the list. Remaining
arguments will be passed, but shell interpolation is avoided. Signals
SIGINT and SIGQUIT are ignored in the child process. Stdout is appended
to /dev/null, and stderr is dup2 from stdout. The parent waits for the
child to finish, and returns the value for the CHILD_ERROR variable as
result. Use this function as more efficient system() call, if you can do
not need shell metacharacter evaluation.
</simpara>
<simpara>Note that the inability to execute the program will result in a status
code of 127.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;job_dir()</emphasis>
</term>
<listitem>
<simpara>
     Return the temporary directory to store job-related files, which have no
need for file caching.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$manager&#8594;setup_softenv()</emphasis>
</term>
<listitem>
<simpara>
     Either add a line to the specified command script file handle to load
the user&#8217;s default SoftEnv configuration, or create a custom SoftEnv
script and add commands to the specified command script file handle to
load it.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ID-bcb5fd9dba9a920db0007cc56619dab1">
<title>RESPONSES</title>
<simpara>When returning from a job interface method, or when sending an
intermediate response via the <emphasis role="strong">response</emphasis>() method, the following hash
keys are valid:</simpara>
<itemizedlist>
<listitem>
<simpara>
JOB_STATE**::
     An integer job state value. These are enumerated in the
Globus::GRAM::JobState module.
</simpara>
</listitem>
<listitem>
<simpara>
ERROR**::
     An integer error code. These are enumerated in the Globus::GRAM::Error
module.
</simpara>
</listitem>
<listitem>
<simpara>
JOB_ID<emphasis role="strong">::
     A string containing a job identifier, which can be used to poll, cancel,
or signal a job in progress. This response should only be returned by
the </emphasis>submit** method.
</simpara>
</listitem>
<listitem>
<simpara>
SCRATCH_DIR<emphasis role="strong">::
     A string containing the path to a newly-created scratch directory. This
response should only be returned by the </emphasis>make_scratchdir** method.
</simpara>
</listitem>
<listitem>
<simpara>
STAGED_IN<emphasis role="strong">::
     A string containing the (URL, path) pair for a file which has now been
staged in. This response should only be returned by the </emphasis>stage_in**
method.
</simpara>
</listitem>
<listitem>
<simpara>
STAGED_IN_SHARED<emphasis role="strong">::
     A string containing the (URL, path) pair for a file which has now been
staged in and symlinked from the cache. This response should only be
returned by the </emphasis>stage_in_shared** method.
</simpara>
</listitem>
<listitem>
<simpara>
STAGED_OUT<emphasis role="strong">::
     A string containing the (path, URL) pair for a file which has now been
staged out by the script. This response should only be returned by the
</emphasis>stage_out** method.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="Globus::GRAM::JobSignal">
<title>GLOBUS::GRAM::JOBSIGNAL(3pm)</title>
<section id="_name_6">
<title>NAME</title>
<simpara>Globus::GRAM::JobSignal - GRAM Protocol JobSignal Constants</simpara>
</section>
<section id="ID-dde2a5ed0f147b3205232afefdde1cf6">
<title>DESCRIPTION</title>
<simpara>The Globus::GRAM::JobSignal module defines symbolic names for the
JobSignal constants in the GRAM Protocol.</simpara>
<screen></screen>
<sidebar>
<screen></screen>
</sidebar>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::CANCEL()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the CANCEL constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::SUSPEND()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the SUSPEND constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::RESUME()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the RESUME constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::PRIORITY()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the PRIORITY constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::COMMIT_REQUEST()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the COMMIT_REQUEST constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::COMMIT_EXTEND()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the COMMIT_EXTEND constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::STDIO_UPDATE()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the STDIO_UPDATE constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::STDIO_SIZE()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the STDIO_SIZE constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::STOP_MANAGER()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the STOP_MANAGER constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::COMMIT_END()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the COMMIT_END constant.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="Globus::GRAM::JobState">
<title>GLOBUS::GRAM::JOBSTATE(3pm)</title>
<section id="_name_7">
<title>NAME</title>
<simpara>Globus::GRAM::JobState - GRAM Protocol JobState Constants</simpara>
</section>
<section id="ID-419977e2b3d9757b513072e147336574">
<title>DESCRIPTION</title>
<simpara>The Globus::GRAM::JobState module defines symbolic names for the
JobState constants in the GRAM Protocol.</simpara>
<screen></screen>
<sidebar>
<screen></screen>
</sidebar>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::PENDING()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the PENDING constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::ACTIVE()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the ACTIVE constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::FAILED()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the FAILED constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::DONE()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the DONE constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::SUSPENDED()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the SUSPENDED constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::UNSUBMITTED()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the UNSUBMITTED constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::STAGE_IN()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the STAGE_IN constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::STAGE_OUT()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the STAGE_OUT constant.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">$value = Globus::GRAM::ALL()</emphasis>
</term>
<listitem>
<simpara>
     Return the value of the ALL constant.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
</section>
</chapter>
<chapter id="gram5-rsl">
<title>RSL Specification v1.1</title>
<simpara>This is a document to specify the existing RSL v1.0 implementation and
interfaces, as they are provided in the GT 6.0 release. This document
serves as a reference, and more introductory text.</simpara>
<simpara>The Globus Resource Specification Language (RSL) provides a common
interchange language to describe resources. The various components of
the Globus Resource Management architecture manipulate RSL strings to
perform their management functions in cooperation with the other
components in the system. The RSL provides the skeletal syntax used to
compose complicated resource descriptions, and the various resource
management components introduce specific <emphasis>'ATTRIBUTE</emphasis>',<emphasis>'VALUE</emphasis>'&gt;
pairings into this common structure. Each attribute in a resource
description serves as a parameter to control the behavior of one or more
components in the resource management system.</simpara>
<section id="gram5-rsl-syntax-overview">
<title>RSL Syntax Overview</title>
<simpara>The core syntax of the RSL syntax is the <emphasis role="strong">relation</emphasis>. Relations
associate an attribute name with a value, eg the relation
<literal>executable=a.out</literal> provides the name of an executable in a resource
request. There are two generative syntactic structures in the RSL that
are used to build more complicated resource descriptions out of the
basic relations: <emphasis role="strong">compound requests</emphasis> and <emphasis role="strong">value sequences</emphasis>. In
addition, the RSL syntax includes a facility to both introduce and
dereference string <emphasis role="strong">substitution variables</emphasis>.</simpara>
<simpara>The simplest form of compound request, utilized by all resource
management components, is the conjunct-request. The conjuct-request
expresses a conjunction of simple relations or compound requests (like a
boolean AND). The most common conjunct-request in Globus RSL strings is
the combination of multiple relations such as executable name, node
count, executable arguments, and output files for a basic GRAM job
request. Similarly, the core RSL syntax includes a disjunct-request form
to represent disjunctive relations (like a boolean OR). Currently,
however, no resource management component utilizes the disjunct-request
form.</simpara>
<simpara>The last form of compound request is the multi-request. The
multi-request expresses multiple parallel resources that make up a
resource description. The multi-request form differs from the
conjunction and disjunction in two ways: multi-requests introduce new
variable scope, meaning variables defined in one clause of a
multi-request are not visible to the other clauses, and multi-requests
introduce a non-reducible hierarchy to the resource description. Whereas
relations within a conjunct-request can be thought of as <emphasis role="strong">constraints</emphasis>
on the resource being described, the subclauses of a multi-request are
best thought of as individual resource descriptions that together
constitute an abstract resource collection; the same attributes may be
<emphasis role="strong">constrained</emphasis> in different ways in each subclause without causing a
logical contradiction. An example of a contradiction would be to
constrain the <literal>executable</literal> attribute to be two conflicting values
within a conjunction. Currently, however, no resource management
component utilizes the disjunct-request form.</simpara>
<simpara>The simplest form of value in the RSL syntax is the string literal. When
explicitly quoted, literals can contain any character, and many common
literals that don&#8217;t contain special characters can appear without
quotes. Values can also be variable references, in which case the
variable reference is in essence <emphasis role="strong">replaced</emphasis> with the string value
defined for that variable. RSL descriptions can also express
string-concatenation of values, especially useful to construct long
strings out of several variable references. String concatenation is
supported with both an explicit concatenation operator and implicit
concatenation for many idiomatic constructions involving variable
references and literals.</simpara>
<simpara>In addition to the simple value forms given above, the RSL syntax
includes the value sequence to express ordered sets of values. The value
sequence syntax is used primarily for defining variables and for
providing the argument list for a program.</simpara>
</section>
<section id="gram5-rsl-tokenization-overview">
<title>RSL Tokenization Overview</title>
<simpara>Each RSL string consists of a sequence of RSL tokens, whitespace, and
comments. The RSL tokens are either special syntax or regular unquoted
literals, where special syntax contains one or more of the following
listed special characters and unquoted literals are made of sequences of
characters excluding the special characters.</simpara>
<simpara>The complete set of special characters that cannot appear as part of an
unquoted literal is:</simpara>
<itemizedlist>
<listitem>
<simpara>
<literal>+</literal> (plus)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>&amp;</literal> (ampersand)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>|</literal> (pipe)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>(</literal>(left paren)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>)</literal> (right paren)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>=</literal> (equal)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>&lt;</literal> (left angle)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>&gt;</literal> (right angle)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>!</literal> (exclamation)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>"</literal> (double quote)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>'</literal> (apostrophe)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>^</literal> (carat)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>#</literal> (pound)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>$</literal> (dollar)
</simpara>
</listitem>
</itemizedlist>
<simpara>These characters can only be used for the special syntactic forms
described in the section and in the section or as within quoted
literals.</simpara>
<simpara>Quoted literals are introduced with the <literal>"</literal> (double quote) or <literal>'</literal>
(single quote/apostrophe) and consist of all the characters up to (but
not including) the next solo double or single quote, respectively. To
escape a quote character within a quoted literal, the appearance of the
quote character twice in a row is converted to a single instance of the
character and the literal continues until the next solo quote character.
For any quoted literal, there is only one possible escape sequence, eg
within a literal delimited by the single quote character only the single
quote character uses the escape notation and the double quote character
can appear without escape.</simpara>
<simpara>Quoted literals can also be introduced with an alternate <emphasis role="strong">user
delimiter</emphasis> notation. User delimited literals are introduced with the
<literal>^</literal> (carat) character followed immediately by a user-provided
delimiter; the literal consists of all the characters after the user&#8217;s
delimiter up to (but not including) the next solo instance of the
delimiter. The delimiter itself may be escaped within the literal by
providing two instances in a row, just as the regular quote delimiters
are escaped in regular quoted literals.</simpara>
<simpara>RSL string comments use a notation similar to comments in the C
programming language. Comments are introduced by the prefix <literal>(*</literal>.
Comments continue to the first terminating suffix <literal>*)</literal> and cannot be
nested. Comments are stripped from the RSL string during processing and
are syntactically equivalent to whitespace.</simpara>
<example>
<title>Quoted Literal Examples</title>
<simpara>Assign the value <literal>Hello. Welcome to "The Grid"</literal> to the attribute
<literal>arguments</literal>, using double-quote as the delimiter and the escaping
sequence.</simpara>
<screen>arguments = "Hello. Welcome to ""The Grid"""</screen>
<simpara>Assign the value <literal>Hello. Welcome to "The Grid"</literal> to the attribute
<literal>arguments</literal> using the single-quote delimiter.</simpara>
<screen>arguments = 'Hello. Welcome to "The Grid'</screen>
<simpara>Assign the value <literal>Hello. Welcome to "The Grid"</literal> to the attribute
<literal>arguments</literal> using a user-defined quoting character <literal>!</literal>.</simpara>
<screen>arguments = ^!Hello. Welcome to "The Grid"!</screen>
</example>
</section>
<section id="gram5-rsl-substitution-semantics">
<title>RSL Substitution Semantics</title>
<simpara>RSL strings can introduce and reference string variables. String
substitution variables are defined in a special relation using the
<literal>rsl_substitution</literal> attribute, and the definitions affect variable
references made in the same conjunct-request (or disjunct-request), as
well as references made within any multi-request nested inside one of
the clauses of the conjunction (or disjunction). Each multi-request
introduces a new variable scope for each subrequest, and variable
definitions do not escape the closest enclosing scope.</simpara>
<simpara>Within any given scope, variable definitions are processed left-to-right
in the resource description. Outermost scopes are processed before inner
scopes, and the definitions in inner scopes augment the inherited
definitions with new and/or updated variable definitions.</simpara>
<simpara>Variable definitions and variable references are processed in a single
pass, with each definition updating the <emphasis role="strong">environment</emphasis> prior to
processing the next definition. The value provided in a variable
definition may include a reference to a previously-defined variable.
References to variables that are not yet provided with definitions in
the standard RSL variable processing order are replaced with an empty
literal string.</simpara>
</section>
<section id="gram5-rsl-attribute-summary">
<title>RSL Attribute Summary</title>
<simpara>The RSL syntax is extensible because it defines structure without too
many keywords. Each Globus resource management component introduces
additional attributes to the set recognized by RSL-aware components, so
it is difficult to provide a complete listing of attributes which might
appear in a resource description. Resource management components are
designed to utilize attributes they recognize and pass unrecongnized
relations through unchanged. This allows powerful compositions of
different resource management functions.</simpara>
<simpara>The following listing summarizes the attribute names utilized by
existing resource management components in the standard Globus release.
Please see the individual component documentation for discussion of the
attribute semantics.</simpara>
<section id="_rsl_5">
<title>RSL(5)</title>
<section id="_name_8">
<title>NAME</title>
<simpara>rsl - GRAM5 RSL Attributes</simpara>
</section>
<section id="_description">
<title>Description</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>arguments</literal></emphasis>
</term>
<listitem>
<simpara>
     The command line arguments for the executable. Use quotes, if a space is required in a single argument.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>count</literal></emphasis>
</term>
<listitem>
<simpara>
     The number of executions of the executable. [Default: <literal>1</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>directory</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies the path of the directory the jobmanager will use as the default directory for the requested job. [Default: <literal>$(HOME)</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>dry_run</literal></emphasis>
</term>
<listitem>
<simpara>
     If dryrun = yes then the jobmanager will not submit the job for execution and will return success. [Default: <literal>no</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>environment</literal></emphasis>
</term>
<listitem>
<simpara>
     The environment variables that will be defined for the executable in addition to default set that is given to the job by the jobmanager.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>executable</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the executable file to run on the remote machine. If the value is a GASS URL, the file is transferred to the remote gass cache before executing the job and removed after the job has terminated.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>expiration</literal></emphasis>
</term>
<listitem>
<simpara>
     Time (in seconds) after a a job fails to receive a two-phase commit end signal before it is cleaned up. [Default: <literal>14400</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_clean_up</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of files which will be removed after the job is completed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_in</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("remote URL" "local file") pairs which indicate files to be staged to the nodes which will run the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_in_shared</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("remote URL" "local file") pairs which indicate files to be staged into the cache. A symlink from the cache to the "local file" path will be made.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>file_stage_out</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of ("local file" "remote URL") pairs which indicate files to be staged from the job to a GASS-compatible file server.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gass_cache</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies location to override the GASS cache location.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gram_my_job</literal></emphasis>
</term>
<listitem>
<simpara>
     Obsolete and ignored. [Default: <literal>collective</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>host_count</literal></emphasis>
</term>
<listitem>
<simpara>
     Only applies to clusters of SMP computers, such as newer IBM SP systems. Defines the number of nodes ("pizza boxes") to distribute the "count" processes across.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>job_type</literal></emphasis>
</term>
<listitem>
<simpara>
     This specifies how the jobmanager should start the job. Possible values are single (even if the count &gt; 1, only start 1 process or thread), multiple (start count processes or threads), mpi (use the appropriate method (e.g. mpirun) to start a program compiled with a vendor-provided MPI library. Program is started with count nodes), and condor (starts condor jobs in the "condor" universe.) [Default: <literal>multiple</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>library_path</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of paths to be appended to the system-specific library path environment variables. [Default: <literal>$(GLOBUS_LOCATION)/lib</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>loglevel</literal></emphasis>
</term>
<listitem>
<simpara>
     Override the default log level for this job. The value of this attribute consists of a combination of the strings FATAL, ERROR, WARN, INFO, DEBUG, TRACE joined by the | character
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>logpattern</literal></emphasis>
</term>
<listitem>
<simpara>
     Override the default log path pattern for this job. The value of this attribute is a string (potentially containing RSL substitutions) that is evaluated to the path to write the log to. If the resulting string contains the string $(DATE) (or any other RSL substitution), it will be reevaluated at log time.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_cpu_time</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum cputime for a single execution of the executable. The units is in minutes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set cputime, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_memory</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum amount of memory for a single execution of the executable. The units is in Megabytes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set maxMemory, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_time</literal></emphasis>
</term>
<listitem>
<simpara>
     The maximum walltime or cputime for a single execution of the executable. Walltime or cputime is selected by the GRAM scheduler being interfaced. The units is in minutes. The value will go through an atoi() conversion in order to get an integer.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>max_wall_time</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the maximum walltime for a single execution of the executable. The units is in minutes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set walltime, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>min_memory</literal></emphasis>
</term>
<listitem>
<simpara>
     Explicitly set the minimum amount of memory for a single execution of the executable. The units is in Megabytes. The value will go through an atoi() conversion in order to get an integer. If the GRAM scheduler cannot set minMemory, then an error will be returned.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>project</literal></emphasis>
</term>
<listitem>
<simpara>
     Target the job to be allocated to a project account as defined by the scheduler at the defined (remote) resource.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>proxy_timeout</literal></emphasis>
</term>
<listitem>
<simpara>
     Obsolete and ignored. Now a job-manager-wide setting.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>queue</literal></emphasis>
</term>
<listitem>
<simpara>
     Target the job to a queue (class) name as defined by the scheduler at the defined (remote) resource.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>remote_io_url</literal></emphasis>
</term>
<listitem>
<simpara>
     Writes the given value (a URL base string) to a file, and adds the path to that file to the environment throught the GLOBUS_REMOTE_IO_URL environment variable. If this is specified as part of a job restart RSL, the job manager will update the file&#8217;s contents. This is intended for jobs that want to access files via GASS, but the URL of the GASS server has changed due to a GASS server restart.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>restart</literal></emphasis>
</term>
<listitem>
<simpara>
     Start a new job manager, but instead of submitting a new job, start managing an existing job. The job manager will search for the job state file created by the original job manager. If it finds the file and successfully reads it, it will become the new manager of the job, sending callbacks on status and streaming stdout/err if appropriate. It will fail if it detects that the old jobmanager is still alive (via a timestamp in the state file). If stdout or stderr was being streamed over the network, new stdout and stderr attributes can be specified in the restart RSL and the jobmanager will stream to the new locations (useful when output is going to a GASS server started by the client that&#8217;s listening on a dynamic port, and the client was restarted). The new job manager will return a new contact string that should be used to communicate with it. If a jobmanager is restarted multiple times, any of the previous contact strings can be given for the restart attribute.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>rsl_substitution</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies a list of values which can be substituted into other rsl attributes' values through the $(SUBSTITUTION) mechanism.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>save_state</literal></emphasis>
</term>
<listitem>
<simpara>
     Causes the jobmanager to save it&#8217;s job state information to a persistent file on disk. If the job manager exits or is suspended, the client can later start up a new job manager which can continue monitoring the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>savejobdescription</literal></emphasis>
</term>
<listitem>
<simpara>
     Save a copy of the job description to $HOME [Default: <literal>no</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>scratch_dir</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies the location to create a scratch subdirectory in. A SCRATCH_DIRECTORY RSL substitution will be filled with the name of the directory which is created.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stderr</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the remote file to store the standard error from the job. If the value is a GASS URL, the standard error from the job is transferred dynamically during the execution of the job. There are two accepted forms of this value. It can consist of a single destination: stderr = URL, or a sequence of destinations: stderr = (DESTINATION) (DESTINATION). In the latter case, the DESTINATION may itself be a URL or a sequence of an x-gass-cache URL followed by a cache tag. [Default: <literal>/dev/null</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stderr_position</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies where in the file remote standard error streaming should be restarted from. Must be 0.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdin</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the file to be used as standard input for the executable on the remote machine. If the value is a GASS URL, the file is transferred to the remote gass cache before executing the job and removed after the job has terminated. [Default: <literal>/dev/null</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdout</literal></emphasis>
</term>
<listitem>
<simpara>
     The name of the remote file to store the standard output from the job. If the value is a GASS URL, the standard output from the job is transferred dynamically during the execution of the job. There are two accepted forms of this value. It can consist of a single destination: stdout = URL, or a sequence of destinations: stdout = (DESTINATION) (DESTINATION). In the latter case, the DESTINATION may itself be a URL or a sequence of an x-gass-cache URL followed by a cache tag. [Default: <literal>/dev/null</literal>]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdout_position</literal></emphasis>
</term>
<listitem>
<simpara>
     Specifies where in the file remote output streaming should be restarted from. Must be 0.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>two_phase</literal></emphasis>
</term>
<listitem>
<simpara>
     Use a two-phase commit for job submission and completion. The job manager will respond to the initial job request with a WAITING_FOR_COMMIT error. It will then wait for a signal from the client before doing the actual job submission. The integer supplied is the number of seconds the job manager should wait before timing out. If the job manager times out before receiving the commit signal, or if a client issues a cancel signal, the job manager will clean up the job&#8217;s files and exit, sending a callback with the job status as GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED. After the job manager sends a DONE or FAILED callback, it will wait for a commit signal from the client. If it receives one, it cleans up and exits as usual. If it times out and save_state was enabled, it will leave all of the job&#8217;s files in place and exit (assuming the client is down and will attempt a job restart later). The timeoutvalue can be extended via a signal. When one of the following errors occurs, the job manager does not delete the job state file when it exits: GLOBUS_GRAM_PROTOCOL_ERROR_COMMIT_TIMED_OUT, GLOBUS_GRAM_PROTOCOL_ERROR_TTL_EXPIRED, GLOBUS_GRAM_PROTOCOL_ERROR_JM_STOPPED, GLOBUS_GRAM_PROTOCOL_ERROR_USER_PROXY_EXPIRED. In these cases, it can not be restarted, so the job manager will not wait for the commit signal after sending the FAILED callback
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>username</literal></emphasis>
</term>
<listitem>
<simpara>
     Verify that the job is running as this user.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
</section>
<section id="gram5-rsl-examples">
<title>Simple RSL Examples</title>
<simpara>The following are some simple example RSL strings to illustrate
idiomatic usage with existing tools and to make concrete some of the
more interesting cases of tokenization, concatenation, and variable
semantics. These are meant to illustrate the use of the RSL notation
without much regard for the specific details of a particular resource
management component.</simpara>
<simpara>Typical GRAM5 resource descriptions contain at least a few relations in
a conjunction:</simpara>
<example>
<title>GRAM5 Job Request Examples</title>
<simpara>This example shows a conjunct request containing values that are
unquoted literals and ordered sequences of a mix of quoted and unquoted
literals.</simpara>
<screen>(* this is a comment *)
&amp; (executable = a.out (* &lt;-- that is an unquoted literal *))
  (directory  = /home/nobody )
  (arguments  = arg1 "arg 2")
  (count = 1)</screen>
<simpara>This example demonstrates RSL substitutions, which can be used to make
sure a string is used consistently multiple times in a resource
description:</simpara>
<screen>&amp; (rsl_substitution  = (TOPDIR  "/home/nobody")
                       (DATADIR $(TOPDIR)"/data")
                       (EXECDIR $(TOPDIR)/bin) )
  (executable = $(EXECDIR)/a.out
        (* ^-- implicit concatenation *))
  (directory  = $(TOPDIR) )
  (arguments  = $(DATADIR)/file1
        (* ^-- implicit concatenation *)
                $(DATADIR) # /file2
        (* ^-- explicit concatenation *)
                '$(FOO)'            (* &lt;-- a quoted literal *))
  (environment = (DATADIR $(DATADIR)))
  (count = 1)</screen>
<simpara>Performing all variable substitution and removing comments yields an
equivalent RSL string:</simpara>
<screen>&amp; (rsl_substitution  = (TOPDIR "/home/nobody")
                       (DATADIR "/home/nobody/data")
                       (EXECDIR "/home/nobody/bin") )
  (executable = "/home/nobody/bin/a.out" )
  (directory  = "/home/nobody" )
  (arguments  = "/home/nobody/data/file1"
                "/home/nobody/data/file2"
                "$(FOO)" )
  (environment = (DATADIR "/home/nobody/data"))
  (count = 1)</screen>
<simpara>Note in the above variable-substitution example, the variable
substitution definitions are not automatically made a part of the job&#8217;s
environment. And explicit <literal>environment</literal> attribute must be used to add
environment variables for the job. Also note that the third value in the
arguments clause is not a variable reference but only quoted literal
that happens to contain one of the special characters.</simpara>
</example>
</section>
<section id="gram5-rsl-grammar-and-tokenization-rules">
<title>RSL grammar and tokenization rules</title>
<simpara>The following is a modified BNF grammar for the Resource Specification
Language. Lexical rules are provided for the implicit concatenation
sequences in the form of conventional regular expressions; for the
<emphasis role="strong">implicit-concat</emphasis> non-terminal rules, whitespace is not allowed
between juxtaposed non-terminals. Grammar comments are provided in
square brackets in a column to the right of the productions, eg
<literal>[comment]</literal> to help relate productions in the grammar to the
terminology used in the above discussion.</simpara>
<simpara>Regular expressions are provided for the terminal class
<literal>string-literal</literal> and for RSL comments. These regular expression make
use of a common inverted character-class notation, as popularized by the
various <emphasis role="strong"><literal>lex</literal></emphasis> tools. Comments are syntactically equivalent to
whitespace and can only appear where the comment prefix cannot be
mistaken for the trailing part of a multi-character unquoted literal.</simpara>
<table
frame="all"
rowsep="1" colsep="1"
>
<title>RSL Grammar</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Production </entry>
<entry align="left" valign="top"> Rule </entry>
<entry align="left" valign="top"> Annotations</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><emphasis>specification</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>relation</emphasis><?asciidoc-br?>
| <literal>'+'</literal> <emphasis>spec-list</emphasis><?asciidoc-br?>
| <literal>'&amp;'</literal> <emphasis>spec-list</emphasis><?asciidoc-br?>
| <literal>'|'</literal> <emphasis>spec-list</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>relation<?asciidoc-br?>
multi-request<?asciidoc-br?>
conjunct-request<?asciidoc-br?>
disjunct-request<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>spec-list</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'('</literal>  <emphasis>specification</emphasis> <literal>')'</literal> <emphasis>spec-list</emphasis><?asciidoc-br?>
| <literal>'('</literal> <emphasis>specification</emphasis> <literal>')'</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>relation</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'rsl_substitution'</literal> <literal>'='</literal>  <emphasis>binding-sequence</emphasis><?asciidoc-br?>
| <emphasis>attribute</emphasis> <emphasis>op</emphasis> <emphasis>value-sequence</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>Substitution variable definition<?asciidoc-br?>
Attribute binding relation<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>binding-sequence</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>binding</emphasis> <emphasis>binding-sequence</emphasis><?asciidoc-br?>
| <emphasis>binding</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>binding</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'('</literal>  <emphasis>string-literal</emphasis> <emphasis>simple-value</emphasis> <literal>')'</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Substitution variable definition<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>attribute</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>string-literal</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>attribute<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>op</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'='</literal> <?asciidoc-br?>
|<literal>'!='</literal> <?asciidoc-br?>
|<literal>'&gt;'</literal> <?asciidoc-br?>
|<literal>'&gt;='</literal> <?asciidoc-br?>
|<literal>'&lt;'</literal> <?asciidoc-br?>
|<literal>'&lt;='</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>value-sequence</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>value</emphasis> <emphasis>value-sequence</emphasis><?asciidoc-br?>
| <emphasis>value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'('</literal>  <emphasis>value-sequence</emphasis> <literal>')'</literal>  <literal>|</literal>  <emphasis>simple-value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>simple-value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>string-literal</emphasis><?asciidoc-br?>
| <emphasis>simple-value</emphasis> <literal>'#'</literal> <emphasis>simple-value</emphasis><?asciidoc-br?>
| <emphasis>implicit-concat</emphasis><?asciidoc-br?>
| <emphasis>variable-reference</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>String<?asciidoc-br?>
Concatenation<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>variable-reference</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'$('</literal>  <emphasis>string-literal</emphasis> <literal>')'</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Variable Reference<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>implicit-concat</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>(</literal>  <emphasis>unquoted-literal</emphasis> <literal>)? (</literal> <emphasis>implicit-concat-core</emphasis> <literal>)+</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Implicit concatenation<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>implicit-concat-core</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>variable-reference</emphasis><?asciidoc-br?>
| <literal>(</literal> <emphasis>variable-reference</emphasis> <literal>) (</literal> <emphasis>unquoted-literal</emphasis> <literal>)</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>string-literal</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>quoted-literal</emphasis><?asciidoc-br?>
| <emphasis>unquoted-literal</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>quoted-literal</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'''</literal> <literal>(([^'])</literal> <?asciidoc-br?>
|<literal>(''''))*</literal> <literal>'''</literal> <?asciidoc-br?>
| <literal>'"'</literal>  <literal>(([^"])</literal>  <literal>|</literal>  <literal>('""')*</literal>  <literal>'"'</literal> <?asciidoc-br?>
| <literal>'^' c(([^c]|(cc))* c</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Single-quote delimiter with
            escaping<?asciidoc-br?>
Double-quote delimiter with
            escaping<?asciidoc-br?>
User defined delimiter <?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>unquoted-literal</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>([^\t\v\n+&amp;|()=&lt;&gt;!"'^#$])+</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Non-special characters<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>comment</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>'(*'</literal> <literal>(([^*])|('*'[^)]))*</literal> <literal>'*)'</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Comment<?asciidoc-br?></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</chapter>
<chapter id="gram5-rvf">
<title>RSL Validation File Specification</title>
<simpara>This is a document to specify the file format and semantics of the RSL
validation files (<emphasis role="strong">RVF</emphasis>) used by GRAM5 to validate an Resource
Specification Language job description document in various contexts.
This validations ensures that the RSL attribute used in the document are
understood by GRAM5, fills in any default values for missing RSL
attributes, and also matches the type of the RSL value with that of the
attribute to ensure it is valid.</simpara>
<section id="gram5-rvf-syntax">
<title>RVF Syntax Overview</title>
<simpara>The core syntax of the RSL syntax is the <emphasis role="strong">attribute definition
record</emphasis>. Each RSL attribute definition record can define one or more
aspects of the attribute, and all but the <emphasis role="strong">Attribute</emphasis> aspect are
optional.</simpara>
<section id="gram5-rvf-definition">
<title>Attribute Definition Record Syntax</title>
<simpara>Syntactically, the attribute definition record consists of a series of
line-oriented attribute aspect definitions, with records separated by a
blank line. Additionally, comment strings may begin a line when the
first non-whitespace character in the line is <literal>#</literal>.</simpara>
<section id="_aspect_name">
<title>Aspect Name</title>
<simpara>The aspect name syntax is an aspect name token, which may be any
character other than the <literal>:</literal> character, then its value, which may be
either a <emphasis role="strong">Simple String</emphasis> or a <emphasis role="strong">Quoted String</emphasis>. When parsed, the
Aspect Name is transformed into a lowercase string.</simpara>
</section>
<section id="_simple_string">
<title>Simple String</title>
<simpara>The parser detects a Simple String by scanning the first non-whitespace
character after the <literal>:</literal> character and seeing it is not <literal>"</literal>. A Simple
String&#8217;s value is parsed from the first non-whitespace character until
the end of line character. Thus, in a record, the line</simpara>
<screen>Attribute: executable</screen>
<simpara>will parse the aspect name as <literal>Attribute</literal> and the simple string value
as <literal>executable</literal> without any leading whitespace. There is no way to
indicate an empty value with a simple string.</simpara>
</section>
<section id="_quoted_string">
<title>Quoted String</title>
<simpara>The parser detects a Quoted String by scanning the first non-whitespace
character after the <literal>:</literal> character and seeing it is <literal>"</literal>. A Quoted
String&#8217;s value is parsed from the <literal>"</literal> character to the next <literal>"</literal> not
preceded by the <literal>\</literal> character. Thus, a Quoted String may contain an
empty value, or span multiple lines.</simpara>
<simpara>Thus, the aspect definition</simpara>
<screen>Description: "The value of the \"Quoted String\"
    It may span multiple lines"</screen>
<simpara>will yield an aspect named <emphasis role="strong">Description</emphasis> with the value</simpara>
<screen>The value of the "Quoted String"
    It may span multiple lines</screen>
</section>
<section id="_record_delimiter">
<title>Record Delimiter</title>
<simpara>Records are separated by blank lines which are not parts of Quoted
String values. The rvf sequence</simpara>
<screen>Name: record-1
Aspect_1: with an aspect

Name: some other simple value
Aspect_1: with the same aspect</screen>
<simpara>will yield two records, each with two aspects: <literal>Name</literal> and
<literal>Aspect_1</literal>.</simpara>
</section>
</section>
<section id="_aspects_used_by_gram5">
<title>Aspects used by GRAM5</title>
<simpara>The GRAM5 RVF parser supports the following set of attributes in record
definitions.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">Attribute</emphasis>
</term>
<listitem>
<simpara>
     The only <emphasis role="strong">required</emphasis> aspect in a record, the <literal>Attribute</literal> aspect defines the name of the RSL attribute which the record refers to. The name is canonicalized to lowercase, with underscore characters removed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Description</emphasis>
</term>
<listitem>
<simpara>
     A description of the RSL attribute. This can be used to generate RSL documentation (see rsl.5), but is not otherwised used by GRAM5.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">RequiredWhen</emphasis>
</term>
<listitem>
<simpara>
     A list indicating when the attribute is <emphasis role="strong">required</emphasis> to be included in the RSL document. If it is not present, and the RVF does not include a default value for it, the RSL will be rejected. See <ulink url="#gram5-rvf-when">#gram5-rvf-when</ulink> for a list of valid values for this aspect.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">DefaultWhen</emphasis>
</term>
<listitem>
<simpara>
     A list indicating when the attribute&#8217;s default value will be provided when not in the RSL. The default value is defined by the <literal>Default</literal> aspect described below. See <ulink url="#gram5-rvf-when">#gram5-rvf-when</ulink> for a list of valid values for this aspect.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">ValidWhen</emphasis>
</term>
<listitem>
<simpara>
     A list indicating when the attribute is valid in an RSL document. If the RSL attribute is included in a document which is not being used for the purpose described by this aspect&#8217;s value, it will be rejected. See <ulink url="#gram5-rvf-when">#gram5-rvf-when</ulink> for a list of valid values for this aspect.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Default</emphasis>
</term>
<listitem>
<simpara>
     A default value for the RSL attribute if it&#8217;s used in a context which matches the <literal>DefaultWhen</literal> aspect for this attribute&#8217;s record. The value of this attribute must parsable into be a valid RSL <ulink url="../..gram5/pi/index.html#gram5-rsl.value-sequence">value-sequence</ulink>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Values</emphasis>
</term>
<listitem>
<simpara>
     An enumeration of values for the RSL attribute. The value must be simple single-word strings (such as <literal>yes no</literal>. RSL documents which include the attribute this record is for and do not match one of the single-word values will be rejected by the RSL validator.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Publish</emphasis>
</term>
<listitem>
<simpara>
     A flag, which if it equals <literal>true</literal>, will cause the RSL attribute to be included in the documentation produced by the <emphasis role="strong"><literal>create_rsl_documentation.pl</literal></emphasis> program. This is generally only useful for core RSL attributes included in GRAM5
</simpara>
</listitem>
</varlistentry>
</variablelist>
<section id="gram5-rvf-when">
<title>RVF When Values</title>
<simpara>Several RVF aspect values are defined to include a list of contexts when
the RVF record is valid, required, or should be assigned a default
value. The list of contexts may include any number of the following
strings, separated by whitespace:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GRAM_JOB_SUBMIT</emphasis>
</term>
<listitem>
<simpara>
     The aspect relates to initial job submission RSL documents.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GRAM_JOB_MANAGER_RESTART</emphasis>
</term>
<listitem>
<simpara>
     The aspect relates to GRAM5 restart RSL documents.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GRAM_JOB_MANAGER_STDIO_UPDATE</emphasis>
</term>
<listitem>
<simpara>
     The aspect relates to a STDIO_UPDATE signal.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For example, the following RVF record will be valid for all three
contexts, and will provide a default value <literal>/dev/null</literal> for the
<literal>GLOBUS_GRAM_JOB_SUBMIT</literal> context but not the other contexts:</simpara>
<screen>Attribute: stdout
Description: "The name of the remote file to store the standard output from
              the job. If the value is a GASS URL, the standard output from
              the job is transferred dynamically during the execution of the
              job. There are two accepted forms of this value. It can consist
              of a single destination: stdout = URL, or a sequence of
              destinations: stdout = (DESTINATION) (DESTINATION). In the latter
              case, the DESTINATION may itself be a URL or a sequence of an
              x-gass-cache URL followed by a cache tag."
Default: "/dev/null"
ValidWhen: GLOBUS_GRAM_JOB_SUBMIT GLOBUS_GRAM_JOB_MANAGER_RESTART GLOBUS_GRAM_JO
B_MANAGER_STDIO_UPDATE
DefaultWhen: GLOBUS_GRAM_JOB_SUBMIT</screen>
</section>
</section>
<section id="gram5-rvf-merging">
<title>RVF Merging</title>
<simpara>GRAM5 will look in multiple locations for RVF records, allowing for the
default core set of RSL attributes to be modified on a per-LRM case, as
well as on a site-specific basis. The RVF parser looks in the following
locations for RVF records in sequential order:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">/usr/share/globus/globus_gram_job_manager/globus-gram-job-manager.rvf</emphasis>
</term>
<listitem>
<simpara>
     Core RVF definitions which apply to all LRM implementations.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">/usr/share/globus/globus_gram_job_manager/<emphasis>$LRM</emphasis>.rvf</emphasis>
</term>
<listitem>
<simpara>
     RVF definitions which apply to a particular LRM implementation.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">/etc/globus/gram/job-manager.rvf</emphasis>
</term>
<listitem>
<simpara>
     Site-specific RVF definitions which apply to all LRM implementations.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">/etc/globus/gram/<emphasis>$LRM</emphasis>.rvf</emphasis>
</term>
<listitem>
<simpara>
     Site-specific RVF definitions which apply to a particular LRM.
All but the core RVF file are optional.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>When processing multiple RVF files, GRAM5 will perform a merge with
override of RVF aspects for each record based on the record&#8217;s
<literal>Attribute</literal> aspect. Thus, each subsequent record for a particular RSL
attribute will replace the value of those aspects which are included in
the new record, leaving aspects which are not mentioned in the new RVF
record unchanged. To remove an aspect defined in a previous RVF record,
include the aspect with an empty Quoted Value. LRM-specific and site RVF
files can also define records for new RSL attributes.</simpara>
<simpara>For example, if the core RVF records contain the following record:</simpara>
<screen>Attribute: directory
Description: "Specifies the path of the directory the jobmanager will use as
              the default directory for the requested job."
Default: $(HOME)
ValidWhen: GLOBUS_GRAM_JOB_SUBMIT
DefaultWhen: GLOBUS_GRAM_JOB_SUBMIT</screen>
<simpara>a site-specific RVF entry could replace the default value by including
an RVF record like this:</simpara>
<screen>Attribute: directory
Default: /scratch/ # $(LOGNAME)</screen>
<simpara>Similarly, a LRM which does not support memory-related resource limits
could add this record to an LRM-specific RVF file to disable those RSL
attributes for that LRM:</simpara>
<screen>Attribute: min_memory
ValidWhen: ""

Attribute: max_memory
ValidWhen: ""</screen>
</section>
<section id="_grammar_definition">
<title>Grammar Definition</title>
<table
frame="all"
rowsep="1" colsep="1"
>
<title>Grammar for RVF</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Production </entry>
<entry align="left" valign="top"> Rule </entry>
<entry align="left" valign="top"> Annotations</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><emphasis>records</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>record</emphasis> <emphasis>record_separator</emphasis> <emphasis>records</emphasis><?asciidoc-br?>
| <emphasis>record</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>record</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>aspect_list</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect_list</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>aspect</emphasis> <emphasis>aspect_list</emphasis> <emphasis>aspect</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>comment</emphasis> <literal>*</literal> <emphasis>aspect_name</emphasis> <emphasis>aspect_delimiter</emphasis> <emphasis>aspect_value</emphasis> <emphasis>aspect_separator</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect_name</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>whitespace</emphasis> <literal>*</literal>  <literal>("Attribute"</literal>  <literal>|</literal>  <literal>"Default"</literal>  <literal>|</literal>  <literal>"DefaultWhen"</literal>  <literal>|</literal>  <literal>"Description"</literal>  <literal>|</literal>  <literal>"Publish"</literal>  <literal>|</literal>  <literal>"RequiredWhen"</literal>  <literal>|</literal>  <literal>"ValidWhen")</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect_delimiter</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>":"</literal>  <emphasis>whitespace</emphasis> <literal>*</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>"""</literal>  <emphasis>quoted_value</emphasis> <literal>"""</literal><?asciidoc-br?>
| <emphasis>unquoted_value</emphasis> <emphasis>whitespace</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>quoted_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>when_value_list</emphasis><?asciidoc-br?>
| <emphasis>bool_value</emphasis><?asciidoc-br?>
| <emphasis>quoted_text</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>unquoted_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>when_value_list</emphasis><?asciidoc-br?>
| <emphasis>bool_value</emphasis> <emphasis>unquoted_text</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>when_value_list</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>when_value_list</emphasis> <emphasis>whitespace</emphasis> <emphasis>when_value</emphasis><?asciidoc-br?>
| <emphasis>when_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>when_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>"GLOBUS_GRAM_JOB_SUBMIT"</literal> <?asciidoc-br?>
|<literal>"GLOBUS_GRAM_JOB_MANAGER_RESTART"</literal> <?asciidoc-br?>
|<literal>"GLOBUS_GRAM_JOB_MANAGER_STDIO_UPDATE"</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>bool_value</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>"True"</literal> <?asciidoc-br?>
|<literal>"False"</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>quoted_text</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>(("\"/[^"])</literal> <?asciidoc-br?>
|<literal>([^\"])</literal> <?asciidoc-br?>
|<literal>(|"\""))*</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Quoted text consists of \ followed by a
                non-quote character, a non-backslash or non-quote character, or
                a backslash followed by a quote. In the final case, the
                backslash is discarded by the parser.<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>unquoted_text</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>[^</literal> <literal>\t\r\n]*</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Unquoted text value extends until the last
                non-whitespace character on the line<?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>comment</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>WHITESPACE*</literal> <literal>"#"</literal> <literal>[^\n]</literal>  <emphasis>newline</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>Comment strings begin with <?asciidoc-br?></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>whitespace</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>[</literal> <literal>\t\r]</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>record_separator</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>newline</emphasis> <literal>(</literal> <emphasis>comment</emphasis><?asciidoc-br?>
| <emphasis>newline</emphasis> <literal>)*</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>aspect_separator</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><emphasis>newline</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis>newline</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>"\n"</literal></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
</chapter>
<chapter id="gram5-cmd">
<title>GRAM5 Commands</title>
<section id="gram5-globus-fork-starter">
<title>GLOBUS-FORK-STARTER(8)</title>
<section id="_name_9">
<title>NAME</title>
<simpara>globus-fork-starter - Start and monitor a fork job</simpara>
</section>
<section id="_synopsis">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-fork-starter</literal></emphasis></simpara>
</section>
<section id="_description_2">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> program is executes jobs specified on
its standard input stream, recording the job state changes to a file
defined in the <literal>$GLOBUS_LOCATION/etc/globus-fork.conf</literal> configuration
file. It runs until its standard input stream is closed and all jobs it
is managing have terminated. The log generated by this program can be
used by the SEG to provide job state changes and exit codes to the GRAM
service. The  configuration file. It runs until its standard input
stream is closed and all jobs it is managing have terminated. The log
generated by this program can be used by the SEG to provide job state
changes and exit codes to the GRAM service. The
<emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> program is typically started by the fork
GRAM module.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> program expects its input to be a series
of task definitions, separated by the newline character, each
representing a separate job. Each task definition contains a number of
fields, separated by the colon character. The first field is always the
literal string <literal>100</literal> indicating the message format, the second field
is a unique job tag that will be distinguish the reply from this program
when multiple jobs are submitted. The rest of fields contain attribute
bindings. The supported attributes are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>directory</literal></emphasis>
</term>
<listitem>
<simpara>
     Working directory of the job
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>environment</literal></emphasis>
</term>
<listitem>
<simpara>
     Comma-separated list of strings defining environment variables. The form of these strings is <literal>var=value</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>count</literal></emphasis>
</term>
<listitem>
<simpara>
     Number of processes to start
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>executable</literal></emphasis>
</term>
<listitem>
<simpara>
     Full path to the executable to run
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>arguments</literal></emphasis>
</term>
<listitem>
<simpara>
     Comma-separated list of command-line arguments for the job
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdin</literal></emphasis>
</term>
<listitem>
<simpara>
     Full path to a file containing the input of the job
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stdout</literal></emphasis>
</term>
<listitem>
<simpara>
     Full path to a file to write the output of the job to
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>stderr</literal></emphasis>
</term>
<listitem>
<simpara>
     Full path to a file to write the error stream of the job
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Within each field, the following characters may be escaped by preceding
them with the backslash character:</simpara>
<itemizedlist>
<listitem>
<simpara>
backslash (\)
</simpara>
</listitem>
<listitem>
<simpara>
semicolor (;)
</simpara>
</listitem>
<listitem>
<simpara>
comma (,)
</simpara>
</listitem>
<listitem>
<simpara>
equal (=)
</simpara>
</listitem>
</itemizedlist>
<simpara>Additionally, newline can be represented within a field by using the
escape sequence \n.</simpara>
<simpara>For each job the <emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> processes, it replies by
writing a single line to standard output. The replies again consist of a
number of fields separated by the semicolon character.</simpara>
<simpara>For a successful job start, the first field of the reply is the literal
<literal>101</literal>, the second field is the tag from the input, and the third field
is a comma-separated list of SEG job identifiers which consist the
concatenation of a UUID and a process id. The
<emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> program will write state changes to the SEG
log using these job identifiers.</simpara>
<simpara>For a failure, the first field of the reply is the literal <literal>102</literal>, the
second field is the tag from the input, the third field is the integer
representation of a GRAM erorr code, and the fourth field is an string
explaining the error.</simpara>
</section>
<section id="_environment">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-fork-starter</literal></emphasis></simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_LOCATION</emphasis>
</term>
<listitem>
<simpara>
     Path to Globus Toolkit installation. This is used to locate the <literal>globus-fork.conf</literal> configuration file. configuration file.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_files">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/etc/globus-fork.conf</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to fork SEG configuration file.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="globus-gatekeeper-admin">
<title>GLOBUS-GATEKEEPER-ADMIN(8)</title>
<section id="_name_10">
<title>NAME</title>
<simpara>globus-gatekeeper-admin - Manage globus-gatekeeper services</simpara>
</section>
<section id="_synopsis_2">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> [<literal>-h</literal> ]</simpara>
</section>
<section id="_description_3">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> program manages service entries
which are used by the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> to execute services.
Service entries are located in the <literal>/etc/grid-services</literal> directory. The
directory. The <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> can list, enable, or
disable specific services, or set a service as the default. The <emphasis>-h</emphasis>
command-line option shows a brief usage message.</simpara>
<section id="_listing_services">
<title>Listing services</title>
<simpara>The <emphasis>-l</emphasis> command-line option to <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> will
cause it to list all of the services which are available to be run by
the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>. In the output, the service name will be
followed by its status in brackets. Possible status strings are
<literal>ENABLED</literal>, <literal>DISABLED</literal>, and <literal>ALIAS to </literal>, where <emphasis>NAME</emphasis> is another
service name.</simpara>
<simpara>If the <emphasis>-n ' is used, then only information about the service named
'NAME</emphasis> is printed.</simpara>
</section>
<section id="_enabling_services">
<title>Enabling services</title>
<simpara>The '-e ' command-line option to <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> will
cause it to enable a service so that it may be run by the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>.</simpara>
<simpara>If the <emphasis>-n ' option is used as well, then the service will be enabled
with the alias 'NAME</emphasis>.</simpara>
</section>
<section id="_enabling_a_default_service">
<title>Enabling a default service</title>
<simpara>The <emphasis>-E</emphasis> command-line option to <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> will
cause it to enable a service alias with the name <literal>jobmanager</literal>. The
<emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> program will choose the first service it
finds as the default. To enable a particular service as the default, use
the <emphasis>-e</emphasis> parameter described above with the <emphasis>-n</emphasis> parameter.</simpara>
</section>
<section id="_disabling_services">
<title>Disabling services</title>
<simpara>The '-d ' command-line option to <emphasis role="strong"><literal>globus-gatekeeper-admin</literal></emphasis> will
cause it to disable a service so that it may not be run by the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>. All aliases to a disabled service are also
disabled.</simpara>
</section>
</section>
<section id="_files_2">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/grid-services</literal>  </emphasis>
</term>
<listitem>
<simpara>
     Default location of enabled gatekeeper service descriptions.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-globus-gatekeeper">
<title>GLOBUS-GATEKEEPER(8)</title>
<section id="_name_11">
<title>NAME</title>
<simpara>globus-gatekeeper - Authorize and execute a grid service on behalf of a user</simpara>
</section>
<section id="_synopsis_3">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> [<literal>-help</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-conf</literal> <emphasis>PARAMETER_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-test</literal> ] <literal>-d</literal>  | <literal>-debug</literal>  <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-inetd</literal>  | <literal>-f</literal>  <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-p</literal> <emphasis>PORT</emphasis> | <literal>-port</literal> <emphasis>PORT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-home</literal> <emphasis>PATH</emphasis>] <literal>-l</literal> <emphasis>LOGFILE</emphasis> | <literal>-logfile</literal> <emphasis>LOGFILE</emphasis> [<literal>-lf</literal> <emphasis>LOG_FACILITY</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-acctfile</literal> <emphasis>ACCTFILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-e</literal> <emphasis>LIBEXECDIR</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-launch_method</literal> <literal>fork_and_exit</literal>  | <literal>fork_and_wait</literal>  | <literal>dont_fork</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-grid_services</literal> <emphasis>SERVICEDIR</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-globusid</literal> <emphasis>GLOBUSID</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-gridmap</literal> <emphasis>GRIDMAP</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x509_cert_dir</literal> <emphasis>TRUSTED_CERT_DIR</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x509_cert_file</literal> <emphasis>TRUSTED_CERT_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x509_user_cert</literal> <emphasis>CERT_PATH</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x509_user_key</literal> <emphasis>KEY_PATH</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x509_user_proxy</literal> <emphasis>PROXY_PATH</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-k</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-globuskmap</literal> <emphasis>KMAP</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-pidfile</literal> <emphasis>PIDFILE</emphasis>]</simpara>
</section>
<section id="_description_4">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program is a meta-server similar to
<emphasis role="strong"><literal>inetd</literal></emphasis> or <emphasis role="strong"><literal>xinetd</literal></emphasis> that starts other services after
authenticating a TCP connection using GSSAPI and mapping the client&#8217;s
credential to a local account.</simpara>
<simpara>The most common use for the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program is to
start instances of the <literal>globus-job-manager(8)</literal> service. A single
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> deployment can handle multiple different
service configurations by having entries in the <literal>/etc/grid-services</literal>
directory.  directory.</simpara>
<simpara>Typically, users interact with the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program via
client applications such as <literal>globusrun(1)</literal>, <emphasis role="strong"><literal>globus-job-submit</literal></emphasis>,
or tools such as CoG jglobus or Condor-G.</simpara>
<simpara>The full set of command-line options to <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>
consists of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-conf <emphasis>PARAMETER_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Load configuration parameters from <emphasis>PARAMETER_FILE</emphasis>. The parameters in that file are treated as additional command-line options.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-test</emphasis>
</term>
<listitem>
<simpara>
     Parse the configuration file and print out the POSIX user id of the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> process, service home directory, service execution directory, and X.509 subject name and then exits.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d, -debug</emphasis>
</term>
<listitem>
<simpara>
     Run the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> process in the foreground.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-inetd</emphasis>
</term>
<listitem>
<simpara>
     Flag to indicate that the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> process was started via <emphasis role="strong"><literal>inetd</literal></emphasis> or a similar super-server. If this flag is set and the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> was not started via inetd, a warning will be printed in the gatekeeper log.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-f</emphasis>
</term>
<listitem>
<simpara>
     Flag to indicate that the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> process should run in the foreground. This flag has no effect when the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> is started via inetd.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PORT</emphasis>, -port <emphasis>PORT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Listen for connections on the TCP/IP port <emphasis>PORT</emphasis>. This option has no effect if the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> is started via inetd or a similar service. If not specified and the gatekeeper is running as root, the default of <literal>2119</literal> is used. Otherwise, the gatekeeper defaults to an ephemeral port.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-home <emphasis>PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Sets the gatekeeper deployment directory to <emphasis>PATH</emphasis>. This is used to interpret relative paths for accounting files, libexecdir, certificate paths, and also to set the <literal>GLOBUS_LOCATION</literal> environment variable in the service environment. If not specified, the gatekeeper looks for service executables in <literal>/usr/sbin</literal>, configuration in , configuration in <literal>/etc</literal>, and writes logs and accounting files to , and writes logs and accounting files to <literal>/var/log</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l <emphasis>LOGFILE</emphasis>, -logfile <emphasis>LOGFILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write log entries to <emphasis>LOGFILE</emphasis>. If <emphasis>LOGFILE</emphasis> is equal to <literal>logoff</literal> or <literal>LOGOFF</literal>, then logging will be disabled, both to file and to syslog.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-lf <emphasis>LOG_FACILITY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Open syslog using the <emphasis>LOG_FACILITY</emphasis>. If not specified, <literal>LOG_DAEMON</literal> will be used as the default when using syslog.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-acctfile <emphasis>ACCTFILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Set the path to write accounting records to <emphasis>ACCTFILE</emphasis>. If not set, records will be written to the log file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-e <emphasis>LIBEXECDIR</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Look for service executables in <emphasis>LIBEXECDIR</emphasis>. If not specified, the <literal>sbin</literal> subdirectory of the parameter to  subdirectory of the parameter to <emphasis>-home</emphasis> is used, or <literal>/usr/sbin</literal> if that is not set. if that is not set.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-launch_method <literal>fork_and_exit</literal>|<literal>fork_and_wait</literal>|<literal>dont_fork</literal></emphasis>
</term>
<listitem>
<simpara>
     Determine how to launch services. The method may be either <literal>fork_and_exit</literal> (the service runs completely independently of the gatekeeper, which exits after creating the new service process), <literal>fork_and_wait</literal> (the service is run in a separate process from the gatekeeper but the gatekeeper does not exit until the service terminates), or <literal>dont_fork</literal>, where the gatekeeper process becomes the service process via the <emphasis role="strong"><literal>exec()</literal></emphasis> system call.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-grid_services <emphasis>SERVICEDIR</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Look for service descriptions in <emphasis>SERVICEDIR</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globusid <emphasis>GLOBUSID</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Sets the <literal>GLOBUSID</literal> environment variable to <emphasis>GLOBUSID</emphasis>. This variable is used to construct the gatekeeper contact string if it can not be parsed from the service credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-gridmap <emphasis>GRIDMAP</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file at <emphasis>GRIDMAP</emphasis> to map GSSAPI names to POSIX user names.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x509_cert_dir <emphasis>TRUSTED_CERT_DIR</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the directory <emphasis>TRUSTED_CERT_DIR</emphasis> to locate trusted CA X.509 certificates. The gatekeeper sets the environment variable <literal>X509_CERT_DIR</literal> to this value.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x509_user_cert <emphasis>CERT_PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read the service X.509 certificate from <emphasis>CERT_PATH</emphasis>. The gatekeeper sets the <literal>X509_USER_CERT</literal> environment variable to this value.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x509_user_key <emphasis>KEY_PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read the private key for the service from <emphasis>KEY_PATH</emphasis>. The gatekeeper sets the <literal>X509_USER_KEY</literal> environment variable to this value.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x509_user_proxy <emphasis>PROXY_PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read the X.509 proxy certificate from <emphasis>PROXY_PATH</emphasis>. The gatekeeper sets the <literal>X509_USER_PROXY</literal> environment variable to this value.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-k</emphasis>
</term>
<listitem>
<simpara>
     Use the <emphasis role="strong"><literal>globus-k5</literal></emphasis> command to acquire Kerberos 5 credentials before starting the service.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globuskmap <emphasis>KMAP</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use <emphasis>KMAP</emphasis> as the path to the Grid credential to kerberos initialization mapping file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-pidfile <emphasis>PIDFILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write the process id of the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> to the file named by <emphasis>PIDFILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_2">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">X509_CERT_DIR</emphasis>
</term>
<listitem>
<simpara>
     Directory containing X.509 trust anchors and signing policy files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">X509_USER_PROXY</emphasis>
</term>
<listitem>
<simpara>
     Path to file containing an X.509 proxy.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">X509_USER_CERT</emphasis>
</term>
<listitem>
<simpara>
     Path to file containing an X.509 user certificate.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">X509_USER_KEY</emphasis>
</term>
<listitem>
<simpara>
     Path to file containing an X.509 user key.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_LOCATION</emphasis>
</term>
<listitem>
<simpara>
     Default path to gatekeeper service files.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_files_3">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/grid-services/SERVICENAME</literal></emphasis>
</term>
<listitem>
<simpara>
     Service configuration for <emphasis>SERVICENAME</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/grid-security/grid-mapfile</literal></emphasis>
</term>
<listitem>
<simpara>
     Default file mapping Grid identities to POSIX identities.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/globuskmap</literal></emphasis>
</term>
<listitem>
<simpara>
     Default file mapping Grid identities to Kerberos 5 principals.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/globus-nologin</literal></emphasis>
</term>
<listitem>
<simpara>
     File to disable the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>/var/log/globus-gatekeeper.log</literal></emphasis>
</term>
<listitem>
<simpara>
     Default gatekeeper log.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also">
<title>See also</title>
<simpara><literal>globus-k5(8)</literal>, <literal>globusrun(1)</literal>, <literal>globus-job-manager(8)</literal></simpara>
</section>
</section>
<section id="_globus_gram_audit_8">
<title>GLOBUS-GRAM-AUDIT(8)</title>
<section id="_name_12">
<title>NAME</title>
<simpara>globus-gram-audit - Load GRAM4 and GRAM5 audit records into a database</simpara>
</section>
<section id="_synopsis_4">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-gram-audit</literal></emphasis> [<literal>--conf</literal> <emphasis>CONFIG_FILE</emphasis>] [<literal>--create</literal> ] | [<literal>--update=</literal> <emphasis>OLD-VERSION</emphasis>] [<literal>--check</literal> ] [<literal>--delete</literal> ] [<literal>--audit-directory</literal> <emphasis>AUDITDIR</emphasis>] [<literal>--quiet</literal> ]</simpara>
</section>
<section id="_description_5">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-gram-audit</literal></emphasis> program loads audit records to an
SQL-based database. It reads
<literal>$GLOBUS_LOCATION/etc/globus-job-manager.conf</literal> by default to determine
the audit directory and then uploads all files in that directory that
contain valid audit records to the database configured by the  by
default to determine the audit directory and then uploads all files in
that directory that contain valid audit records to the database
configured by the <emphasis role="strong"><literal>globus_gram_job_manager_auditing_setup_scripts</literal></emphasis>
package. If the upload completes successfully, the audit files will be
removed.</simpara>
<simpara>The full set of command-line options to <emphasis role="strong"><literal>globus-gram-audit</literal></emphasis>
consist of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">--conf <emphasis>CONFIG_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use <emphasis>CONFIG_FILE</emphasis> instead of the default from the configuration file for audit database configuration.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--check</emphasis>
</term>
<listitem>
<simpara>
     Check whether the insertion of a record was successful by querying the database after inserting the records. This is used in tests.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--delete</emphasis>
</term>
<listitem>
<simpara>
     Delete audit records from the database right after inserting them. This is used in tests to avoid filling the databse with test records.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--audit-directory <emphasis>DIR</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Look for audit records in <emphasis>DIR</emphasis>, instead of looking in the directory specified in the job manager configuration. This is used in tests to control which records are loaded to the database and then deleted.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--query <emphasis>SQL</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Perform the given SQL query on the audit database. This uses the database information from the configuration file to determine how to contact the database.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--quiet</emphasis>
</term>
<listitem>
<simpara>
     Reduce the amount of output for common operations.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_files_4">
<title>FILES</title>
<simpara>The <emphasis role="strong"><literal>globus-gram-audit</literal></emphasis> uses the following files (paths relative
to <literal>$GLOBUS_LOCATION</literal>).</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>etc/globus-gram-job-manager.conf</literal></emphasis>
</term>
<listitem>
<simpara>
     GRAM5 job manager configuration. It includes the default path to the audit directory
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>etc/globus-gram-audit.conf</literal></emphasis>
</term>
<listitem>
<simpara>
     Audit configuration. It includes the information needed to contact the audit database.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-cancel">
<title>GLOBUS-JOB-CANCEL(1)</title>
<section id="_name_13">
<title>NAME</title>
<simpara>globus-job-cancel - Cancel a GRAM batch job</simpara>
</section>
<section id="_synopsis_5">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> <literal>-f</literal>  | <literal>-force</literal>  <literal>-q</literal>  | <literal>-quiet</literal>  <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_6">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program cancels the job named by <emphasis>JOBID</emphasis>.
Any cached files associated with the job will remain until
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis> is executed for the job.</simpara>
<simpara>By default, <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> prompts the user prior to
canceling the job. This behavior can be overridden by specifying the
<emphasis>-f</emphasis> or <emphasis>-force</emphasis> command-line options.</simpara>
</section>
<section id="_options">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-force, -f</emphasis>
</term>
<listitem>
<simpara>
     Do not prompt to confirm job cancel and clean-up.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-quiet, -q</emphasis>
</term>
<listitem>
<simpara>
     Do not print diagnostics for succesful cancel. Implies <emphasis>-f</emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_3">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-cancel</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-clean">
<title>GLOBUS-JOB-CLEAN(1)</title>
<section id="_name_14">
<title>NAME</title>
<simpara>globus-job-clean - Cancel and clean up a GRAM batch job</simpara>
</section>
<section id="_synopsis_6">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-clean</literal></emphasis> <literal>-r</literal> <emphasis>RESOURCE</emphasis> | <literal>-resource</literal> <emphasis>RESOURCE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-f</literal>  | <literal>-force</literal>  <literal>-q</literal>  | <literal>-quiet</literal>  <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_7">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program cancels the job named by <emphasis>JOBID</emphasis> if
it is still running, and then removes any cached files on the GRAM
service node related to that job. In order to do the file clean up, it
submits a job which removes the cache files. By default this cleanup job
is submitted to the default GRAM resource running on the same host as
the job. This behavior can be controlled by specifying a resource
manager contact string as the parameter to the <emphasis>-r</emphasis> or <emphasis>-resource</emphasis>
option.</simpara>
<simpara>By default, <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> prompts the user prior to canceling
the job. This behavior can be overridden by specifying the <emphasis>-f</emphasis> or
<emphasis>-force</emphasis> command-line options.</simpara>
</section>
<section id="_options_2">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-clean</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-resource <emphasis>RESOURCE</emphasis>, -r <emphasis>RESOURCE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the clean-up job to the resource named by <emphasis>RESOURCE</emphasis> instead of the default GRAM service on the same host as the job contact.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-force, -f</emphasis>
</term>
<listitem>
<simpara>
     Do not prompt to confirm job cancel and clean-up.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-quiet, -q</emphasis>
</term>
<listitem>
<simpara>
     Do not print diagnostics for succesful clean-up. Implies <emphasis>-f</emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_4">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-get-output">
<title>GLOBUS-JOB-GET-OUTPUT(1)</title>
<section id="_name_15">
<title>NAME</title>
<simpara>globus-job-get-output - Retrieve the output and error streams from a GRAM job</simpara>
</section>
<section id="_synopsis_7">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> <literal>-r</literal> <emphasis>RESOURCE</emphasis> | <literal>-resource</literal> <emphasis>RESOURCE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-out</literal>  | <literal>-err</literal>  <literal>-t</literal> <emphasis>LINES</emphasis> | <literal>-tail</literal> <emphasis>LINES</emphasis> <literal>-follow</literal> <emphasis>LINES</emphasis> | <literal>-f</literal> <emphasis>LINES</emphasis> <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_8">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program retrieves the output and error
streams of the job named by <emphasis>JOBID</emphasis>. By default,
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> will retrieve all output and error data
from the job and display them to its own output and error streams. Other
behavior can be controlled by using command-line options. The data
retrieval is implemented by submitting another job which simply displays
the contents of the first job&#8217;s output and error streams. By default
this retrieval job is submitted to the default GRAM resource running on
the same host as the job. This behavior can be controlled by specifying
a particular resource manager contact string as the <emphasis>RESOURCE</emphasis> parameter
to the <emphasis>-r</emphasis> or <emphasis>-resource</emphasis> option.</simpara>
</section>
<section id="_options_3">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-get-output</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-resource <emphasis>RESOURCE</emphasis>, -r <emphasis>RESOURCE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the retrieval job to the resource named by <emphasis>RESOURCE</emphasis> instead of the default GRAM service on the same host as the job contact.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-out</emphasis>
</term>
<listitem>
<simpara>
     Retrieve only the standard output stream of the job. The default is to retrieve both standard output and standard error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-err</emphasis>
</term>
<listitem>
<simpara>
     Retrieve only the standard error stream of the job. The default is to retrieve both standard output and standard error.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-tail <emphasis>LINES</emphasis>, -t <emphasis>LINES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Print only the last <emphasis>LINES</emphasis> count lines of output from the data streams being retrieved. By default, the entire output and error file data is retrieved. This option can not be used along with the <emphasis>-f</emphasis> or <emphasis>-follow</emphasis> options.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-follow <emphasis>LINES</emphasis>, -f <emphasis>LINES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Print the last <emphasis>LINES</emphasis> count lines of output from the data streams being retrieved and then wait until canceled, printing any subsequent job output that occurs. By default, the entire output and error file data is retrieved. This option can not be used along with the <emphasis>-t</emphasis> or <emphasis>-tail</emphasis> options.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_5">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-job-manager">
<title>GLOBUS-JOB-MANAGER(8)</title>
<section id="_name_16">
<title>NAME</title>
<simpara>globus-job-manager - Execute and monitor jobs</simpara>
</section>
<section id="_synopsis_8">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-manager</literal></emphasis> <literal>-type</literal> <emphasis>LRM</emphasis> [<literal>-conf</literal> <emphasis>CONFIG_PATH</emphasis>] [<literal>-help</literal> ] [<literal>-globus-host-manufacturer</literal> <emphasis>MANUFACTURER</emphasis>] [<literal>-globus-host-cputype</literal> <emphasis>CPUTYPE</emphasis>] [<literal>-globus-host-osname</literal> <emphasis>OSNAME</emphasis>] [<literal>-globus-host-osversion</literal> <emphasis>OSVERSION</emphasis>] [<literal>-globus-gatekeeper-host</literal> <emphasis>HOST</emphasis>] [<literal>-globus-gatekeeper-port</literal> <emphasis>PORT</emphasis>] [<literal>-globus-gatekeeper-subject</literal> <emphasis>SUBJECT</emphasis>] [<literal>-home</literal> <emphasis>GLOBUS_LOCATION</emphasis>] [<literal>-target-globus-location</literal> <emphasis>TARGET_GLOBUS_LOCATION</emphasis>] [<literal>-condor-arch</literal> <emphasis>ARCH</emphasis>] [<literal>-condor-os</literal> <emphasis>OS</emphasis>] [<literal>-history</literal> <emphasis>HISTORY_DIRECTORY</emphasis>] [<literal>-scratch-dir-base</literal> <emphasis>SCRATCH_DIRECTORY</emphasis>] [<literal>-enable-syslog</literal> ] [<literal>-stdio-log</literal> <emphasis>LOG_DIRECTORY</emphasis>] [<literal>-log-pattern</literal> <emphasis>PATTERN</emphasis>] [<literal>-log-levels</literal> <emphasis>LEVELS</emphasis>] [<literal>-state-file-dir</literal> <emphasis>STATE_DIRECTORY</emphasis>] [<literal>-globus-tcp-port-range</literal> <emphasis>PORT_RANGE</emphasis>] [<literal>-globus-tcp-source-range</literal> <emphasis>SOURCE_RANGE</emphasis>] [<literal>-x509-cert-dir</literal> <emphasis>TRUSTED_CERTIFICATE_DIRECTORY</emphasis>] [<literal>-cache-location</literal> <emphasis>GASS_CACHE_DIRECTORY</emphasis>] [<literal>-k</literal> ] [<literal>-extra-envvars</literal> <emphasis>VAR=VAL,&#8230;</emphasis>] [<literal>-seg-module</literal> <emphasis>SEG_MODULE</emphasis>] [<literal>-audit-directory</literal> <emphasis>AUDIT_DIRECTORY</emphasis>] [<literal>-globus-toolkit-version</literal> <emphasis>TOOLKIT_VERSION</emphasis>] [<literal>-disable-streaming</literal> ] [<literal>-disable-usagestats</literal> ] [<literal>-usagestats-targets</literal> <emphasis>TARGET</emphasis>] [<literal>-service-tag</literal> <emphasis>SERVICE_TAG</emphasis>]</simpara>
</section>
<section id="_description_9">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program is a servivce which starts and
controls GRAM jobs which are executed by a local resource management
system, such as LSF or Condor. The <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program is
typically started by the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program and not
directly by a user. It runs until all jobs it is managing have
terminated or its delegated credentials have expired.</simpara>
<simpara>Typically, users interact with the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program
via client applications such as <emphasis role="strong"><literal>globusrun</literal></emphasis>,
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, or tools such as CoG jglobus or Condor-G.</simpara>
<simpara>The full set of command-line options to <emphasis role="strong"><literal>globus-job-manager</literal></emphasis>
consists of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-type <emphasis>LRM</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Execute jobs using the local resource manager named <emphasis>LRM</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-conf <emphasis>CONFIG_PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read additional command-line arguments from the file <emphasis>CONFIG_PATH</emphasis>. If present, this must be the first command-line argument to the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara><emphasis role="strong">-globus-host-manufacturer
                <emphasis>MANUFACTURER</emphasis></emphasis>::
     Indicate the manufacturer of the system which the jobs will execute on. This parameter sets the value of the <literal>$(GLOBUS_HOST_MANUFACTURER)</literal> RSL substitution to <emphasis>MANUFACTURER</emphasis></simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-globus-host-cputype <emphasis>CPUTYPE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the CPU type of the system which the jobs will execute on. This parameter sets the value of the <literal>$(GLOBUS_HOST_CPUTYPE)</literal> RSL substitution to <emphasis>CPUTYPE</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-host-osname <emphasis>OSNAME</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the operating system type of the system which the jobs will execute on. This parameter sets the value of the <literal>$(GLOBUS_HOST_OSNAME)</literal> RSL substitution to <emphasis>OSNAME</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-host-osversion <emphasis>OSVERSION</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the operating system version of the system which the jobs will execute on. This parameter sets the value of the <literal>$(GLOBUS_HOST_OSVERSION)</literal> RSL substitution to <emphasis>OSVERSION</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-gatekeeper-host <emphasis>HOST</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the host name of the machine which the job was submitted to. This parameter sets the value of the <literal>$(GLOBUS_GATEKEEPER_HOST)</literal> RSL substitution to <emphasis>HOST</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-gatekeeper-port <emphasis>PORT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the TCP port number of gatekeeper to which jobs are submitted to. This parameter sets the value of the <literal>$(GLOBUS_GATEKEEPER_PORT)</literal> RSL substitution to <emphasis>PORT</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-gatekeeper-subject <emphasis>SUBJECT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the X.509 identity of the gatekeeper to which jobs are submitted to. This parameter sets the value of the <literal>$(GLOBUS_GATEKEEPER_SUBJECT)</literal> RSL substitution to <emphasis>SUBJECT</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-home <emphasis>GLOBUS_LOCATION</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the path where the Globus Toolkit(r) is installed on the service node. This is used by the job manager to locate its support and configuration files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-target-globus-location <emphasis>TARGET_GLOBUS_LOCATION</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Indicate the path where the Globus Toolkit(r) is installed on the execution host. If this is omitted, the value specified as a parameter to <emphasis>-home</emphasis> is used. This parameter sets the value of the <literal>$(GLOBUS_LOCATION)</literal> RSL substitution to <emphasis>TARGET_GLOBUS_LOCATION</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-history <emphasis>HISTORY_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write job history files to <emphasis>HISTORY_DIRECTORY</emphasis>. These files are described in the FILES section below.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-scratch-dir-base <emphasis>SCRATCH_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to use <emphasis>SCRATCH_DIRECTORY</emphasis> as the default scratch directory root if a relative path is specified in the job RSL&#8217;s <literal>scratch_dir</literal> attribute.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-enable-syslog</emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write log messages via syslog. Logging is further controlled by the argument to the <emphasis>-log-levels</emphasis> parameter described below.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-log-pattern <emphasis>PATTERN</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write log messages to files named by the string <emphasis>PATTERN</emphasis>. The <emphasis>PATTERN</emphasis> string may contain job-independent RSL substitutions such as <literal>$(HOME)</literal>, <literal>$(LOGNAME)</literal>, etc, as well as the special RSL substition <literal>$(DATE)</literal> which will be resolved at log time to the date in YYYYMMDD form.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdio-log <emphasis>LOG_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write log messages to files in the <emphasis>LOG_DIRECTORY</emphasis> directory. This is a backward-compatible parameter, equivalent to '-log-pattern '.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-log-levels <emphasis>LEVELS</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write log messages of certain levels to syslog and/or log files. The available log levels are <literal>FATAL</literal>, <literal>ERROR</literal>, <literal>WARN</literal>, <literal>INFO</literal>, <literal>DEBUG</literal>, and <literal>TRACE</literal>. Multiple values can be combined with the <literal>|</literal> character. The default value of logging when enabled is <literal>FATAL|ERROR</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-state-file-dir <emphasis>STATE_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write state files to <emphasis>STATE_DIRECTORY</emphasis>. If not specified, the job manager uses the default of <literal>$GLOBUS_LOCATION/tmp/gram_job_state/</literal>. This directory must be writable by all users and be on a file system which supports POSIX advisory file locks. . This directory must be writable by all users and be on a file system which supports POSIX advisory file locks.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-tcp-port-range <emphasis>PORT_RANGE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to restrict its TCP/IP communication to use ports in the range described by <emphasis>PORT_RANGE</emphasis>. This value is also made available in the job environment via the <literal>GLOBUS_TCP_PORT_RANGE</literal> environment variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-tcp-source-range <emphasis>SOURCE_RANGE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to restrict its TCP/IP communication to use source ports in the range described by <emphasis>SOURCE_RANGE</emphasis>. This value is also made available in the job environment via the <literal>GLOBUS_TCP_SOURCE_RANGE</literal> environment variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x509-cert-dir <emphasis>TRUSTED_CERTIFICATE_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to search <emphasis>TRUSTED_CERTIFICATE_DIRECTORY</emphasis> for its list of trusted CA certificates and their signing policies. This value is also made available in the job environment via the <literal>X509_CERT_DIR</literal> environment variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-cache-location <emphasis>GASS_CACHE_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to use the path <emphasis>GASS_CACHE_DIRECTORY</emphasis> for its temporary GASS-cache files. This value is also made available in the job environment via the <literal>GLOBUS_GASS_CACHE_DEFAULT</literal> environment variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-k</emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to assume it is using Kerberos for authentication instead of X.509 certificates. This disables some certificate-specific processing in the job manager.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-extra-envvars <emphasis>VAR=VAL,&#8230;</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to define a set of environment variables in the job environment beyond those defined in the base job environment. The format of the parameter to this argument is a comma-separated sequence of VAR=VAL pairs, where <literal>VAR</literal> is the variable name and <literal>VAL</literal> is the variable&#8217;s value. If the value is not specified, then the value of the variable in the job manager&#8217;s environment is used. This option may be present multiple times on the command-line or the job manager configuration file to append multiple environment settings.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-seg-module <emphasis>SEG_MODULE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to use the schedule event generator module named by <emphasis>SEG_MODULE</emphasis> to detect job state changes events from the local resource manager, in place of the less efficient polling operations used in GT2. To use this, one instance of the <emphasis role="strong"><literal>globus-job-manager-event-generator</literal></emphasis> must be running to process events for the LRM into a generic format that the job manager can parse.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-audit-directory <emphasis>AUDIT_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to write audit records to the directory named by <emphasis>AUDIT_DIRECTORY</emphasis>. This records can be loaded into a database using the <emphasis role="strong"><literal>globus-gram-audit</literal></emphasis> program.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-globus-toolkit-version <emphasis>TOOLKIT_VERSION</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to use <emphasis>TOOLKIT_VERSION</emphasis> as the version for audit and usage stats records.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-service-tag <emphasis>SERVICE_TAG</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to use <emphasis>SERVICE_TAG</emphasis> as a unique identifier to allow multiple GRAM instances to use the same job state directories without interfering with each other&#8217;s jobs. If not set, the value <literal>untagged</literal> will be used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-disable-streaming</emphasis>
</term>
<listitem>
<simpara>
     Configure the job manager to disable file streaming. This is propagated to the LRM script interface but has no effect in GRAM5.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-disable-usagestats</emphasis>
</term>
<listitem>
<simpara>
     Disable sending of any usage stats data, even if <emphasis>-usagestats-targets</emphasis> is present in the configuration.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-usagestats-targets <emphasis>TARGET</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Send usage packets to a data collection service for analysis. The <emphasis>TARGET</emphasis> string consists of a comma-separated list of HOST:PORT combinations, each contaiing an optional list of data to send. See <ulink url="http://confluence.globus.org/display/~bester/GRAM5+Usage+Stats+Packets">Usage Stats Packets</ulink> for more information about the tags. Special tag strings of <literal>all</literal> (which enables all tags) and <literal>default</literal> may be used, or a sequence of characters for the various tags. If this option is not present in the configuration, then the default of usage-stats.globus.org:4810 is used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-condor-arch <emphasis>ARCH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Set the architecture specification for condor jobs to be <emphasis>ARCH</emphasis> in job classified ads generated by the GRAM5 codnor LRM script. This is required for the condor LRM but ignored for all others.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-condor-os <emphasis>OS</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Set the operating system specification for condor jobs to be <emphasis>OS</emphasis> in job classified ads generated by the GRAM5 codnor LRM script. This is required for the condor LRM but ignored for all others.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_6">
<title>Environment</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-manager</literal></emphasis></simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>HOME</literal></emphasis>
</term>
<listitem>
<simpara>
     User&#8217;s home directory.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>LOGNAME</literal></emphasis>
</term>
<listitem>
<simpara>
     User&#8217;s name.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>JOBMANAGER_SYSLOG_ID</literal></emphasis>
</term>
<listitem>
<simpara>
     String to prepend to syslog audit messages.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>JOBMANAGER_SYSLOG_FAC</literal></emphasis>
</term>
<listitem>
<simpara>
     Facility to log syslog audit messages as.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>JOBMANAGER_SYSLOG_LVL</literal></emphasis>
</term>
<listitem>
<simpara>
     Priority level to use for syslog audit messages.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GATEKEEPER_JM_ID</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager ID to be used in syslog audit records.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GATEKEEPER_PEER</literal></emphasis>
</term>
<listitem>
<simpara>
     Peer information to be used in syslog audit records
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GLOBUS_ID</literal></emphasis>
</term>
<listitem>
<simpara>
     Credential information to be used in syslog audit records
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GLOBUS_JOB_MANAGER_SLEEP</literal></emphasis>
</term>
<listitem>
<simpara>
     Time (in seconds) to sleep when the job manager is started. [For debugging purposes only]
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GRID_SECURITY_HTTP_BODY_FD</literal></emphasis>
</term>
<listitem>
<simpara>
     File descriptor of an open file which contains the initial job request and to which the initial job reply should be sent. This file descriptor is inherited from the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to the X.509 user proxy which was delegated by the client to the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> program to be used by the job manager.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GRID_SECURITY_CONTEXT_FD</literal></emphasis>
</term>
<listitem>
<simpara>
     File descriptor containing an exported security context that the job manager should use to reply to the client which submitted the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GLOBUS_USAGE_TARGETS</literal></emphasis>
</term>
<listitem>
<simpara>
     Default list of usagestats services to send usage packets to.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GLOBUS_TCP_PORT_RANGE</literal></emphasis>
</term>
<listitem>
<simpara>
     Default range of allowed TCP ports to listen on. The <emphasis>-globus-tcp-port-range</emphasis> command-line option overrides this.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>GLOBUS_TCP_SOURCE_RANGE</literal></emphasis>
</term>
<listitem>
<simpara>
     Default range of allowed TCP ports to bind to. The <emphasis>-globus-tcp-source-range</emphasis> command-line option overrides this.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_files_5">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/LRM.TAG.red</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager delegated user credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/LRM.TAG.lock</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager state lock file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/LRM.TAG.pid</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager pid file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/LRM.TAG.sock</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager socket for inter-job manager communications.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/JOB_ID/</literal></emphasis>
</term>
<listitem>
<simpara>
     Job-specific state directory.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/JOB_ID/stdin</literal></emphasis>
</term>
<listitem>
<simpara>
     Standard input which has been staged from a remote URL.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/JOB_ID/stdout</literal></emphasis>
</term>
<listitem>
<simpara>
     Standard output which will be staged from a remote URL.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/JOB_ID/stderr</literal></emphasis>
</term>
<listitem>
<simpara>
     Standard error which will be staged from a remote URL.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$HOME/.globus/job/HOSTNAME/JOB_ID/x509_user_proxy</literal></emphasis>
</term>
<listitem>
<simpara>
     Job-specific delegated credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/tmp/gram_job_state/job.HOSTNAME.JOB_ID</literal></emphasis>
</term>
<listitem>
<simpara>
     Job state file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/tmp/gram_job_state/job.HOSTNAME.JOB_ID.lock</literal></emphasis>
</term>
<listitem>
<simpara>
     Job state lock file. In most cases this will be a symlink to the job manager lock file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/etc/globus-job-manager.conf</literal></emphasis>
</term>
<listitem>
<simpara>
     Default location of the global job manager configuration file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/etc/grid-services/jobmanager-LRM</literal></emphasis>
</term>
<listitem>
<simpara>
     Default location of the LRM-specific gatekeeper configuration file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/etc/globus/gram/job&#8212;manager.rvf</literal></emphasis>
</term>
<listitem>
<simpara>
     Default location of the site-specific job manager RSL validation file.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>$GLOBUS_LOCATION/etc/globus/gram/lrm.rvf</literal></emphasis>
</term>
<listitem>
<simpara>
     Default location of the site-specific job manager RSL validation file for the named lrm.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_2">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-gatekeeper(8)</literal>,
<literal>globus-personal-gatekeeper(1)</literal>, <literal>globus-gram-audit(8)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-run">
<title>GLOBUS-JOB-RUN(1)</title>
<section id="_name_17">
<title>NAME</title>
<simpara>globus-job-run - Execute a job using GRAM</simpara>
</section>
<section id="_synopsis_9">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-run</literal></emphasis> [<literal>-dumprsl</literal> ] [<literal>-dryrun</literal> ] [<literal>-verify</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-file</literal> <emphasis>ARGUMENT_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <emphasis>SERVICE_CONTACT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-np</literal> <emphasis>PROCESSES</emphasis> | <literal>-count</literal> <emphasis>PROCESSES</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-m</literal> <emphasis>MAX_TIME</emphasis> | <literal>-maxtime</literal> <emphasis>MAX_TIME</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-p</literal> <emphasis>PROJECT</emphasis> | <literal>-project</literal> <emphasis>PROJECT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-q</literal> <emphasis>QUEUE</emphasis> | <literal>-queue</literal> <emphasis>QUEUE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-d</literal> <emphasis>DIRECTORY</emphasis> | <literal>-directory</literal> <emphasis>DIRECTORY</emphasis> [<literal>-env</literal> <emphasis>NAME</emphasis>'VALUE'] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-stdin</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDIN_FILE</emphasis>] [<literal>-stdout</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDOUT_FILE</emphasis>] [<literal>-stderr</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDERR_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x</literal> <emphasis>RSL_CLAUSE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-l</literal>  | <literal>-s</literal>  <emphasis>EXECUTABLE</emphasis> [<literal>ARGUMENT</literal> &#8230;]</simpara>
</section>
<section id="_description_10">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program constructs a job description from its
command-line options and then submits the job to the GRAM service
running at <emphasis>SERVICE_CONTACT</emphasis>. The executable and arguments to the
executable are provided on the command-line after all other options.
Note that the <emphasis>-dumprsl</emphasis>, <emphasis>-dryrun</emphasis>, <emphasis>-verify</emphasis>, and <emphasis>-file</emphasis> command-line
options must occur before the first non-option argument, the
<emphasis>SERVICE_CONTACT</emphasis>.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-job-run</literal></emphasis> provides similar functionality to
<emphasis role="strong"><literal>globusrun</literal></emphasis> in that it allows interactive start-up of GRAM jobs.
However, unlike <emphasis role="strong"><literal>globusrun</literal></emphasis>, it uses command-line parameters to
define the job instead of RSL expressions.</simpara>
</section>
<section id="_options_4">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-run</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-run</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dumprsl</emphasis>
</term>
<listitem>
<simpara>
     Translate the command-line options to <emphasis role="strong"><literal>globus-job-run</literal></emphasis> into an RSL expression that can be used with tools such as <emphasis role="strong"><literal>globusrun</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled. When this option is used, the GRAM service prepares to execute the job but stops before submitting the job to the LRM. This can be used to diagnose some problems such as missing files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-verify</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled and then without it enabled if the dryrun is successful.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-file <emphasis>ARGUMENT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read additional command-line options from <emphasis>ARGUMENT_FILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-np <emphasis>PROCESSES</emphasis>, -count <emphasis>PROCESSES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Start <emphasis>PROCESSES</emphasis> instances of the executable as a single job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-m <emphasis>MAX_TIME</emphasis>, -maxtime <emphasis>MAX_TIME</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Schedule the job to run for a maximum of <emphasis>MAX_TIME</emphasis> minutes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PROJECT</emphasis>, -project <emphasis>PROJECT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job use the allocation <emphasis>PROJECT</emphasis> when submitting the job to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q <emphasis>QUEUE</emphasis>, -queue <emphasis>QUEUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job be submitted to the LRM using the named <emphasis>QUEUE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d <emphasis>DIRECTORY</emphasis>, -directory <emphasis>DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Run the job in the directory named by <emphasis>DIRECTORY</emphasis>. Input and output files will be interpreted relative to this directory. This directory must exist on the file system on the LRM-managed resource. If not specified, the job will run in the home directory of the user the job is running as.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-env <emphasis>NAME</emphasis>=<emphasis>VALUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Define an environment variable named by <emphasis>NAME</emphasis> with the value <emphasis>VALUE</emphasis> in the job environment. This option may be specified multiple times to define multiple environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdin [-l | -s] <emphasis>STDIN_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDIN_FILE</emphasis> as the standard input of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdout [-l | -s] <emphasis>STDOUT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDOUT_FILE</emphasis> as the destination for the standard output of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stderr [-l | -s] <emphasis>STDERR_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDERR_FILE</emphasis> as the destination for the standard error of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x <emphasis>RSL_CLAUSE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Add a set of custom RSL attributes described by <emphasis>RSL_CLAUSE</emphasis> to the job description. The clause must be an RSL conjunction and may contain one or more attributes. This can be used to include attributes which can not be defined by other command-line options of <emphasis role="strong"><literal>globus-job-run</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-l</emphasis> option is specified, then the executable is interpreted to be on a file system local to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-s</emphasis> option is specified, then the executable is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_7">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-run</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_3">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-job-submit(1)</literal>, <literal>globus-job-clean(1)</literal>,
<literal>globus-job-get-output(1)</literal>, <literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-status">
<title>GLOBUS-JOB-STATUS(1)</title>
<section id="_name_18">
<title>NAME</title>
<simpara>globus-job-status - Check the status of a GRAM5 job</simpara>
</section>
<section id="_synopsis_10">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-status</literal></emphasis> <emphasis>JOBID</emphasis></simpara>
</section>
<section id="_description_11">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program checks the status of a GRAM job by
sending a status request to the job manager contact for that job
specifed by the <emphasis>JOBID</emphasis> parameter. If successful, it will print the job
status to standard output. The states supported by
<emphasis role="strong"><literal>globus-job-status</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">PENDING</emphasis>
</term>
<listitem>
<simpara>
     The job has been submitted to the LRM but has not yet begun execution.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">ACTIVE</emphasis>
</term>
<listitem>
<simpara>
     The job has begun execution.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">FAILED</emphasis>
</term>
<listitem>
<simpara>
     The job has failed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">SUSPENDED</emphasis>
</term>
<listitem>
<simpara>
     The job is currently suspended by the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">DONE</emphasis>
</term>
<listitem>
<simpara>
     The job has completed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">UNSUBMITTED</emphasis>
</term>
<listitem>
<simpara>
     The job has been accepted by GRAM, but not yet submitted to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">STAGE_IN</emphasis>
</term>
<listitem>
<simpara>
     The job has been accepted by GRAM and is currently staging files prior
to being submitted to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">STAGE_OUT</emphasis>
</term>
<listitem>
<simpara>
     The job has completed execution and is currently staging files from the
service node to other http, GASS, or GridFTP servers.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_options_5">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-status</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_8">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-status</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">X509_USER_PROXY</emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">X509_CERT_DIR</emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs">
<title>Bugs</title>
<simpara>The <emphasis role="strong"><literal>globus-job-status</literal></emphasis> program can not distinguish between the
case of the job manager terminating for any reason and the job being in
the <literal>DONE</literal> state.</simpara>
</section>
<section id="_see_also_4">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-job-submit">
<title>GLOBUS-JOB-SUBMIT(1)</title>
<section id="_name_19">
<title>NAME</title>
<simpara>globus-job-submit - Submit a batch job using GRAM</simpara>
</section>
<section id="_synopsis_11">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-job-submit</literal></emphasis> [<literal>-dumprsl</literal> ] [<literal>-dryrun</literal> ] [<literal>-verify</literal> ] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-file</literal> <emphasis>ARGUMENT_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <emphasis>SERVICE_CONTACT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-np</literal> <emphasis>PROCESSES</emphasis> | <literal>-count</literal> <emphasis>PROCESSES</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-m</literal> <emphasis>MAX_TIME</emphasis> | <literal>-maxtime</literal> <emphasis>MAX_TIME</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-p</literal> <emphasis>PROJECT</emphasis> | <literal>-project</literal> <emphasis>PROJECT</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-q</literal> <emphasis>QUEUE</emphasis> | <literal>-queue</literal> <emphasis>QUEUE</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-d</literal> <emphasis>DIRECTORY</emphasis> | <literal>-directory</literal> <emphasis>DIRECTORY</emphasis> [<literal>-env</literal> <emphasis>NAME</emphasis>'VALUE'] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-stdin</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDIN_FILE</emphasis>] [<literal>-stdout</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDOUT_FILE</emphasis>] [<literal>-stderr</literal> <literal>-l</literal>  | <literal>-s</literal> <emphasis>STDERR_FILE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-x</literal> <emphasis>RSL_CLAUSE</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 <literal>-l</literal>  | <literal>-s</literal>  <emphasis>EXECUTABLE</emphasis> [<literal>ARGUMENT</literal> &#8230;]</simpara>
</section>
<section id="_description_12">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program constructs a job description from
its command-line options and then submits the job to the GRAM service
running at <emphasis>SERVICE_CONTACT</emphasis>. The executable and arguments to the
executable are provided on the command-line after all other options.
Note that the <emphasis>-dumprsl</emphasis>, <emphasis>-dryrun</emphasis>, <emphasis>-verify</emphasis>, and <emphasis>-file</emphasis> command-line
options must occur before the first non-option argument, the
<emphasis>SERVICE_CONTACT</emphasis>.</simpara>
<simpara>The <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> provides similar functionality to
<emphasis role="strong"><literal>globusrun</literal></emphasis> in that it allows batch submission of GRAM jobs.
However, unlike <emphasis role="strong"><literal>globusrun</literal></emphasis>, it uses command-line parameters to
define the job instead of RSL expressions.</simpara>
<simpara>To retrieve the output and error streams of the job, use the program
<emphasis role="strong"><literal>globus-job-get-output</literal></emphasis>. To reclaim resources used by the job by
deleting cached files and job state, use the program
<emphasis role="strong"><literal>globus-job-clean</literal></emphasis>. To cancel a batch job submitted by
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>, use the program <emphasis role="strong"><literal>globus-job-cancel</literal></emphasis>.</simpara>
</section>
<section id="_options_6">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of the <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> program including DiRT information to standard output.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dumprsl</emphasis>
</term>
<listitem>
<simpara>
     Translate the command-line options to <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> into an RSL expression that can be used with tools such as <emphasis role="strong"><literal>globusrun</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled. When this option is used, the GRAM service prepares to execute the job but stops before submitting the job to the LRM. This can be used to diagnose some problems such as missing files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-verify</emphasis>
</term>
<listitem>
<simpara>
     Submit the job request to the GRAM service with the <literal>dryrun</literal> option enabled and then without it enabled if the dryrun is successful.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-file <emphasis>ARGUMENT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Read additional command-line options from <emphasis>ARGUMENT_FILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-np <emphasis>PROCESSES</emphasis>, -count <emphasis>PROCESSES</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Start <emphasis>PROCESSES</emphasis> instances of the executable as a single job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-m <emphasis>MAX_TIME</emphasis>, -maxtime <emphasis>MAX_TIME</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Schedule the job to run for a maximum of <emphasis>MAX_TIME</emphasis> minutes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PROJECT</emphasis>, -project <emphasis>PROJECT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job use the allocation <emphasis>PROJECT</emphasis> when submitting the job to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q <emphasis>QUEUE</emphasis>, -queue <emphasis>QUEUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Request that the job be submitted to the LRM using the named <emphasis>QUEUE</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d <emphasis>DIRECTORY</emphasis>, -directory <emphasis>DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Run the job in the directory named by <emphasis>DIRECTORY</emphasis>. Input and output files will be interpreted relative to this directory. This directory must exist on the file system on the LRM-managed resource. If not specified, the job will run in the home directory of the user the job is running as.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-env <emphasis>NAME</emphasis>=<emphasis>VALUE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Define an environment variable named by <emphasis>NAME</emphasis> with the value <emphasis>VALUE</emphasis> in the job environment. This option may be specified multiple times to define multiple environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdin [-l | -s] <emphasis>STDIN_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDIN_FILE</emphasis> as the standard input of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stdout [-l | -s] <emphasis>STDOUT_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDOUT_FILE</emphasis> as the destination for the standard output of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-stderr [-l | -s] <emphasis>STDERR_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use the file named by <emphasis>STDERR_FILE</emphasis> as the destination for the standard error of the job. If the <emphasis>-l</emphasis> option is specified, then this file is interpreted to be on a file system local to the LRM. If the <emphasis>-s</emphasis> option is specified, then this file is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-submit</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-x <emphasis>RSL_CLAUSE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Add a set of custom RSL attributes described by <emphasis>RSL_CLAUSE</emphasis> to the job description. The clause must be an RSL conjunction and may contain one or more attributes. This can be used to include attributes which can not be defined by other command-line options of <emphasis role="strong"><literal>globus-job-submit</literal></emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-l</emphasis> option is specified, then the executable is interpreted to be on a file system local to the LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s</emphasis>
</term>
<listitem>
<simpara>
     When included outside the context of <emphasis>-stdin</emphasis>, <emphasis>-stdout</emphasis>, or <emphasis>-stderr</emphasis> command-line options, <emphasis>-l</emphasis> option alters the interpretation of the executable path. If the <emphasis>-s</emphasis> option is specified, then the executable is interpreted to be on the file system where <emphasis role="strong"><literal>globus-job-run</literal></emphasis> is being executed, and the file will be staged via GASS. If neither is specified, the local behavior is assumed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_9">
<title>ENVIRONMENT</title>
<simpara>If the following variables affect the execution of
<emphasis role="strong"><literal>globus-job-submit</literal></emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_5">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-job-run(1)</literal>, <literal>globus-job-clean(1)</literal>,
<literal>globus-job-get-output(1)</literal>, <literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-personal-gatekeeper">
<title>GLOBUS-PERSONAL-GATEKEEPER(1)</title>
<section id="_name_20">
<title>NAME</title>
<simpara>globus-personal-gatekeeper - Manage a user&#8217;s personal gatekeeper daemon</simpara>
</section>
<section id="_synopsis_12">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> [<literal>-help</literal> ] [<literal>-usage</literal> ] [<literal>-version</literal> ] [<literal>-versions</literal> ] [<literal>-list</literal> ] [<literal>-directory</literal> <emphasis>CONTACT</emphasis>]</simpara>
</section>
<section id="_description_13">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> command is a utility which
manages a gatekeeper and job manager service for a single user.
Depending on the command-line arguments it will operate in one of
several modes. In the first set of arguments indicated in the synopsis,
the program provides information about the
<emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> command or about instances of the
<emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> that are running currently. The
second set of arguments indicated in the synopsis provide control over
starting a new <emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> instance. The final
set of arguments provide control for terminating one or more
<emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> instances.</simpara>
<simpara>The <emphasis>-start</emphasis> mode will create a new subdirectory of <literal>$HOME/.globus</literal>
and write the configuration files needed to start a  and write the
configuration files needed to start a <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> daemon
which will invoke the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> service when new
authenticated connections are made to its service port. The
<emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> then exits, printing the contact
string for the new gatekeeper prefixed by <literal>GRAM contact: </literal> to standard
output. In addition to the arguments described above, any arguments
described in <emphasis role="strong"><literal>globus-job-manager(8)</literal></emphasis> can be appended to the
command-line and will be added to the job manager configuration for the
service started by the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>.</simpara>
<simpara>The new <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> will continue to run in the background
until killed by invoking <emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> with the
<emphasis>-kill</emphasis> or <emphasis>-killall</emphasis> argument. When killed, it will kill the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> and <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> processes,
remove state files and configuration data, and then exit. Jobs which are
running when the personal gatekeeper is killed will continue to run, but
their job directory will be destroyed so they may fail in the LRM.</simpara>
<simpara>The full set of command-line options to
<emphasis role="strong"><literal>globus-personal-gatekeeper</literal></emphasis> consists of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help, -usage</emphasis>
</term>
<listitem>
<simpara>
     Print command-line option summary and exit
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Print software version
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Print software version including DiRT information
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-list</emphasis>
</term>
<listitem>
<simpara>
     Print a list of all currently running personal gatekeepers. These entries will be printed one per line.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-directory <emphasis>CONTACT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Print the configuration directory for the personal gatekeeper with the contact string <emphasis>CONTACT</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-debug</emphasis>
</term>
<listitem>
<simpara>
     Print additional debugging information when starting a personal gatekeeper. This option is ignored in other modes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-start</emphasis>
</term>
<listitem>
<simpara>
     Start a new personal gatekeeper process.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-jmtype <emphasis>LRM</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Use <emphasis>LRM</emphasis> as the local resource manager interface. If not provided when starting a personal gatekeeper, the job manager will use the default <literal>fork</literal> LRM.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-auditdir <emphasis>AUDIT_DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write audit report files to <emphasis>AUDIT_DIRECTORY</emphasis>. If not provided, the job manager will not write any audit files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-port <emphasis>PORT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Listen for gatekeeper TCP/IP connections on the port <emphasis>PORT</emphasis>. If not provided, the gatekeeper will let the operating system choose.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-log[=<emphasis>DIRECTORY</emphasis>]</emphasis>
</term>
<listitem>
<simpara>
     Write job manager log files to <emphasis>DIRECTORY</emphasis>. If <emphasis>DIRECTORY</emphasis> is omitted, the default of <literal>$HOME</literal> will be used. If this option is not present, the job manager will not write any log files. will be used. If this option is not present, the job manager will not write any log files.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-seg</emphasis>
</term>
<listitem>
<simpara>
     Try to use the SEG mechanism to receive job state change information, instead of polling for these. These require either the system administrator or the user to run an instance of the <emphasis role="strong"><literal>globus-job-manager-event-generator</literal></emphasis> program for the LRM specified by the <emphasis>-jmtype</emphasis> option.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-acctfile <emphasis>ACCOUNTING_FILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write gatekeeper accounting entries to <emphasis>ACCOUNTING_FILE</emphasis>. If not provided, no accounting records are written.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_examples">
<title>Examples</title>
<simpara>This example shows the output when starting a new personal gatekeeper
which will schedule jobs via the <literal>lsf</literal> LRM, with debugging enabled.</simpara>
<screen>%  globus-personal-gatekeeper -start -jmtype lsf

verifying setup...
done.
GRAM contact: personal-grid.example.org:57846:/DC=org/DC=example/CN=Joe User</screen>
<simpara>This example shows the output when listing the current active personal
gatekeepers.</simpara>
<screen>%  globus-personal-gatekeeper -list

personal-grid.example.org:57846:/DC=org/DC=example/CN=Joe User</screen>
<simpara>This example shows the output when querying the configuration directory
for th eabove personal gatekeeper. gatekeepers.</simpara>
<screen>%  globus-personal-gatekeeper -directory "personal-grid.example.org:57846:/DC=org/DC=example/CN=Joe User"

/home/juser/.globus/.personal-gatekeeper.personal-grid.example.org.1337</screen>
<screen>%  globus-personal-gatekeeper -kill "personal-grid.example.org:57846:/DC=org/DC=example/CN=Joe User"

killing gatekeeper: "personal-grid.example.org:57846:/DC=org/DC=example/CN=Joe User"</screen>
</section>
<section id="_see_also_6">
<title>See Also</title>
<simpara><literal>globusrun(1)</literal>, <literal>globus-job-manager(8)</literal>, <literal>globus-gatekeeper(8)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globus-rvf-check">
<title>GLOBUS-RVF-CHECK(8)</title>
<section id="_name_21">
<title>NAME</title>
<simpara>globus-rvf-check - Edit a GRAM5 RSL validation file</simpara>
</section>
<section id="_synopsis_13">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-rvf-check</literal></emphasis> [<literal>-h</literal> ] [<literal>-help</literal> ]</simpara>
</section>
<section id="_description_14">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-rvf-check</literal></emphasis> command is a utility which checks the
syntax of a RSL validation file, and prints out parse errors when
encountered. It can also parse the RVF file contents and then dump
file&#8217;s contents to stdout, after canonicalizing values and quoting. The
exit code of <emphasis role="strong"><literal>globus-rvf-check</literal></emphasis> is 0 if all files specified on the
command line exist and have no parse errors.</simpara>
<simpara>The full set of command-line options to <emphasis role="strong"><literal>globus-rvf-check</literal></emphasis>
consists of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-h, -help, --help</emphasis>
</term>
<listitem>
<simpara>
     Print command-line option summary and exit
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d</emphasis>
</term>
<listitem>
<simpara>
     Dump the RVF contents to stdout. In the output, Each file which is parsed will be prefixed by an RVF comment which contains the input filename. If not specified, <emphasis role="strong"><literal>globus-rvf-check</literal></emphasis> just prints a diagnostic message to standard output indicating whether the file could be parsed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="gram5-cmd-globus-rvf-edit">
<title>GLOBUS-RVF-EDIT(8)</title>
<section id="_name_22">
<title>NAME</title>
<simpara>globus-rvf-edit - Edit a GRAM5 RSL validation file</simpara>
</section>
<section id="_synopsis_14">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-rvf-edit</literal></emphasis> [<literal>-h</literal> ]</simpara>
</section>
<section id="_description_15">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-rvf-edit</literal></emphasis> command is a utility which opens the default
editor on a specified RSL validation file, and then, when editing
completes, runs the <emphasis role="strong"><literal>globus-rvf-check</literal></emphasis> command to verify that the
RVF file syntax is correct. If a parse error occurs, the user will be
given an option to rerun the editor or discard the modifications.</simpara>
<simpara>The full set of command-line options to <emphasis role="strong"><literal>globus-rvf-edit</literal></emphasis> consists
of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-h</emphasis>
</term>
<listitem>
<simpara>
     Print command-line option summary and exit
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s</emphasis>
</term>
<listitem>
<simpara>
     Edit of the site-specific RVF file, which provides override values applicable to all LRMs installed on the system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-l <emphasis>LRM</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Edit the site-specific LRM overrides for the LRM named by the <emphasis>LRM</emphasis> parameter to the option.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-f <emphasis>PATH</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Edit the RVF file located at <emphasis>PATH</emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="globus-scheduler-event-generator-admin">
<title>GLOBUS-SCHEDULER-EVENT-GENERATOR-ADMIN(8)</title>
<section id="_name_23">
<title>NAME</title>
<simpara>globus-scheduler-event-generator-admin - Manage SEG modules</simpara>
</section>
<section id="_synopsis_15">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> [<literal>-h</literal> ]</simpara>
</section>
<section id="_description_16">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> program manages SEG
modules which are used by the <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis>
to monitor a local resource manager or batch system for events. The
<emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> can list, enable, or
disable specific SEG modules. The <emphasis>-h</emphasis> command-line option shows a brief
usage message.</simpara>
<section id="_listing_seg_modules">
<title>Listing SEG Modules</title>
<simpara>The <emphasis>-l</emphasis> command-line option to
<emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> will cause it to list all
of the SEG modules which are available to be run by the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis>. In the output, the service
name will be followed by its status in brackets. Possible status strings
are <literal>ENABLED</literal> and <literal>DISABLED</literal>.</simpara>
</section>
<section id="_enabling_seg_modules">
<title>Enabling SEG Modules</title>
<simpara>The '-e ' command-line option to
<emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> will cause it to enable
the module so that the init script for the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> will run it.</simpara>
</section>
<section id="_disabling_seg_modules">
<title>Disabling SEG Modules</title>
<simpara>The '-d ' command-line option to
<emphasis role="strong"><literal>globus-scheduler-event-generator-admin</literal></emphasis> will cause it to disable
the module so that it will not be started by the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> init script.</simpara>
</section>
</section>
<section id="_files_6">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>/etc/globus/scheduler-event-generator</literal></emphasis>
</term>
<listitem>
<simpara>
     Default location of enabled SEG modules.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_7">
<title>See Also</title>
<simpara><literal>globus-scheduler-event-generator(8)</literal></simpara>
</section>
</section>
<section id="globus-scheduler-event-generator">
<title>GLOBUS-SCHEDULER-EVENT-GENERATOR(8)</title>
<section id="_name_24">
<title>NAME</title>
<simpara>globus-scheduler-event-generator - Process LRM events into a common format for use with GRAM</simpara>
</section>
<section id="_synopsis_16">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> <literal>-s</literal> <emphasis>LRM</emphasis> <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-t</literal> <emphasis>TIMESTAMP</emphasis>] [<literal>-d</literal> <emphasis>DIRECTORY</emphasis>] <?asciidoc-br?>
<?asciidoc-br?>
 [<literal>-b</literal> ] [<literal>-p</literal> <emphasis>PIDFILE</emphasis>]</simpara>
</section>
<section id="_description_17">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> program processes
information from a local resource manager to generate LRM-independent
events which GRAM can use to track job state changes. Typically, the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> is started at system boot time
for all LRM adapters which have been installed. The only required
parameter to <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> is '-s ', which
indicates what LRM-specific module to load. A list of available modules
can be found by using the <emphasis role="strong"><literal>globus-scheduler-event-generator-admin
</literal></emphasis> command.</simpara>
<simpara>Other options control how the <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis>
program runs and where its output goes. These options are:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-t <emphasis>TIMESTAMP</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Start processing events which start at <emphasis>TIMESTAMP</emphasis> in seconds since the
UNIX epoch. If not present, the <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis>
will process events from the time it was started, and not look for
historical events.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d <emphasis>DIRECTORY</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write the event log to files in <emphasis>DIRECTORY</emphasis>, instead of printing them to
standard output. Within <emphasis>DIRECTORY</emphasis>, logs will be named by the time when
they were created in <emphasis>YYYYMMDD</emphasis> format.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-b</emphasis>
</term>
<listitem>
<simpara>
     Run the <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> program in the
background.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p <emphasis>PIDFILE</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Write the process-id of <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> to
<emphasis>PIDFILE</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_files_7">
<title>Files</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>/var/lib/globus/globus-seg-LRM/YYYYMMDD</literal></emphasis>
</term>
<listitem>
<simpara>
     LRM-independent event log generated by <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis>
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_see_also_8">
<title>See Also</title>
<simpara><literal>globus-scheduler-event-generator-admin(8)</literal>, <literal>globus-job-manager(8)</literal></simpara>
</section>
</section>
<section id="gram5-cmd-globusrun">
<title>GLOBUSRUN(1)</title>
<section id="_name_25">
<title>NAME</title>
<simpara>globusrun - Execute and manage jobs via GRAM</simpara>
</section>
<section id="_synopsis_17">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong"><literal>globusrun</literal></emphasis> [<literal>-help</literal> ] [<literal>-usage</literal> ] [<literal>-version</literal> ] [<literal>-versions</literal> ]</simpara>
</section>
<section id="_description_18">
<title>Description</title>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program for submits and manages jobs run on a
local or remote job host. The jobs are controlled by the
<emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program which interfaces with a local
resource manager that schedules and executes the job.</simpara>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program can be run in a number of different modes
chosen by command-line options.</simpara>
<simpara>When <emphasis>-help</emphasis>, <emphasis>-usage</emphasis>, <emphasis>-version</emphasis>, or <emphasis>-versions</emphasis> command-line options
are used, <emphasis role="strong"><literal>globusrun</literal></emphasis> will print out diagnostic information and
then exit.</simpara>
<simpara>When the <emphasis>-p</emphasis> or <emphasis>-parse</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will verify the syntax of the RSL specification and
then terminate. If the syntax is valid, <emphasis role="strong"><literal>globusrun</literal></emphasis> will print out
the string "<literal>RSL Parsed Successfully&#8230;</literal>" and exit with a zero exit
code; otherwise, it will print an error message and terminate with a
non-zero exit code.</simpara>
<simpara>When the <emphasis>-a</emphasis> or <emphasis>-authenticate-only</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will verify that the service named by
<emphasis>RESOURCE_CONTACT</emphasis> exists and the client&#8217;s credentials are granted
permission to access that service. If authentication is successful,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will display the string "<literal>GRAM Authentication test
successful</literal>" and exit with a zero exit code; otherwise it will print an
explanation of the problem and will with a non-zero exit code.</simpara>
<simpara>When the <emphasis>-j</emphasis> or <emphasis>-jobmanager-version</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to determine the software version that
the service named by <emphasis>RESOURCE_CONTACT</emphasis> is running. If successful, it
will display both the Toolkit version and the Job Manager package
version and exit with a zero exit code; otherwise, it will print an
explanation of the problem and exit with a non-zero exit code.</simpara>
<simpara>When the <emphasis>-k</emphasis> or <emphasis>-kill</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to terminate the job named by <emphasis>JOB_ID</emphasis>.
If successful, <emphasis role="strong"><literal>globusrun</literal></emphasis> will exit with zero; otherwise it will
display an explanation of the problem and exit with a non-zero exit
code.</simpara>
<simpara>When the <emphasis>-y</emphasis> or <emphasis>-refresh-proxy</emphasis> command-line option is present,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will attempt to delegate a new X.509 proxy to the job
manager which is managing the job named by <emphasis>JOB_ID</emphasis>. If successful,
<emphasis role="strong"><literal>globusrun</literal></emphasis> will exit with zero; otherwise it will display an
explanation of the problem and exit with a non-zero exit code. This
behavior can be modified by the <emphasis>-full-proxy</emphasis> or <emphasis>-D</emphasis> command-line
options to enable full proxy delegation. The default is limited proxy
delegation.</simpara>
<simpara>When the <emphasis>-status</emphasis> command-line option is present, <emphasis role="strong"><literal>globusrun</literal></emphasis>
will attempt to determine the current state of the job. If successful,
the state will be printed to standard output and <emphasis role="strong"><literal>globusrun</literal></emphasis> will
exit with a zero exit code; otherwise, a description of the error will
be displayed and it will exit with a non-zero exit code.</simpara>
<simpara>Otherwise, <emphasis role="strong"><literal>globusrun</literal></emphasis> will submit the job to a GRAM service. By
default, <emphasis role="strong"><literal>globusrun</literal></emphasis> waits until the job has terminated or failed
before exiting, displaying information about job state changes and at
exit time, the job exit code if it is provided by the GRAM service.</simpara>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program can also function as a <emphasis role="strong"><literal>GASS</literal></emphasis> file
server to allow the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program to stage files to
and from the machine on which <emphasis role="strong"><literal>globusrun</literal></emphasis> is executed to the GRAM
service node. This behavior is controlled by the <emphasis>-s</emphasis>, <emphasis>-o</emphasis>, and <emphasis>-w</emphasis>
command-line options.</simpara>
<simpara>Jobs submitted by <emphasis role="strong"><literal>globusrun</literal></emphasis> can be monitored interactively or
detached. To have <emphasis role="strong"><literal>globusrun</literal></emphasis> detach from the GRAM service after
submitting the job, use the <emphasis>-b</emphasis> or <emphasis>-F</emphasis> command-line options.</simpara>
</section>
<section id="_options_7">
<title>Options</title>
<simpara>The full set of options to <emphasis role="strong"><literal>globusrun</literal></emphasis> consist of:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-help</emphasis>
</term>
<listitem>
<simpara>
     Display a help message to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-usage</emphasis>
</term>
<listitem>
<simpara>
     Display a one-line usage summary to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-version</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of <emphasis role="strong"><literal>globusrun</literal></emphasis> to standard error and exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-versions</emphasis>
</term>
<listitem>
<simpara>
     Display the software version of all modules used by <emphasis role="strong"><literal>globusrun</literal></emphasis> (including DiRT information) to standard error and then exit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-p, -parse</emphasis>
</term>
<listitem>
<simpara>
     Do a parse check on the job specification and print diagnostics. If a parse error occurs, <emphasis role="strong"><literal>globusrun</literal></emphasis> exits with a non-zero exit code.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara><emphasis role="strong">-f <emphasis>RSL_FILENAME</emphasis>, -file
        <emphasis>RSL_FILENAME</emphasis></emphasis>::
     Read job specification from the file named by <emphasis>RSL_FILENAME</emphasis>.</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-n, -no-interrupt</emphasis>
</term>
<listitem>
<simpara>
     Disable handling of the <literal>SIGINT</literal> signal, so that the interrupt character (typically ) causes <emphasis role="strong"><literal>globusrun</literal></emphasis> to terminate without canceling the job.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-r <emphasis>RESOURCE_CONTACT</emphasis>, -resource <emphasis>RESOURCE_CONTACT</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Submit the request to the resource specified by <emphasis>RESOURCE_CONTACT</emphasis>. A
resource may be specified in the following ways:
</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis>HOST</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:/<emphasis>SERVICE</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>::'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT':'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>HOST</emphasis>:'PORT'/<emphasis>SERVICE</emphasis>:'SUBJECT'
</simpara>
<simpara>If any of <emphasis>PORT</emphasis>, <emphasis>SERVICE</emphasis>, or <emphasis>SUBJECT</emphasis> is omitted, the defaults of
<literal>2811</literal>, <literal>jobmanager</literal>, and <literal>host@</literal><emphasis>HOST</emphasis> are used respectively.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-j, -jobmanager-version</emphasis>
</term>
<listitem>
<simpara>
     Print the software version being run by the service running at <emphasis>RESOURCE_CONTACT</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-k <emphasis>JOB_ID</emphasis>, -kill <emphasis>JOB_ID</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Kill the job named by <emphasis>JOB_ID</emphasis>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-D, -full-proxy</emphasis>
</term>
<listitem>
<simpara>
     Delegate a full impersonation proxy to the service. By default, a limited proxy is delegated when needed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-y, -refresh-proxy</emphasis>
</term>
<listitem>
<simpara>
     Delegate a new proxy to the service processing <emphasis>JOB_ID</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-status</emphasis>
</term>
<listitem>
<simpara>
     Display the current status of the job named by <emphasis>JOB_ID</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-q, -quiet</emphasis>
</term>
<listitem>
<simpara>
     Do not display job state change or exit code information.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-o, -output-enable</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams only. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-s, -server</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams for writing and any file local the the <emphasis role="strong"><literal>globusrun</literal></emphasis> invocation for reading. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-w, -write-allow</emphasis>
</term>
<listitem>
<simpara>
     Start a GASS server within the <emphasis role="strong"><literal>globusrun</literal></emphasis> application that allows access to its standard output and standard error streams for writing and any file local the the <emphasis role="strong"><literal>globusrun</literal></emphasis> invocation for reading or writing. Also, augment the <emphasis>RSL_SPECIFICATION</emphasis> with a definition of the <literal>GLOBUSRUN_GASS_URL</literal> RSL substitution and add <literal>stdout</literal> and <literal>stderr</literal> clauses which redirect the output and error streams of the job to the output and error streams of the interactive <emphasis role="strong"><literal>globusrun</literal></emphasis> command. If this is specified, then <emphasis role="strong"><literal>globusrun</literal></emphasis> acts as though the <emphasis>-q</emphasis> were also specified.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-b, -batch</emphasis>
</term>
<listitem>
<simpara>
     Terminate after submitting the job to the GRAM service. The <emphasis role="strong"><literal>globusrun</literal></emphasis> program will exit after the job hits any of the following states: <literal>PENDING</literal>, <literal>ACTIVE</literal>, <literal>FAILED</literal>, or <literal>DONE</literal>. The GASS-related options can be used to stage input files, but standard output, standard error, and file staging after the job completes will not be processed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-F, -fast-batch</emphasis>
</term>
<listitem>
<simpara>
     Terminate after submitting the job to the GRAM service. The <emphasis role="strong"><literal>globusrun</literal></emphasis> program will exit after it receives a reply from the service. The <emphasis>JOB_ID</emphasis> will be displayed to standard output before terminating so that the job can be checked with the <emphasis>-status</emphasis> command-line option or modified by the <emphasis>-refresh-proxy</emphasis> or <emphasis>-kill</emphasis> command-line options.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d, -dryrun</emphasis>
</term>
<listitem>
<simpara>
     Submit the job with the <literal>dryrun</literal> attribute set to true. When this is done, the job manager will prepare to start the job but start short of submitting it to the service. This can be used to detect problems with the <emphasis>RSL_SPECIFICATION</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_environment_10">
<title>Environment</title>
<simpara>If the following variables affect the execution of <emphasis role="strong"><literal>globusrun</literal></emphasis></simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_USER_PROXY</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to proxy credential.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>X509_CERT_DIR</literal></emphasis>
</term>
<listitem>
<simpara>
     Path to trusted certificate directory.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs_2">
<title>Bugs</title>
<simpara>The <emphasis role="strong"><literal>globusrun</literal></emphasis> program assumes any failure to contact the job
means the job has terminated. In fact, this may be due to the
<emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program exiting after all jobs it is managing
have reached the <literal>DONE</literal> or <literal>FAILED</literal> states. In order to reliably
detect job termination, the <literal>two_phase</literal> RSL attribute should be used.</simpara>
</section>
<section id="_see_also_9">
<title>See Also</title>
<simpara><literal>globus-job-submit(1)</literal>, <literal>globus-job-run(1)</literal>,
<literal>globus-job-clean(1)</literal>, <literal>globus-job-get-output(1)</literal>,
<literal>globus-job-cancel(1)</literal></simpara>
</section>
</section>
</chapter>
<chapter id="gram5-configuring">
<title>Configuring GRAM5</title>
<simpara>GRAM5 is designed to be usable by default without any manual
configuration. However, there are many ways to customize a GRAM5
installation to better interact with site policies, filesystem layouts,
LRM interactions, logging, and auditing. In addition to GRAM5-specific
configuration, see <ulink url="../../gsic/admin/index.html#gsic-configuring">../../gsic/admin/index.html#gsic-configuring</ulink>
for information about configuring GSI security.</simpara>
<section id="gram5-configuring-gatekeeper">
<title>Gatekeeper Configuration</title>
<simpara>The <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> has many configuration options related to
network configuration, security, logging, service path, and nice level.
This configuration is located in:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">RPM Package</emphasis>
</term>
<listitem>
<simpara>
     <literal>/etc/sysconfig/globus-gatekeeper</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Debian Package</emphasis>
</term>
<listitem>
<simpara>
     <literal>/etc/default/globus-gatekeeper</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Source Installer</emphasis>
</term>
<listitem>
<simpara>
     <emphasis>PREFIX</emphasis><literal>/etc/globus-gatekeeper.conf</literal>
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>The following configuration variables are available in the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> configuration file:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_PORT</emphasis>
</term>
<listitem>
<simpara>
     Gatekeeper Service Port. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>2119</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_LOCATION</emphasis>
</term>
<listitem>
<simpara>
     Globus Installation Path. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the paths defined at package compilation time.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_LOG</emphasis>
</term>
<listitem>
<simpara>
     Gatekeeper Log Filename. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> logs to syslog using the <literal>GRAM-gatekeeper</literal> log identification prefix. The default configuration value is <literal>/var/log/globus-gatekeeper.log</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_GRID_SERVICES</emphasis>
</term>
<listitem>
<simpara>
     Path to grid service definitions. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>/etc/grid-services</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_GRIDMAP</emphasis>
</term>
<listitem>
<simpara>
     Path to grid-mapfile for authorization. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>/etc/grid-security/grid-mapfile</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_CERT_DIR</emphasis>
</term>
<listitem>
<simpara>
     Path to a trusted certificate root directory. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>/etc/grid-security/certificates</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_CERT_FILE</emphasis>
</term>
<listitem>
<simpara>
     Path to the gatekeeper&#8217;s certificate. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>/etc/grid-security/hostcert.pem</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_KEY_FILE</emphasis>
</term>
<listitem>
<simpara>
     Path to the gatekeeper&#8217;s private key. If not set, the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses the default of <literal>/etc/grid-security/hostkey.pem</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_KERBEROS_ENABLED</emphasis>
</term>
<listitem>
<simpara>
     Flag indicating whether or not the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> will use a kerberos GSSAPI implementation instead of the GSI GSSAPI implementation (untested).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_KMAP</emphasis>
</term>
<listitem>
<simpara>
     Path to the KMAP authentication module. (untested).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_PIDFILE</emphasis>
</term>
<listitem>
<simpara>
     Path to a file where the <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis>'s process ID is written. If not set, <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> uses <literal>/var/run/globus-gatekeeper.pid</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_GATEKEEPER_NICE_LEVEL</emphasis>
</term>
<listitem>
<simpara>
     Process nice level for <emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> and <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> processes. If not set, the default system process nice level is used.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>After modifying the configuration file, restart the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> using the methods described in
<ulink url="../../gram5/admin/index.html#gram5-admin-starting-and-stopping">../../gram5/admin/index.html#gram5-admin-starting-and-stopping</ulink>.</simpara>
</section>
<section id="gram5-configuring-seg">
<title>Scheduler Event Generator Configuration</title>
<simpara>The <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> has several configuration
options related to filesystem paths. This configuration is located in:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">RPM Package</emphasis>
</term>
<listitem>
<simpara>
     <literal>/etc/sysconfig/globus-scheduler-event-generator</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Debian Package</emphasis>
</term>
<listitem>
<simpara>
     <literal>/etc/default/globus-scheduler-event-generator</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">Source Installer</emphasis>
</term>
<listitem>
<simpara>
     <emphasis>PREFIX</emphasis><literal>/etc/globus-scheduler-event-generator.conf</literal>
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>The following configuration variables are available in the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> configuration file:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_SEG_PIDFMT</emphasis>
</term>
<listitem>
<simpara>
     Scheduler Event Generator PID file path format. Modify this to be the location where the <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> writes its process IDs (one per configured LRM). The format is a <literal>printf</literal> format string with one <literal>%s</literal> to be replaced by the LRM name. By default, <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> uses <literal>/var/run/globus-scheduler-event-generator-%s.pid</literal>..
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_SEG_LOGFMT</emphasis>
</term>
<listitem>
<simpara>
     Scheduler Event Generator Log path format. Modify this to be the location where <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> writes its event logs. The format is a <literal>printf</literal> format string with one <literal>%s</literal> to be replaced by the LRM name. By default, <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> uses <literal>/var/lib/globus/globus-seg-%s</literal>. If you modify this value, you&#8217;ll need to also update the LRM configuration file to look for the log file in the new location.. If you modify this value, you&#8217;ll need to also update the LRM configuration file to look for the log file in the new location.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_SEG_NICE_LEVEL</emphasis>
</term>
<listitem>
<simpara>
     Process nice level for <emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> processes. If not set, the default system process nice level is used.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>After modifying the configuration file, restart the
<emphasis role="strong"><literal>globus-scheduler-event-generator</literal></emphasis> using the methods described in
<ulink url="../../gram5/admin/index.html#gram5-admin-starting-and-stopping">../../gram5/admin/index.html#gram5-admin-starting-and-stopping</ulink>.</simpara>
</section>
<section id="gram5-configuring-jobmanager">
<title>Job Manager Configuration</title>
<simpara>The <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> process is started by the
<emphasis role="strong"><literal>globus-gatekeeper</literal></emphasis> and uses the configuration defined in the
service entry for the resource name. By default, these service entries
use a common configuration file for most job manager features. This
configuration is located in:</simpara>
<variablelist>
<varlistentry>
<term>
RPM Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/globus-gram-job-manager.conf</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Debian Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/globus-gram-job-manager.conf</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Source Installer
</term>
<listitem>
<simpara>
    <emphasis>PREFIX</emphasis><literal>/etc/globus-gram-job-manager.conf</literal>
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>This configuration file is used to construct the command-line options
for the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> program. Thus, all of the options
described in <ulink url="#gram5-cmd-globus-job-manager">#gram5-cmd-globus-job-manager</ulink> may be used.</simpara>
<section id="_job_manager_logging">
<title>Job Manager Logging</title>
<simpara>From an administrator&#8217;s perspective, the most important job manager
configuration options are likely the ones related to logging and
auditing. The default GRAM5 configuration puts logs in
<literal>/var/log/globus/gram_USERNAME.log</literal>, with logging enabled at the ,
with logging enabled at the <literal>FATAL</literal> and <literal>ERROR</literal> levels. To enable
more fine-grained logging, add the option <emphasis>-log-levels ' to
<literal>/etc/globus/globus-gram-job-manager.conf</literal>. The value for . The value
for 'LEVELS</emphasis> is a set of log levels joined by the <literal>|</literal> character. The
available log levels are:</simpara>
<table id="gram5-log-levels"
frame="all"
rowsep="1" colsep="1"
>
<title>GRAM5 Log Levels</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Level </entry>
<entry align="left" valign="top"> Meaning </entry>
<entry align="left" valign="top"> Default Behavior</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>FATAL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Problems which cause the job manager to terminate prematurely.</simpara></entry>
<entry align="left" valign="top"><simpara>Enabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>ERROR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Problems which cause a job or operation to fail.</simpara></entry>
<entry align="left" valign="top"><simpara>Enabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>WARN</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Problems which cause minor problems with job execution or monitoring.</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>INFO</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Major events in the lifetime of the job manager and its jobs.</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>DEBUG</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Minor events in the lifetime of jobs.</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>TRACE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Job processing details.</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>In RPM or Debian package installs, these logs will be configured to be
rotated via <emphasis role="strong"><literal>logrotate</literal></emphasis>. See
<literal>/etc/logrotate.d/globus-job-manager</literal> for details on the default log
rotation configuration.  for details on the default log rotation
configuration.</simpara>
</section>
<section id="_firewall_configuration">
<title>Firewall Configuration</title>
<simpara>There are also a few configuration options related to the TCP ports the
the Job Manager users. This port configuration is useful when dealing
with firewalls that restrict incoming or outgoing ports. To restrict
incoming ports (those that the Job Manager listens on), add the
command-line option <emphasis>-globus-tcp-port-range</emphasis> to the Job Manager
configuration file like this:</simpara>
<screen>-globus-tcp-port-range MIN-PORT,MAX-PORT</screen>
<simpara>Where <emphasis>MIN-PORT</emphasis> is the minimum TCP port number the Job Manager will
listen on and <emphasis>MAX-PORT</emphasis> is the maximum TCP port number the Job Manager
will listen on.</simpara>
<simpara>Similarly, to restrict the outgoing port numbers that the job manager
connects form, use the command-line option <emphasis>-globus-tcp-source-range</emphasis>,
like this:</simpara>
<screen>-globus-tcp-source-range MIN-PORT,MAX-PORT</screen>
<simpara>Where <emphasis>MIN-PORT</emphasis> is the minimum outgoing TCP port number the Job Manager
will use and <emphasis>MAX-PORT</emphasis> is the maximum TCP outgoing port number the Job
Manager will use.</simpara>
<simpara>For more information about Globus and firewalls, see
<ulink url="../..//admin/install/index.html#gt-admin-firewall">../..//admin/install/index.html#gt-admin-firewall</ulink>.</simpara>
</section>
</section>
<section id="gram5-configuring-lrm">
<title>LRM Adapter Configuration</title>
<simpara>Each LRM adapter has its own configuration file which can help customize
the adapter to the site configuration. Some LRMs use non-standard
programs to launch parallel or MPI jobs, and some might want to provide
queue or project validation to make it easier to translate job failures
into problems that can be described by GRAM5. All of the LRM adapter
configuration files consist of simple <literal>variable="value"</literal> pairs, with a
leading <literal>#</literal> starting a comment until end-of-line.</simpara>
<simpara>Generally, the GRAM5 LRM configuration files are located in the globus
configuration directory, with each configuration file named by the LRM
name (<literal>fork</literal>, <literal>condor</literal>, <literal>pbs</literal>, <literal>sge</literal>, or <literal>slurm</literal>). The
following are the paths to these configurations:</simpara>
<variablelist>
<varlistentry>
<term>
RPM Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/globus-</literal><emphasis>LRM</emphasis><literal>.conf</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Debian Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/globus-</literal><emphasis>LRM</emphasis><literal>.conf</literal>:
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Source Installer
</term>
<listitem>
<simpara>
    <emphasis>PREFIX</emphasis><literal>/etc/globus/globus-</literal><emphasis>LRM</emphasis><literal>.conf</literal>
</simpara>
</listitem>
</varlistentry>
</variablelist>
<section id="_fork">
<title>Fork</title>
<simpara>The <literal>globus-fork.conf</literal> configuration file can define the following
configuration parameters:  configuration file can define the following
configuration parameters:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">log_path</emphasis>
</term>
<listitem>
<simpara>
     Path to the <literal>globus-fork.log</literal> file used by the  file used by the <emphasis role="strong"><literal>globus-fork-starter</literal></emphasis> and fork SEG module.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">mpiexec, mpirun</emphasis>
</term>
<listitem>
<simpara>
     Path to <emphasis role="strong"><literal>mpiexec</literal></emphasis> and <emphasis role="strong"><literal>mpirun</literal></emphasis> for parallel jobs which use MPI. By default, these are not configured. The LRM adapter will use <emphasis role="strong"><literal>mpiexec</literal></emphasis> over <emphasis role="strong"><literal>mpirun</literal></emphasis> if both are defined.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">softenv_dir</emphasis>
</term>
<listitem>
<simpara>
     Path to an installation of <ulink url="http://www.mcs.anl.gov/hs/software/systems/softenv/softenv-intro.html">softenv</ulink>, which is used on some systems to manage application environment variables.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_condor">
<title>Condor</title>
<simpara>The <literal>globus-condor.conf</literal> configuration file can define the following
configuration parameters:  configuration file can define the following
configuration parameters:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">condor_os</emphasis>
</term>
<listitem>
<simpara>
     Custom value for the <literal>OpSys</literal> requirement for condor jobs. If not specified, the system-wide default will be used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">condor_arch</emphasis>
</term>
<listitem>
<simpara>
     Custom value for the <literal>OpSys</literal> requirement for condor jobs. If not specified, the system-wide default will be used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">condor_submit, condor_rm</emphasis>
</term>
<listitem>
<simpara>
     Path to the condor commands that the LRM adapter uses. These are usually determined when the LRM adapter is compiled if the commands are in the <literal>PATH</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">condor_config</emphasis>
</term>
<listitem>
<simpara>
     Value of the <literal>CONDOR_CONFIG</literal> environment variable, which might be needed to use condor in some cases.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">check_vanilla_files</emphasis>
</term>
<listitem>
<simpara>
     Enable checking if executable, standard input, and directory are valid paths for <literal>vanilla</literal> universe jobs. This can detect some types of errors before submitting jobs to condor, but only if the filesystems between the condor submit host and condor execution hosts are equivalent. In other cases, this may cause unneccessary job failures.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">condor_mpi_script</emphasis>
</term>
<listitem>
<simpara>
     Path to a script to launch MPI jobs on condor
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_pbs">
<title>PBS</title>
<simpara>The <literal>globus-pbs.conf</literal> configuration file can define the following
configuration parameters:  configuration file can define the following
configuration parameters:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">log_path</emphasis>
</term>
<listitem>
<simpara>
     Path to PBS server_logs directory. The PBS SEG module parses these logs to generate LRM events.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">pbs_default</emphasis>
</term>
<listitem>
<simpara>
     Name of the PBS server node, if not the same as the GRAM service node.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">mpiexec, mpirun</emphasis>
</term>
<listitem>
<simpara>
     Path to <emphasis role="strong"><literal>mpiexec</literal></emphasis> and <emphasis role="strong"><literal>mpirun</literal></emphasis> for parallel jobs which use MPI. By default these are not configured. The LRM adapter will use <emphasis role="strong"><literal>mpiexec</literal></emphasis> over <emphasis role="strong"><literal>mpirun</literal></emphasis> if both are defined.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">qsub, qstat, qdel</emphasis>
</term>
<listitem>
<simpara>
     Path to the LRM-specific command to submit, check, and delete PBS jobs. These are usually determined when the LRM adapter is compiled if they are in the <literal>PATH</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">cluster</emphasis>
</term>
<listitem>
<simpara>
     If this value is set to <literal>yes</literal>, then the LRM adapter will attempt to use a remote shell command to launch multiple instances of the executable on different nodes, as defined by the file named by the <literal>PBS_NODEFILE</literal> environment variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">remote_shell</emphasis>
</term>
<listitem>
<simpara>
     Remote shell command to launch processes on different nodes when <literal>cluster</literal> is set to <literal>yes</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">cpu_per_node</emphasis>
</term>
<listitem>
<simpara>
     Number of instances of the executable to launch per allocated node.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">softenv_dir</emphasis>
</term>
<listitem>
<simpara>
     Path to an installation of <ulink url="http://www.mcs.anl.gov/hs/software/systems/softenv/softenv-intro.html">softenv</ulink> which is used on some systems to manage application environment variables.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_sge">
<title>SGE</title>
<simpara>The <literal>globus-sge.conf</literal> configuration file can define the following
configuration parameters:  configuration file can define the following
configuration parameters:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">sge_root</emphasis>
</term>
<listitem>
<simpara>
     Root location of the GridEngine installation. If this is set to <literal>undefined</literal>, then the LRM adapter will try to determine it from the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> environment, or if not there, the contents of the file named by the <literal>sge_config</literal> configuration parameter.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">sge_cell</emphasis>
</term>
<listitem>
<simpara>
     Name of the GridEngine cell to interact with. If this is set to <literal>undefined</literal>, then the LRM adapter will try to determine it from the <emphasis role="strong"><literal>globus-job-manager</literal></emphasis> environment, or if not there, the contents of the file named by the <literal>sge_config</literal> configuration parameter.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">sge_config</emphasis>
</term>
<listitem>
<simpara>
     Path to a file which defines the <literal>SGE_ROOT</literal> and the <literal>SGE_CELL</literal> environment variables.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">log_path</emphasis>
</term>
<listitem>
<simpara>
     Path to GridEngine reporting file. This value is used by the SGE SEG module. If this is used, GridEngine must be configured to write a reporting file and not load reporting data into an ARCo database.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">qsub, qstat, qdel, qconf</emphasis>
</term>
<listitem>
<simpara>
     Path to the LRM-specific command to submit, check, and delete GridEngine jobs. These are usually determined when the LRM adapter is compiled if they are in the <literal>PATH</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">sun_mprun, mpirun</emphasis>
</term>
<listitem>
<simpara>
     Path to <emphasis role="strong"><literal>mprun</literal></emphasis> and <emphasis role="strong"><literal>mpirun</literal></emphasis> for parallel jobs which use MPI. By default these are not configured. The LRM adapter will use <emphasis role="strong"><literal>mprun</literal></emphasis> over <emphasis role="strong"><literal>mpirun</literal></emphasis> if both are defined.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">default_pe</emphasis>
</term>
<listitem>
<simpara>
     Default parallel environment to submit parallel jobs to. If this is not set, then clients must use the <literal>parallel_environment</literal> RSL attribute to choose one.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">validate_pes</emphasis>
</term>
<listitem>
<simpara>
     If this value is set to <literal>yes</literal>, then the LRM adapter will verify that the <literal>parallel_environment</literal> RSL attribute value matches one of the parallel environments supported by this GridEngine service.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">available_pes</emphasis>
</term>
<listitem>
<simpara>
     If this value is defined, use it as a list of parallel environments supported by this GridEngine deployment for validation when <literal>validate_pes</literal> is set to <literal>yes</literal>. If validation is being done but this value is not set, then the LRM adapter will query the GridEngine service to determine available parallel environments at startup.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">default_queue</emphasis>
</term>
<listitem>
<simpara>
     Default queue to use if the job description does not name one.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">validate_queues</emphasis>
</term>
<listitem>
<simpara>
     If this value is set to <literal>yes</literal>, then the LRM adapter will verify that the <literal>queue</literal> RSL attribute value matches one of the queues supported by this GridEngine service.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">available_queues</emphasis>
</term>
<listitem>
<simpara>
     If this value is defined, use it as a list of queues supported by this GridEngine deployment for validation when <literal>validate_queues</literal> is set to <literal>yes</literal>. If validation is being done but this value is not set, then the LRM adapter will query the GridEngine service to determine available queues at startup.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<section id="_enabling_reporting_for_the_gridengine_scheduler_event_generator">
<title>Enabling reporting for the GridEngine Scheduler Event Generator</title>
<simpara>In order to use the Scheduler Event Generator with GridEngine, the job
reporting feature must be enabled, and ARCo database storage must not be
enabled. To enable this, use the command <emphasis role="strong"><literal>qconf -mconf</literal></emphasis> and modify
the <literal>reporting_params</literal> parameter so that the options <literal>reporting</literal> and
<literal>joblog</literal> are set to <literal>true</literal>.</simpara>
</section>
</section>
<section id="_slurm">
<title>SLURM</title>
<simpara>The <literal>globus-slurm.conf</literal> configuration file can define the following
configuration parameters:  configuration file can define the following
configuration parameters:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">srun, sbatch, salloc, scancel</emphasis>
</term>
<listitem>
<simpara>
     Path to the SLURM commands.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">mpi_type</emphasis>
</term>
<listitem>
<simpara>
     MPI implementation to use (either openmpi or mpich2).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">openmpi_path</emphasis>
</term>
<listitem>
<simpara>
     Path to the OpenMPI implementation if available
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">mpich2_path</emphasis>
</term>
<listitem>
<simpara>
     Path to the MPICH 2 implementation if available
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_auditing">
<title>Auditing</title>
<simpara>The <emphasis role="strong"><literal>globus-gram-audit</literal></emphasis> configuration defines information about
the database to load the GRAM5 audit records into. This configuration is
located in:</simpara>
<variablelist>
<varlistentry>
<term>
RPM Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/gram-audit.conf</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Debian Package
</term>
<listitem>
<simpara>
    <literal>/etc/globus/gram-audit.conf</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Source Installer
</term>
<listitem>
<simpara>
    <emphasis>PREFIX</emphasis><literal>/etc/globus/gram-audit.conf</literal>
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>This configuration file contains the following attributes. Each
attribute is defined by a <literal>ATTRIBUTE:VALUE</literal> pair.</simpara>
<table
frame="all"
rowsep="1" colsep="1"
>
<title>Audit Configuration Attributes</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Attribute Name </entry>
<entry align="left" valign="top"> Value </entry>
<entry align="left" valign="top"> Default</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>DRIVER</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the Perl 5 DBI driver for the database to be used. The supported
  drivers for this program are &lt;literal&gt;SQLite&lt;/literal&gt;, &lt;literal&gt;Pg&lt;/literal&gt;
  (for PostgreSQL), and &lt;literal&gt;mysql&lt;/literal&gt;. &lt;/simpara&gt;</simpara></entry>
<entry align="left" valign="top"><simpara><literal>SQLite</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>DATABASE</simpara></entry>
<entry align="left" valign="top"><simpara>The DBI data source specfication to contact the audit database.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>dbname=/var/gram_audit_database/gram_audit.db</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>USERNAME</simpara></entry>
<entry align="left" valign="top"><simpara>Username to authenticate as to the database</simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PASSWORD</simpara></entry>
<entry align="left" valign="top"><simpara>Password to use to authenticate with the database</simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>AUDITVERSION</simpara></entry>
<entry align="left" valign="top"><simpara>Version of the audit database table schemas to use. May be <literal>1</literal> or <literal>1TG</literal>
for this version of the software.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>1</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_rsl_attributes">
<title>RSL Attributes</title>
<simpara>GRAM5 uses the <ulink url="../../gram5/pi/index.html#gram5-rsl">RSL language</ulink> to
encode job descriptions. The attributes supported by gram are defined in
<ulink url="../../gram5/pi/index.html#gram5-rvf">RSL Validation Files</ulink>. These
definitions contain information about when the different RSL attributes
are valid and what their default values might be if not present. GRAM5
will look in <literal>/etc/globus/gram/job-manager.rvf</literal> and  and
<literal>/etc/globus/gram/LRM.rvf</literal> for site-specfic changes to the RSL
validation file.  for site-specfic changes to the RSL validation file.</simpara>
<literallayout class="monospaced">== Job description ==</literallayout>
<simpara>Jobs are described in GRAM5&#8217;s job description language. For detailed
schema information see the <ulink url="#gram5-rsl">GRAM5 RSL documentation</ulink>. For
more information and examples please check the
<ulink url="../../gram5/user/index.html#gram5-user-globusrun">Globusrun section</ulink>
in the <ulink url="../../gram5/user/index.html">GRAM5 Users&#8217;s guide</ulink>.</simpara>
</section>
</chapter>
<chapter id="gram5-pi-protocols">
<title>Semantics and syntax of protocols</title>
<section id="gram5-interface-protocol">
<title>GRAM5 Protocol</title>
<simpara>The GRAM Protocol is used to handle communication between the
Gatekeeper, Job Manager, and GRAM Clients. The protocol is based on a
subset of the HTTP/1.1 protocol, with a small set of message types and
responses sent as the body of the HTTP requests and responses. This
document describes GRAM Protocol version 2 as used by GRAM5. This is
compatible with with the GRAM Protocol parsers in GRAM2 with extensions.</simpara>
<section id="_framing">
<title>Framing</title>
<simpara>GRAM messages are framed in HTTP/1.1 messages. However, only a small
subset of the HTTP specification is used or understood by the GRAM
system. All GRAM requests are HTTP POST messages. Only the following
HTTP headers are understood:</simpara>
<itemizedlist>
<listitem>
<simpara>
Host
</simpara>
</listitem>
<listitem>
<simpara>
Content-Type (set to "application/x-globus-gram" in all cases)
</simpara>
</listitem>
<listitem>
<simpara>
Content-Length
</simpara>
</listitem>
<listitem>
<simpara>
Connection (set to "close" in all HTTP responses)
</simpara>
</listitem>
</itemizedlist>
<simpara>Only the following status codes are supported in response&#8217;s HTTP
Status-Line:</simpara>
<itemizedlist>
<listitem>
<simpara>
200 OK
</simpara>
</listitem>
<listitem>
<simpara>
403 Forbidden
</simpara>
</listitem>
<listitem>
<simpara>
404 Not Found
</simpara>
</listitem>
<listitem>
<simpara>
500 Internal Server Error
</simpara>
</listitem>
<listitem>
<simpara>
400 Bad Request
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_message_format">
<title>Message Format</title>
<simpara>All messages use the carriage return (ASCII value 13) followed by line
feed (ASCII value 10) sequence to delimit lines. In all cases, a blank
line separates the HTTP header from the message body. All
<literal>application/x-globus-gram</literal> message bodies consist of attribute names
followed by a colon, a space, and then the value of the attribute. When
the value may contain a newline or double-quote character, a special
escaping rule is used to encapsulate the complete string. This
encapsulation consists of surrounding the string with double-quotes, and
escaping all double-quote and backslash characters within the string
with a backslash. All other characters are sent without modification.
For example, the string</simpara>
<screen>rsl: &amp;( executable = "/bin/echo" )
 ( arguments = "hello" )</screen>
<simpara>becomes</simpara>
<screen>rsl: "&amp;( executable = \"bin/echo\" )
  (arguments = \"hello\" )"</screen>
<simpara>In GRAM5, protocol extensions are supported in the status update
messages. These extensions are implemented as extra attribute names
<emphasis role="strong">after</emphasis> all of the attributes defined in the messages below. Older
GRAM protocol parsers will ignore those extensions that occur after the
attributes in the messages defined below. In GRAM5, the following
extensions are used:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><literal>exit-code</literal></emphasis>
</term>
<listitem>
<simpara>
     Job exit code. Sent in job state callbacks and in job status replies when the job completes.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gt3-failure-type</literal></emphasis>
</term>
<listitem>
<simpara>
     Failure detail type for staging errors. Sent in job state callbacks and in job status replies when a job fails.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gt3-failure-message</literal></emphasis>
</term>
<listitem>
<simpara>
     Failure detail message for more context for errors. Sent in job state callbacks and in job status replies when a job fails.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gt3-failure-source</literal></emphasis>
</term>
<listitem>
<simpara>
     Failure detail message for the source of a failed file transfer. Sent in job state callbacks and in job status replies when a job fails.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>gt3-failure-destination</literal></emphasis>
</term>
<listitem>
<simpara>
     Failure detail message for the destination of a failed file transfer. Sent in job state callbacks and in job status replies when a job fails.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>version</literal></emphasis>
</term>
<listitem>
<simpara>
     Job manager package version. Sent in all messages from the job manager.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><literal>toolkit-version</literal></emphasis>
</term>
<listitem>
<simpara>
     Toolkit release that the job manager is running. Sent in all messages from the job manager.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>This is the only form of quoting which <literal>application/x-globus-gram</literal>
messages support. Use of <literal>% HEX HEX</literal> escapes (such as seen in URL
encodings) is not meaningful for this protocol.</simpara>
</section>
<section id="_message_types">
<title>Message Types</title>
<section id="_ping_request">
<title>Ping Request</title>
<simpara>A ping request is used to verify that the gatekeeper is configured
properly to handle a named service. The ping request consists of the
following:</simpara>
<screen>POST ping/job-manager-name HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version</screen>
<simpara>The values of the message-specific strings are</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-manager-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the service to have the gatekeeper check. The service name corresponds to one of the gatekeeper&#8217;s configured grid-services, and is usually of the form "jobmanager-<emphasis>LRM</emphasis>".
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the gatekeeper is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string "2".
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_job_request">
<title>Job Request</title>
<simpara>A job request is used to scheduler a job remotely using GRAM. The ping
request consists of the HTTP framing described above with the
request-URI consisting of <emphasis>job-manager-name</emphasis>, where <emphasis>job-manager name</emphasis>
is the name of the service to use to schedule the job. The format of a
job request message consists of the following:</simpara>
<screen>POST job-manager-name[@user-name] HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
job-state-mask: mask
callback-url: callback-contact
rsl: rsl-description</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-manager-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the service to submit the job request to. The service name corresponds to one of the gatekeeper&#8217;s configured grid-services, and is usually of the form jobmanager-<emphasis>LRM</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>user-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     Starting with GT4.0, a client may request that a certain account by used by the gatekeeper to start the job manager. This is done optionally by appending the @ symbol and the local user name that the job should be run as to the <emphasis>job-manager-name</emphasis>. If the @ and username are not present, then the first grid map entry will be used. If the client credential is not authorized in the grid map to use the specified account, an authorization error will occur in the gatekeeper.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the gatekeeper is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>mask</emphasis></emphasis>
</term>
<listitem>
<simpara>
     An integer representation of the job state mask. This value is obtained from a bitwise-OR of the job state values which the client wishes to receive job status callbacks about. These meanings of the various job state values are defined in the GRAM Protocol API documentation.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>callback-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     A https URL which defines a GRAM protocol listener which will receive job state updates. The from a bitwise-OR of the job state values which the client wishes to receive job status callbacks about. The job status update messages are defined below.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>rsl-description</emphasis></emphasis>
</term>
<listitem>
<simpara>
     A quoted string containing the RSL description of the job request.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_status_request">
<title>Status Request</title>
<simpara>A status request is used by a GRAM client to get the current job state
of a running job. This type of message can only be sent to a job
manager&#8217;s job-contact (as returned in the reply to a job request
message). The format of a job request message consists of the following:</simpara>
<screen>POST job-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size
protocol-version: version

"status"</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact string returned in a response to a job request message, or determined by querying the MDS system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the job manager is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_callback_register_request">
<title>Callback Register Request</title>
<simpara>A callback register request is used by a GRAM client to register a new
callback contact to receive GRAM job state updates. This type of message
can only be sent to a job manager&#8217;s job-contact (as returned in the
reply to a job request message). The format of a job request message
consists of the following:</simpara>
<screen>POST job-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
"register mask callback-contact"</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact string returned in a response to a job request message, or determined by querying the MDS system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the job manager is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>mask</emphasis></emphasis>
</term>
<listitem>
<simpara>
     An integer representation of the job state mask. This value is obtained from a bitwise-OR of the job state values which the client wishes to receive job status callbacks about. These meanings of the various job state values are defined in the GRAM Protocol API documentation.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>callback-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     A https URL which defines a GRAM protocol listener which will receive job state updates. The from a bitwise-OR of the job state values which the client wishes to receive job status callbacks about. The job status update messages are defined below.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_callback_unregister_request">
<title>Callback Unregister Request</title>
<simpara>A callback unregister request is used by a GRAM client to request that
the job manager no longer send job state updates to the specified
callback contact. This type of message can only be sent to a job
manager&#8217;s job-contact (as returned in the reply to a job request
message). The format of a job request message consists of the following:</simpara>
<screen>POST job-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
"unregister callback-contact"</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact string returned in a response to a job request message, or determined by querying the MDS system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the job manager is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string "2".
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>callback-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     A https URL which defines a GRAM protocol listener which should no longer receive job state updates. The from a bitwise-OR of the job state values which the client wishes to receive job status callbacks about. The job status update messages are defined @ref globus_gram_protocol_job_state_updates "below".
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_job_cancel_request">
<title>Job Cancel Request</title>
<simpara>A job cancel request is used by a GRAM client to request that the job
manager terminate a job. This type of message can only be sent to a job
manager&#8217;s job-contact (as returned in the reply to a job request
message). The format of a job request message consists of the following:</simpara>
<screen>POST job-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
"cancel"</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact string returned in a response to a job request message, or determined by querying the MDS system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the job manager is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_job_signal_request">
<title>Job Signal Request</title>
<simpara>A job signal request is used by a GRAM client to request that the job
manager process a signal for a job. The arguments to the various signals
are discussed in the protocol library documentation. The format of a job
request message consists of the following:</simpara>
<screen>POST job-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
"signal"</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact string returned in a response to a job request message, or determined by querying the MDS system.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The name of the host on which the job manager is running. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>signal</emphasis></emphasis>
</term>
<listitem>
<simpara>
     A quoted string containing the signal number and its parameters.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_job_state_updates">
<title>Job State Updates</title>
<simpara>A job status update message is sent by the job manager to all registered
callback contacts when the job&#8217;s status changes. The format of the job
status update messages is as follows:</simpara>
<screen>POST callback-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
job-manager-url: job-contact
status: status-code
failure-code: failure-code</screen>
<simpara>The values of the emphasized text items are as below:</simpara>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>callback-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The callback contact string registered with the job manager either by being passed as the <emphasis>callback-contact</emphasis> in a job request message or in a callback register message.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>host-name</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The host part of the callback-contact URL. This exists only for compatibility with the HTTP/1.1 protocol.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>message-size</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The length of the content of the message, not including the HTTP/1.1 header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>version</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The version of the GRAM protocol which is being used. For the protocol defined in this document, the value must be the string <literal>2</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong"><emphasis>job-contact</emphasis></emphasis>
</term>
<listitem>
<simpara>
     The job contact of the job which has changed states.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_proxy_delegation">
<title>Proxy Delegation</title>
<simpara>A proxy delegation message is sent by the client to the job manager to
initiate a delegation handshake to generate a new proxy credential for
the job manager. This credential is used by the job manager or the job
when making further secured connections. The format of the delegation
message is as follows:</simpara>
<screen>POST callback-contact HTTP/1.1
Host: host-name
Content-Type: application/x-globus-gram
Content-Length: message-size

protocol-version: version
"renew"</screen>
<simpara>If a successful (200) reply is sent in response to this message, then
the client will procede with a GSI delegation handshake. The tokens in
this handshake will be framed with a 4 byte big-endian token length
header. The framed tokens will then be wrapped using the
GLOBUS_IO_SECURE_CHANNEL_MODE_SSL_WRAP wrapping mode. The job manager
will frame response tokens in the same manner. After the job manager
receives its final delegation token, it will respond with another
response message that indicates whether the delegation was processed or
not. This response message is a standard GRAM response message.</simpara>
</section>
<section id="_security_attributes">
<title>Security Attributes</title>
<simpara>The following security attributes are needed to communicate with the
Gatekeeper:</simpara>
<itemizedlist>
<listitem>
<simpara>
Authentication must be done using GSSAPI mutual authentication
</simpara>
</listitem>
<listitem>
<simpara>
Messages must be wrapped with support for the delegation message. When using Globus I/O, this is accomplished by using the the GLOBUS_IO_SECURE_CHANNEL_MODE_GSI_WRAP wrapping mode.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="gram5-state-model">
<title>Job State Model</title>
<simpara>As the GRAM service processes a job, the job undergoes a series of state
transitions. These states and their meanings follow:</simpara>
<variablelist>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_UNSUBMITTED</literal>
</term>
<listitem>
<simpara>
    Initial job state
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_STAGE_IN</literal>
</term>
<listitem>
<simpara>
    Job staging in progress
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_PENDING</literal>
</term>
<listitem>
<simpara>
    Job submitted to LRM, awaiting execution
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_ACTIVE</literal>
</term>
<listitem>
<simpara>
    Job executing
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_SUSPENDED</literal>
</term>
<listitem>
<simpara>
    Job made progress executing but is now suspended
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_STAGE_OUT</literal>
</term>
<listitem>
<simpara>
    Job staging in progress after job completed
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_DONE</literal>
</term>
<listitem>
<simpara>
    Job completed successfully
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED</literal>
</term>
<listitem>
<simpara>
    Job was canceled or failed
</simpara>
</listitem>
</varlistentry>
</variablelist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="GRAM5_states.png" width="75%" scalefit="1" align="center"/>
  </imageobject>
  <textobject><phrase>GRAM5_states.png</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
</section>
</chapter>
<chapter id="gram5-pi-error-codes">
<title>Errors</title>
<section id="gram5-error-codes">
<title>Errors</title>
<table id="gram5-errors-table"
frame="all"
rowsep="1" colsep="1"
>
<title>GRAM5 Error Codes</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"> Error Code </entry>
<entry align="left" valign="top"> Reason </entry>
<entry align="left" valign="top"> Possible Solutions</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>one of the RSL parameters is not supported</simpara></entry>
<entry align="left" valign="top"><simpara>Check RSL documentation</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL length is greater than the maximum allowed</simpara></entry>
<entry align="left" valign="top"><simpara>Use RSL substitutions to reduce length of RSL strings</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>3</simpara></entry>
<entry align="left" valign="top"><simpara>an I/O operation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Enable trace logging and report to <ulink url="mailto:gram-dev@globus.org">gram-dev@globus.org</ulink></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>4</simpara></entry>
<entry align="left" valign="top"><simpara>jobmanager unable to set default to the directory requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>directory</literal> attribute refers to a directory that exists on the target system.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5</simpara></entry>
<entry align="left" valign="top"><simpara>the executable does not exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute refers to an executable that exists on the target system.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>6</simpara></entry>
<entry align="left" valign="top"><simpara>of an unused INSUFFICIENT_FUNDS</simpara></entry>
<entry align="left" valign="top"><simpara>Unimplemented feature.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>authentication with the remote server failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the contact string contains the proper X.509 DN.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>8</simpara></entry>
<entry align="left" valign="top"><simpara>the user cancelled the job</simpara></entry>
<entry align="left" valign="top"><simpara>Don&#8217;t cancel jobs you want to complete.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>9</simpara></entry>
<entry align="left" valign="top"><simpara>the system cancelled the job</simpara></entry>
<entry align="left" valign="top"><simpara>Check RSL requirements such as maximum time and memory are valid for the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>10</simpara></entry>
<entry align="left" valign="top"><simpara>data transfer to the server failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check gatekeeper and/or job manager logs to see why the process failed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>11</simpara></entry>
<entry align="left" valign="top"><simpara>the stdin file does not exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdin</literal> attribute refers to a file that exists on the target system or has a valid ftp, gsiftp, http, or https URL.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>12</simpara></entry>
<entry align="left" valign="top"><simpara>the connection to the server failed (check host and port)</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the service is running on the expected TCP/IP port.
       Check that no firewall prevents contacting that TCP/IP port.
       Check <literal>$GLOBUS_LOCATION/var/globus-gatekeeper.log</literal> for runtme configuration errors.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>13</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>maxtime</emphasis> value is not an integer</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>maxtime</literal> value evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>14</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>count</emphasis> value is not an integer</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>count</literal> value evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>15</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager received an invalid RSL</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL string can be parsed by using <emphasis role="strong"><literal>globusrun -p RSL</literal></emphasis>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>16</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed in allowing others to make contact</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>17</simpara></entry>
<entry align="left" valign="top"><simpara>the job failed when the job manager attempted to run it</simpara></entry>
<entry align="left" valign="top"><simpara>Verify that the LRM is configured properly.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>18</simpara></entry>
<entry align="left" valign="top"><simpara>an invalid paradyn was specified</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>19</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>The RSL <literal>jobtype</literal> attribute is not indicated as supported by the LRM. Valid <literal>jobtype</literal> values are <literal>single</literal>,  <literal>multiple</literal>, <literal>mpi</literal>, and <literal>condor</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>20</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>myjob</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>21</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to locate an internal script argument file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/libexec/globus-job-manager-script.pl</literal> exists and is executable.
Check that the LRM-specific perl module is located in <literal>$GLOBUS_LOCATION/lib/perl/Globus/GRAM/JobManager/</literal> directory and is valid. The command <emphasis role="strong"><literal>perl -I$GLOBUS_LOCATION/lib/perl $GLOBUS_LOCATION/lib/perl/Globus/GRAM/JobManager/LRM.pm</literal></emphasis> can be used to check if there are any syntax errors in the script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>22</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create an internal script argument file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that your home directory is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>23</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid job state</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>24</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid script response</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs. This is likely a bug in the LRM script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>25</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager detected an invalid script status</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager logs. This is likely a bug in the LRM script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>26</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> value is not supported by this job manager</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>jobtype</literal> attribute is implemented by the LRM script. Note that some job types require configuration</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>27</simpara></entry>
<entry align="left" valign="top"><simpara>unused ERROR_UNIMPLEMENTED</simpara></entry>
<entry align="left" valign="top"><simpara>LRM does not support some feature included in the job request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>28</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create an internal script submission file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home file system is not full. Check job manager log</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>29</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager cannot find the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that client is delegating a proxy when authenticating with the gatekeeper.
Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>30</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>31</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to cancel the job as requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home filesystem and the <literal>/tmp</literal> file system are not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>32</simpara></entry>
<entry align="left" valign="top"><simpara>system memory allocation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for details.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>33</simpara></entry>
<entry align="left" valign="top"><simpara>the interprocess job communication initialization failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>34</simpara></entry>
<entry align="left" valign="top"><simpara>the interprocess job communication setup failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>35</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>host count</emphasis> value is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>host_count</literal> attribute evaluates to an integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>36</simpara></entry>
<entry align="left" valign="top"><simpara>one of the provided RSL parameters is unsupported</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for details about invalid parameter.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>37</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>queue</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>queue</literal> attribute evaluates to a string that corresponds to an LRM-specific queue name.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>38</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>project</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>project</literal> attribute evaluates to a string that corresponds to an LRM-specific project name.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>39</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL string includes variables that could not be identified</simpara></entry>
<entry align="left" valign="top"><simpara>Check that all RSL substitutions are defined before being used in the job description.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>40</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>environment</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>environment</literal> attribute contains a sequence of <emphasis>VARIABLE</emphasis> <emphasis>VALUE</emphasis> pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>41</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>dryrun</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Remove the RSL <literal>dryrun</literal> attribute from the job description.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>42</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL is invalid (an empty string)</simpara></entry>
<entry align="left" valign="top"><simpara>Include a non-empty RSL string in your job submission request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>43</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to stage the executable</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the executable is reachable from the GRAM5 service node.
Check that the executable exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the executable.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>44</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to stage the stdin file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the standard input file is reachable from the GRAM5 service node.
Check that the standard input file exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the standard input file.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>45</simpara></entry>
<entry align="left" valign="top"><simpara>the requested job manager type is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>46</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>arguments</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>47</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper failed to run the job manager</simpara></entry>
<entry align="left" valign="top"><simpara>Check the gatekeeper or job manager logs for more information.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>48</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL could not be properly parsed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL string can be parsed by using <emphasis role="strong"><literal>globusrun -p RSL</literal></emphasis>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>49</simpara></entry>
<entry align="left" valign="top"><simpara>there is a version mismatch between GRAM components</simpara></entry>
<entry align="left" valign="top"><simpara>Ask system administrator to upgrade GRAM service to GRAM2 or GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>50</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>arguments</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>arguments</literal> attribute evaluates to a sequence of strings.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>51</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>count</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>count</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>52</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>directory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>directory</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>53</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>dryrun</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>dryrun</literal> attribute evaluates to either <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>54</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>environment</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>environment</literal> attribute evaluates to a sequence of VARIABLE, VALUE pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>55</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>executable</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>56</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>host_count</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>host_count</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>57</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>jobtype</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>jobtype</literal> attribute evaluates to one of <literal>single</literal>, <literal>multiple</literal>, <literal>mpi</literal>, or <literal>condor</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>58</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>maxtime</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>maxtime</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>59</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>myjob</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>60</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>paradyn</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>61</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>project</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>project</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>62</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>queue</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>queue</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>63</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stderr</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stderr</literal> attribute evaluates to a string value or a sequence of DESTINATION URLs with optional CACHE_TAG string parameters.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>64</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdin</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdin</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>65</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdout</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdout</literal> attribute evaluates to a string value or a sequence of DESTINATION URLs with optional CACHE_TAG string parameters.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>66</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to locate an internal script</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log for more details.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>67</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call pipe()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>68</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call fcntl()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>69</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create the temporary stdout filename</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>70</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to create the temporary stderr filename</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>71</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed on the system call fork()</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>72</simpara></entry>
<entry align="left" valign="top"><simpara>the executable file permissions do not allow execution</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute refers to an executable program or script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>73</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open stdout</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stdout</literal> attribute refers to one or more valid destination files or URLs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>74</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to open stderr</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>stderr</literal> attribute refers to one or more valid destination files or URLs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>75</simpara></entry>
<entry align="left" valign="top"><simpara>the cache file could not be opened in order to relocate the user proxy</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home directory is writable and not full on the GRAM5 service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>76</simpara></entry>
<entry align="left" valign="top"><simpara>cannot access cache files in ~/.globus/.gass_cache, check permissions, quota, and disk space</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home directory is writable and not full on the GRAM5 service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>77</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to insert the contact in the client contact list</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>78</simpara></entry>
<entry align="left" valign="top"><simpara>the contact was not found in the job manager&#8217;s client contact list</simpara></entry>
<entry align="left" valign="top"><simpara>Don&#8217;t attempt to unregister callback contacts that are not registered</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>79</simpara></entry>
<entry align="left" valign="top"><simpara>connecting to the job manager failed.  Possible reasons: job terminated, invalid job contact, network problems, &#8230;</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job manager process is running.
Check that the job manager credential has not expired.
Check that the job manager contact refers to the correct TCP/IP host and port.
Check that the job manager contact is not blocked by a firewall.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>80</simpara></entry>
<entry align="left" valign="top"><simpara>the syntax of the job contact is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the syntax of job contact string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>81</simpara></entry>
<entry align="left" valign="top"><simpara>the executable parameter in the RSL is undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Include the RSL <literal>executable</literal> in all job requests.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>82</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager service is misconfigured.  condor arch undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Add the <emphasis>-condor-arch</emphasis> to the command-line or configuration file for a job manager configured to use the <literal>condor</literal> LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>83</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager service is misconfigured.  condor os undefined</simpara></entry>
<entry align="left" valign="top"><simpara>Add the <emphasis>-condor-os</emphasis> to the command-line or configuration file for a job manager configured to use the <literal>condor</literal> LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>84</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>min_memory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>min_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>85</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_memory</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>86</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>min_memory</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>min_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>87</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_memory</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_memory</literal> attribute evaluates to a positive integer value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>88</simpara></entry>
<entry align="left" valign="top"><simpara>the creation of a HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>89</simpara></entry>
<entry align="left" valign="top"><simpara>parsing incoming HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>90</simpara></entry>
<entry align="left" valign="top"><simpara>the packing of information into a HTTP message failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>91</simpara></entry>
<entry align="left" valign="top"><simpara>an incoming HTTP message did not contain the expected information</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>92</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager does not support the service that the client requested</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the client is talking to the correct servce</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>93</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper failed to find the requested service</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>94</simpara></entry>
<entry align="left" valign="top"><simpara>the jobmanager does not accept any new requests (shutting down)</simpara></entry>
<entry align="left" valign="top"><simpara>Execute queries before the job has been cleaned up.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>95</simpara></entry>
<entry align="left" valign="top"><simpara>the client failed to close the listener associated with the callback URL</simpara></entry>
<entry align="left" valign="top"><simpara>Call <literal>globus_gram_client_callback_disallow()</literal> with a valid the callback contact.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>96</simpara></entry>
<entry align="left" valign="top"><simpara>the gatekeeper contact cannot be parsed</simpara></entry>
<entry align="left" valign="top"><simpara>Check the syntax of the gatekeeper contact string you are attempting to contact.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>97</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not find the <emphasis>poe</emphasis> command</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>98</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not find the <emphasis>mpirun</emphasis> command</simpara></entry>
<entry align="left" valign="top"><simpara>Configure the LRM script with <literal>mpirun</literal> in your path.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>99</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>start_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>reservation_handle</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>101</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_wall_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_wall_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>102</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_wall_time</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_wall_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>103</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>max_cpu_time</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_cpu_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>104</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>max_cpu_time</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>max_cpu_time</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>105</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is misconfigured, a scheduler script is missing</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the adminstrator has configured the LRM by running its setup script.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>106</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is misconfigured, a scheduler script has invalid permissions</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the adminstrator has installed the <literal>GLOBUS_LOCATION/libexec/globus-job-manager-script.pl</literal> script.
Check that the file system containing that script allows file execution.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>107</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to signal the job</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>108</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager did not recognize/support the signal type</simpara></entry>
<entry align="left" valign="top"><simpara>Check that your signal operation is using the correct signal constant.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>109</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager failed to get the job id from the local scheduler</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>110</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is waiting for a commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Send a two-phase commit signal to the job manager to acknowledge receiving the job contact from the job manager.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>111</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager timed out while waiting for a commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Send a two-phase commit signal to the job manager to acknowledge receiving the job contact from the job manager.
Increase the two-phase commit time out for your job.
Check that the job manager contact TCP/IP port is reachable from your client.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>112</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>save_state</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>save_state</literal> attribute is set to <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>113</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>restart</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>restart</literal> attribute evaluates to a string containing a job contact string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>114</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>two_phase</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>two_phase</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>115</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>two_phase</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>two_phase</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>116</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stdout_position</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>117</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>stdout_position</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>118</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>stderr_position</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>119</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>stderr_position</emphasis> value is not zero or greater</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>120</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager restart attempt failed</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>121</simpara></entry>
<entry align="left" valign="top"><simpara>the job state file doesn&#8217;t exist</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job contact you are trying to restart matches one that the job manager returned to you.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>122</simpara></entry>
<entry align="left" valign="top"><simpara>could not read the job state file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the state file directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>123</simpara></entry>
<entry align="left" valign="top"><simpara>could not write the job state file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the state file directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>124</simpara></entry>
<entry align="left" valign="top"><simpara>old job manager is still alive</simpara></entry>
<entry align="left" valign="top"><simpara>Contact the returned job manager contact to manage the job you are trying to restart.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>125</simpara></entry>
<entry align="left" valign="top"><simpara>job manager state file TTL expired</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE in GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>126</simpara></entry>
<entry align="left" valign="top"><simpara>it is unknown if the job was submitted</simpara></entry>
<entry align="left" valign="top"><simpara>Check job manager log.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>127</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>remote_io_url</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>remote_io_url</literal> attribute evaluates to a string value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>128</simpara></entry>
<entry align="left" valign="top"><simpara>could not write the remote io url file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the user&#8217;s home file system on the job manager service node is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>129</simpara></entry>
<entry align="left" valign="top"><simpara>the standard output/error size is different</simpara></entry>
<entry align="left" valign="top"><simpara>Send a stdio update signal to redirect the job manager output to a new URL</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>130</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager was sent a stop signal (job is still running)</simpara></entry>
<entry align="left" valign="top"><simpara>Submit a restart request to monitor the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>131</simpara></entry>
<entry align="left" valign="top"><simpara>the user proxy expired (job is still running)</simpara></entry>
<entry align="left" valign="top"><simpara>Generate a new proxy and then submit a restart request to monitor the job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>132</simpara></entry>
<entry align="left" valign="top"><simpara>the job was not submitted by original jobmanager</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>133</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is not waiting for that commit signal</simpara></entry>
<entry align="left" valign="top"><simpara>Do not send a commit signal to a job that is not waiting for a commit signal.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>134</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL scheduler specific parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the LRM-specific documentation to determine what values are legal for the RSL extensions implemented by the LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>135</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not stage in a file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file service hosting the file to stage is reachable from the GRAM5 service node.
Check that the file to stage exists on the file service node.
Check that there is sufficient disk space in the user&#8217;s home directory on the service node to store the file to stage.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>136</simpara></entry>
<entry align="left" valign="top"><simpara>the scratch directory could not be created</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the directory named by the RSL <literal>scratch_dir</literal> attribute exists and is writable.
Check that the directory named by the RSL <literal>scratch_dir</literal> attribute is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>137</simpara></entry>
<entry align="left" valign="top"><simpara>the provided <emphasis>gass_cache</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>138</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for job submission</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use restart- or signal-only RSL attributes when submitting a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>139</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for stdio update</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use submit- or restart-only RSL attributes when sending a stdio update signal to a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>140</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL contains attributes which are not valid for job restart</simpara></entry>
<entry align="left" valign="top"><simpara>Do not use submit- or signal-only RSL attributes when restarting a job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>141</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_in</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_in</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>142</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_in_shared</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_in_shared</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>143</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_stage_out</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_stage_out</literal> attribute evaluates to a sequence of SOURCE DESTINATION pairs.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>144</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>gass_cache</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>145</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>file_cleanup</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>file_clean_up</literal> attribute evaluates to a sequence of strings.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>146</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>scratch_dir</emphasis> parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>scratch_dir</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>147</simpara></entry>
<entry align="left" valign="top"><simpara>the provided scheduler-specific RSL parameter is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check the LRM-specific documentation to determine what values are legal for the RSL extensions implemented by the LRM.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>148</simpara></entry>
<entry align="left" valign="top"><simpara>a required RSL attribute was not defined in the RSL spec</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>executable</literal> attribute is present in your job request RSL.
Check that the RSL <literal>restart</literal> attributes is present in your restart RSL.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>149</simpara></entry>
<entry align="left" valign="top"><simpara>the gass_cache attribute points to an invalid cache directory</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>gass_cache</literal> attributes evaluates to a directory that exists or can be created.
Check that the user&#8217;s home file system is writable and not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>150</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>save_state</emphasis> parameter has an invalid value</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>save_state</literal> attribute has a value of <literal>yes</literal> or <literal>no</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>151</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not open the RSL attribute validation file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/globus-gram-job-manager.rvf</literal> is present and readable on the job manager service node.
Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/</literal><emphasis>LRM</emphasis><literal>.rvf</literal> is readable on the job manager service node if present.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>152</simpara></entry>
<entry align="left" valign="top"><simpara>the  job manager could not read the RSL attribute validation file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/globus-gram-job-manager.rvf</literal> is valid.
Check that <literal>$GLOBUS_LOCATION/share/globus_gram_job_manager/</literal><emphasis>LRM</emphasis><literal>.rvf</literal> is valid if present.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>153</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>proxy_timeout</emphasis> is invalid</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>proxy_timeout</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>154</simpara></entry>
<entry align="left" valign="top"><simpara>the RSL <emphasis>proxy_timeout</emphasis> value is not greater than zero</simpara></entry>
<entry align="left" valign="top"><simpara>Check that RSL <literal>proxy_timeout</literal> attribute evaluates to a positive integer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>155</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not stage out a file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the source file being staged exists on the job manager service node.
Check that the directory of the destination file being staged exists on the file service node.
Check that the directory of the destination file being staged is writable by the user.
Check that the destination file service is reachable by the job manager service node.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>156</simpara></entry>
<entry align="left" valign="top"><simpara>the job contact string does not match any which the job manager is handling</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job contact string matches one returned from a job request.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>157</simpara></entry>
<entry align="left" valign="top"><simpara>proxy delegation failed</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the job manager service node trusts the signer of your credential.
Check that you trust the signer of the job manager service node&#8217;s credential.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>158</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager could not lock the state lock file</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the file system holding the job state directory supports POSIX advisory locking.
Check that the job state directory is writable by the user on the service node.
Check that the job state directory is not full.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>159</simpara></entry>
<entry align="left" valign="top"><simpara>an invalid globus_io_clientattr_t was used.</simpara></entry>
<entry align="left" valign="top"><simpara>Check that you have initialized the <literal>globus_io_clientattr_t</literal> attribute prior to using it with the GRAM client API.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>160</simpara></entry>
<entry align="left" valign="top"><simpara>an null parameter was passed to the gram library</simpara></entry>
<entry align="left" valign="top"><simpara>Check that you are passing legal values to all GRAM API calls.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>161</simpara></entry>
<entry align="left" valign="top"><simpara>the job manager is still streaming output</simpara></entry>
<entry align="left" valign="top"><simpara>OBSOLETE IN GRAM5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>162</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your GRAM system administrator to allow a particular certificate to be authorized.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>163</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system reported a failure</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>164</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request - invalid job id</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.
Use a credential which is authorized to interact with a particular GRAM job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>165</simpara></entry>
<entry align="left" valign="top"><simpara>the authorization system denied the request - not authorized to run the specified executable</simpara></entry>
<entry align="left" valign="top"><simpara>Check with your system administrator to verify that the authorization system is configured properly.
Use a credential which is authorized to interact with a particular GRAM job.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>166</simpara></entry>
<entry align="left" valign="top"><simpara>the provided RSL <emphasis>user_name</emphasis> parameter is invalid.</simpara></entry>
<entry align="left" valign="top"><simpara>Check that the RSL <literal>user_name</literal> attribute evaluates to a string.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>167</simpara></entry>
<entry align="left" valign="top"><simpara>the job is not running in the account named by the <emphasis>user_name</emphasis> parameter.</simpara></entry>
<entry align="left" valign="top"><simpara>Ask with the GRAM system administrator to add an authorization entry to allow your credential to run jobs as the specified user account.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</chapter>
</book>
