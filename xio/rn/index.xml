<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>GT 6.0 Release Notes: XIO</title>
</articleinfo>
<section id="xio-rn-overview" xreflabel="Release Notes">
<title>Component Overview</title>
<simpara>Globus XIO is an extensible input/output library written in C for the
Globus Toolkit. It provides a single API (open/close/read/write) that
supports multiple wire protocols, with protocol implementations
encapsulated as drivers. The XIO drivers distributed with 6.0 include
TCP, UDP, file, HTTP, GSI, GSSAPI_FTP, TELNET and queuing. In addition,
Globus XIO provides a driver development interface for use by protocol
developers. This interface allows the developer to concentrate on
writing protocol code rather than infrastructure, as XIO provides a
framework for error handling, asynchronous message delivery, timeouts,
etc. The XIO driver-based approach maximizes the reuse of code by
supporting the notion of a driver stack. XIO drivers can be written as
atomic units and stacked on top of one another. This modularization
provides maximum flexibility and simplifies the design and evaluation of
individual protocols.</simpara>
<section id="xio-features">
<title>Feature summary</title>
<simpara>Supported Features</simpara>
<itemizedlist>
<listitem>
<simpara>
Driver specific string attributes. Set values like <emphasis role="strong">tcp buffer size</emphasis> via string at runtime.
</simpara>
</listitem>
<listitem>
<simpara>
UDT driver.
</simpara>
</listitem>
<listitem>
<simpara>
Mode E Driver
</simpara>
</listitem>
<listitem>
<simpara>
Telnet Driver
</simpara>
</listitem>
<listitem>
<simpara>
Queuing Driver
</simpara>
</listitem>
<listitem>
<simpara>
Ordering Driver
</simpara>
</listitem>
<listitem>
<simpara>
Dynamically loadable drivers.
</simpara>
</listitem>
<listitem>
<simpara>
Single API to swappable IO implementations.
</simpara>
</listitem>
<listitem>
<simpara>
Asynchronous IO support.
</simpara>
</listitem>
<listitem>
<simpara>
Native timeout support.
</simpara>
</listitem>
<listitem>
<simpara>
Data descriptors for providing driver specific hints.
</simpara>
</listitem>
<listitem>
<simpara>
Modular driver stacks to maximize code reuse.
</simpara>
</listitem>
<listitem>
<simpara>
TCP, UDP, file, HTTP, telnet, mode E, GSI drivers.
</simpara>
</listitem>
</itemizedlist>
<simpara>Deprecated Features</simpara>
<itemizedlist>
<listitem>
<simpara>
GSSAPI_FTP driver now distributed with the GridFTP Server
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="xio-changes-summary">
<title>Summary of Changes in XIO</title>
<section id="_new_features_xio">
<title>New Features: XIO</title>
<simpara>*</simpara>
</section>
<section id="_improvements_xio">
<title>Improvements: XIO</title>
<simpara>None.</simpara>
</section>
</section>
<section id="xio-fixed-bugs">
<title>Fixed Bugs for XIO</title>
<itemizedlist>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-546">GT-546</ulink>: HTTP transfers larger than 4GB fail
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="xio-outstanding">
<title>Known Problems in XIO</title>
<itemizedlist>
<listitem>
<simpara>
<ulink url="https://globus.atlassian.net/browse/GT-54">GT-54</ulink>: Globus XIO close call can deadlock
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="xio-dependencies">
<title>Technology dependencies</title>
<simpara>XIO depends on the following GT components:</simpara>
<itemizedlist>
<listitem>
<simpara>
Globus Core
</simpara>
</listitem>
<listitem>
<simpara>
Globus Common
</simpara>
</listitem>
<listitem>
<simpara>
Globus GSSAPI
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="xio-platforms">
<title>Tested platforms</title>
<simpara>Tested Platforms for XIO:</simpara>
<table id="tested-platforms"
frame="all"
rowsep="1" colsep="1"
>
<title>Tested Platforms</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top"> Operating System </entry>
<entry align="left" valign="top"> Distribution </entry>
<entry align="left" valign="top"> Version(s) </entry>
<entry align="left" valign="top"> Architecture(s)</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top" morerows="9"><simpara>Linux</simpara></entry>
<entry align="left" valign="top" morerows="1"><simpara>CentOS</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Fedora</simpara></entry>
<entry align="left" valign="top"><simpara>20, 21, 22</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Red Hat Enterprise Linux</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Scientific Linux</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>SUSE Linux Enterprise Server</simpara></entry>
<entry align="left" valign="top"><simpara>11SP3</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Debian</simpara></entry>
<entry align="left" valign="top"><simpara>6, 7, 8</simpara></entry>
<entry align="left" valign="top"><simpara>i386, amd64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Ubuntu</simpara></entry>
<entry align="left" valign="top"><simpara>12.04LTS, 14.04LTS, 14.10, 15.04</simpara></entry>
<entry align="left" valign="top"><simpara>i386, amd64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" namest="col_1" nameend="col_2"><simpara>Mac OS X</simpara></entry>
<entry align="left" valign="top"><simpara>10.6-10.10</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Solaris</simpara></entry>
<entry align="left" valign="top"><simpara>OmniOS</simpara></entry>
<entry align="left" valign="top"><simpara>r151006</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Windows 7</simpara></entry>
<entry align="left" valign="top" namest="col_2" nameend="col_3"><simpara>Cygwin</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" namest="col_2" nameend="col_3"><simpara>MingW64</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="xio-compatibility">
<title>Backward compatibility summary</title>
<simpara>Protocol changes since GT version 5.2</simpara>
<itemizedlist>
<listitem>
<simpara>
None.
</simpara>
</listitem>
</itemizedlist>
<simpara>API changes since GT version 5.2</simpara>
<itemizedlist>
<listitem>
<simpara>
<literal>globus_xio_stack_copy</literal> added to the API. This allows a user to duplicated a configured stack.
</simpara>
</listitem>
<listitem>
<simpara>
<literal>globus_xio_driver_set_eof_received</literal> added to the driver API. This function allows drivers to have multiple outstanding reads at one time.
</simpara>
</listitem>
<listitem>
<simpara>
<literal>globus_xio_driver_eof_received</literal> added to the driver API. Working in conjunction with <literal>globus_xio_driver_set_eof_received</literal> to allow drivers to have multiple outstanding reads.
</simpara>
</listitem>
<listitem>
<simpara>
Users can now pass in a NULL callback for timeouts and it is assumed that when time expires the user wants the operation to timeout. Previously a user callback was required where the user would decide if they wanted the timeout.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="xio-associatedstandards">
<title>Associated Standards</title>
<simpara>Adoption of standards in XIO is determined by the drivers. All drivers
distributed by XIO are compliant with the protocol they implement.</simpara>
</section>
</section>
<section id="xio-rn-formoreinfo">
<title>For More Information</title>
<simpara>See <ulink url=""></ulink> for more information about this component.</simpara>
</section>
</article>
