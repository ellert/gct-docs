<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>GT 6.0 C Common Libraries: Developer&#8217;s Guide</title>
</bookinfo>
<preface>
<title></title>
<simpara>The C Common Libraries provide an abstraction layer for data types, libc
system calls, and data structures used throughout the Globus Toolkit and
useful for applications that use the Globus Toolkit.</simpara>
</preface>
<chapter id="ccommonlib-developer-beforeyoubegin">
<title>Before you begin</title>
<section id="ccommonlib-feature-summary">
<title>Feature summary</title>
<itemizedlist>
<listitem>
<simpara>
Globus Callback - Portable event handling layer for signal handling and periodic and one-shot events in a single- more multi-threaded environment.
</simpara>
</listitem>
<listitem>
<simpara>
Globus Error - An abstraction for providing context-specific information in error response in C.
</simpara>
</listitem>
<listitem>
<simpara>
Portable Threading API for POSIX and Windows
</simpara>
</listitem>
<listitem>
<simpara>
URL String Parser
</simpara>
</listitem>
<listitem>
<simpara>
Configuration handlers for command-line, environment-variable, and configuration file based application configuration.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="ccommonlib-platform-summary">
<title>Tested platforms</title>
<simpara>The C common libraries have been tested on the following platforms</simpara>
<table id="tested-platforms"
frame="all"
rowsep="1" colsep="1"
>
<title>Tested Platforms</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top"> Operating System </entry>
<entry align="left" valign="top"> Distribution </entry>
<entry align="left" valign="top"> Version(s) </entry>
<entry align="left" valign="top"> Architecture(s)</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top" morerows="9"><simpara>Linux</simpara></entry>
<entry align="left" valign="top" morerows="1"><simpara>CentOS</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Fedora</simpara></entry>
<entry align="left" valign="top"><simpara>20, 21, 22</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Red Hat Enterprise Linux</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Scientific Linux</simpara></entry>
<entry align="left" valign="top"><simpara>5, 6</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>SUSE Linux Enterprise Server</simpara></entry>
<entry align="left" valign="top"><simpara>11SP3</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Debian</simpara></entry>
<entry align="left" valign="top"><simpara>6, 7, 8</simpara></entry>
<entry align="left" valign="top"><simpara>i386, amd64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Ubuntu</simpara></entry>
<entry align="left" valign="top"><simpara>12.04LTS, 14.04LTS, 14.10, 15.04</simpara></entry>
<entry align="left" valign="top"><simpara>i386, amd64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" namest="col_1" nameend="col_2"><simpara>Mac OS X</simpara></entry>
<entry align="left" valign="top"><simpara>10.6-10.10</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Solaris</simpara></entry>
<entry align="left" valign="top"><simpara>OmniOS</simpara></entry>
<entry align="left" valign="top"><simpara>r151006</simpara></entry>
<entry align="left" valign="top"><simpara>x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" morerows="1"><simpara>Windows 7</simpara></entry>
<entry align="left" valign="top" namest="col_2" nameend="col_3"><simpara>Cygwin</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
<row>
<entry align="left" valign="top" namest="col_2" nameend="col_3"><simpara>MingW64</simpara></entry>
<entry align="left" valign="top"><simpara>i386, x86_64</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="ccommonlib-compatibility-summary">
<title>Backward compatibility summary</title>
<simpara>API changes since GT version 5.2</simpara>
<simpara>None.</simpara>
<simpara>All of the GT 3.2 API is still functional in GT 6.0.</simpara>
</section>
<section id="ccommonlib-tech-dependencies">
<title>Technology dependencies</title>
<simpara>C Common Libraries only depend on the globus_core module.</simpara>
</section>
<section id="ccommonlib-security-considerations">
<title>Security Considerations for C Common Libraries</title>
<simpara>There are no security considerations for the C Common Libraries.</simpara>
</section>
</chapter>
<chapter id="ccommonlib-developer-scenarios">
<title>Usage scenarios</title>
<simpara>C Common libraries will need to be used if virtually any other toolkit
component is used, since many data types are abstract and require the C
common libraries to manipulate.</simpara>
</chapter>
<chapter id="ccommonlib-developer-archdes">
<title>Architecture and design overview</title>
<simpara>Not available at this time.</simpara>
</chapter>
<chapter id="ccommonlib-apis">
<title>APIs</title>
<section id="_component_api">
<title>Component API</title>
<simpara>See the <ulink url="http://www.globus.org/api/c-globus-{$version}/">C API pages</ulink> for
other API documentation on globus_common.</simpara>
</section>
</chapter>
<chapter id="ccommonlib-developer-env">
<title>Environment variable interface</title>
<section id="ccommonlib-env-var">
<title>Environment variables for C Common Libraries</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_HOSTNAME</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to the fully qualified name of the local machine&#8217;s hostname.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_DOMAIN_NAME</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to the domain name to be used to qualify the local machine&#8217;s hostname.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_ERROR_OUTPUT</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to 1 to cause Globus libraries to display error information to stderr.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_ERROR_VERBOSE</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to 1 to enable verbose error messages.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_I18N</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to 1 to attempt to use localized messages. (Currently not working)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_LOCATION</emphasis>
</term>
<listitem>
<simpara>
     Set this variable to the path where the Globus Toolkit is installed, so that Globus tools can find libraries and data files. This is only needed if the Globus Toolkit was built with the source installer.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">GLOBUS_THREAD_MODEL</emphasis>
</term>
<listitem>
<simpara>
     Set to the name of a thread model to control the operation of the Globus event driver. Valid values are (depending on the platform) <literal>none</literal> for non-threaded operation (the default), <literal>pthread</literal> for POSIX threads, or <literal>windows</literal> for Windows threads.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</chapter>
<chapter id="ccommonlib-developer-debugging">
<title>Debugging</title>
<simpara>General C debugging techniques apply when developing with the C common
libraries.</simpara>
</chapter>
<chapter id="ccommonlib-developer-troubleshooting">
<title>Troubleshooting</title>
<simpara>There are no specific troubleshooting techniques for the C common
libraries.</simpara>
</chapter>
<chapter id="ccommonlib-developer-relateddocs">
<title>Related Documentation</title>
<simpara>See the <ulink url="http://www.globus.org/api/c-globus-{$version}/">C API pages</ulink> for
more information about this component.</simpara>
</chapter>
</book>
