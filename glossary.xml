<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE glossary
PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
                    
<glossary id="glossary"><title>GT <replaceable role="entity">version</replaceable> Glossary</title>
      
      <glossdiv>
            <title>A</title>
 
            <glossentry id="autoconf">
                  <glossterm>autoconf</glossterm>
                  <glossdef>
                        <para>GNU Open Source package used to automatically configure the source
                              code package.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="automake">
                  <glossterm>automake</glossterm>
                  <glossdef>
                        <para>GNU Open Source used to automatically generate Makefile in files.</para>
                  </glossdef>
            </glossentry>

      </glossdiv>
      <glossdiv>
            <title>B</title>
            <glossentry id="batch-scheduler">
                  <glossterm>batch scheduler</glossterm>
                  <glossdef>
                        <para>See the definition for scheduler</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>C</title>
            <glossentry id="ca">
                  <glossterm>Certificate Authority</glossterm>
                  <acronym> CA </acronym>
                  <glossdef>
                        <para> An entity that issues certificates.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="ca-cert">
                  <glossterm>CA Certificate</glossterm>
                  <glossdef>
                        <para> The CA's certificate. This certificate is used to verify signature on
                              certificates issued by the CA. GSI typically stores a given CA
                              certificate in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.0</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="ca-sign">
                  <glossterm>CA Signing Policy</glossterm>
                  <glossdef>
                        <para> The CA signing policy is used to place constraints on the information
                              you trust a given CA to bind to public keys. Specifically it
                              constrains the identities a CA is trusted to assert in a certificate.
                              In GSI the signing policy for a given CA can typically be found in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.signing_policy</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cert">
                  <glossterm>certificate</glossterm>
                  <glossdef>
                        <para> A public key plus information about the certificate owner bound
                              together by the digital signature of a CA. In the case of a CA
                              certificate, the certificate is self signed, i.e. it was signed using
                              its own private key.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="crl">
                  <glossterm>Certificate Revocation List</glossterm>
                  <acronym>CRL</acronym>
                  <glossdef>
                        <para> A list of revoked certificates generated by the CA that originally
                              issued them. When using GSI, this list
                              is typically found in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.r0</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cert-subject">
                  <glossterm>certificate subject</glossterm>
                  <glossdef>
                        <para> An identifier for the certificate owner, e.g.
                                    "<filename>/DC=org/DC=doegrids/OU=People/CN=John Doe
                              123456</filename>". The subject is part of the information the CA
                              binds to a public key when creating a certificate.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="client">
                  <glossterm>client</glossterm>
                  <glossdef>
                        <para>A process that sends commands and receives responses. Note that in GridFTP, the client may or may not take part in the actual movement of data.
                        </para>
                  </glossdef>
            </glossentry>

            <glossentry id="client-server-transfer">
                  <glossterm>client/server transfer</glossterm>
                  <glossdef>
                        <para>In a client/server transfer, there are only two entities involved in
                              the transfer, the client entity and the server entity. We use the term
                              entity here rather than process because in the implementation provided
                              in GT5, the server entity may actually run as two or more separate
                              processes. </para>
                        <para>The client will either move data from or to his local host. The client
                              will decide whether or not he wishes to connect to the server to
                              establish the data channel or the server should connect to him (MODE E
                              dictates who must connect).</para>
                        <para>If the client wishes to connect to the server, he will send the PASV
                              (passive) command. The server will start listening on an ephemeral
                              (random, non-privileged) port and will return the IP and port as a
                              response to the command. The client will then connect to that IP/Port. </para>
                        <para>If the client wishes to have the server connect to him, the client
                              would start listening on an ephemeral port, and would then send the
                              PORT command which includes the IP/Port as part of the command to the
                              server and the server would initiate the TCP connect. Note that this
                              decision has an impact on traversing firewalls. For instance, the
                              client's host may be behind a firewall and the server may not be able
                              to connect. </para>
                        <para>Finally, now that the data channel is established, the client will
                              send either the RETR “filename” command to transfer a file from the
                              server to the client (GET), or the STOR “filename” command to transfer
                              a file from the client to the server (PUT). </para>
                  </glossdef>
            </glossentry>

            <glossentry id="cli">
                  <glossterm>command line interface</glossterm>
                  <acronym>CLI</acronym>
                  <glossdef>
                        <para>A mechanism for interacting with a computer operating system or software 
                              by typing commands to run programs, as opposed to using a mouse 
                              pointer on a graphical user interface (GUI).</para>
                  </glossdef>
            </glossentry>
            
            <glossentry id="command-response">
                  <glossterm>command/response</glossterm>
                  <glossdef>
                        <para>Both FTP and GridFTP
                              are command/response protocols. What this means is that once a client
                              sends a command to the server, it can only accept responses from the
                              server until it receives a response indicating that the server is
                              finished with that command. For most commands this is not a big deal.
                              For instance, setting the type of the file transfer to binary (called
                              "I" for "image in the protocol"), simply consists of the client
                              sending TYPE I and the server responding with 220 OK. Type set to I.
                              However, the SEND and RETR commands (which actually initiate the
                              movement of data) can run for a long time. Once the command is sent,
                              the client’s only options are to wait until it receives the completion
                              reply, or kill the transfer. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="concurrency">
                  <glossterm>concurrency</glossterm>
                  <glossdef>
                        <para>When speaking of
                              GridFTP transfers, concurrency refers to having multiple files in
                              transit at the same time. They may all be on the same host or across
                              multiple hosts. This is equivalent to starting up “n” different
                              clients for “n” different files, and having them all running at the
                              same time. This can be effective if you have many small files to move.
                              The Reliable File Transfer (RFT) service utilizes concurrency to
                              improve its performance.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="condor">
                  <glossterm>Condor</glossterm>
                  <glossdef>
                        <para>A <glossterm>Local Resource Manager</glossterm>
                        mechanism supported by GRAM. See the
                        <ulink url="http://www.cs.wisc.edu/condor/"
                                    >Condor Project Website</ulink> for more
                        information.</para>
                  <glossseealso>Local Resource Manager</glossseealso>
                  </glossdef>
            </glossentry>
                        <glossentry id="control-channel">
                  <glossterm>control channel</glossterm>
                  <glossdef>
                        <para>The Communication link (TCP) over which commands and responses flow.</para>
                        <para>Low bandwidth; encrypted and integrity protected by default.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cred">
                  <glossterm>credentials</glossterm>
                  <glossdef>
                        <para>The combination of a certificate and the
                              matching private key.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="cvs">
                  <glossterm>Concurrent Version System</glossterm>
                  <acronym>CVS</acronym>
                  <glossdef>
                        <para>Source code repository used by the Globus Toolkit.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>D</title>
                        <glossentry id="data-channel">
                  <glossterm>data channel</glossterm>
                  <glossdef>
                        <para>Communication link(s) over which the actual data of interest flows.</para>
                        <para>High Bandwidth; authenticated by default; encryption and integrity protection optional.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="dual-channel-protocol">
                  <glossterm>dual channel protocol</glossterm>
                  <glossdef>
                        <para>GridFTP uses
                              two channels: </para>
                        <itemizedlist>
                              <listitem>
                                    <simpara>One of the channels, called the control channel, is
                                          used for sending commands and responses. It is low
                                          bandwidth and is encrypted for security reasons.
                                    </simpara>
                              </listitem>
                              <listitem>
                                    <simpara>The second channel is known as the data channel. Its
                                          sole purpose is to transfer the data. It is high bandwidth
                                          and uses an efficient protocol. </simpara>
                              </listitem>
                        </itemizedlist>
                        <para>By default, the data channel is authenticated at connection time, but
                              no integrity checking or encryption is performed due to performance
                              reasons. Integrity checking and encryption are both available via the
                              client and libraries. </para>
                        <para>Note that in GridFTP (not FTP) the data channel may actually consist
                              of several TCP streams from multiple hosts. </para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>E</title>
            <glossentry id="eec">
                  <glossterm>End Entity Certificate</glossterm>
                  <acronym>EEC</acronym>
                  <glossdef>
                        <para> A certificate belonging to a non-CA entity, e.g. you, me or the
                              computer on your desk.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="extended-block-mode">
                  <glossterm>extended block mode (MODE E)</glossterm>
                  <glossdef>
                        <para> MODE E is a critical GridFTP components because it allows for out of
                              order reception of data. This in turn, means we can send the data down
                              multiple paths and do not need to worry if one of the paths is slower
                              than the others and the data arrives out of order. This enables
                              parallelism and striping within GridFTP. In MODE E, a series of
                              “blocks” are sent over the data channel. Each block consists of:</para>
                        <itemizedlist>
                              <listitem>
                                    <simpara>an 8 bit flag field, </simpara>
                              </listitem>
                              <listitem>
                                    <simpara>a 64 bit field indicating the offset in the
                                    transfer,</simpara>
                              </listitem>
                              <listitem>
                                    <simpara>and a 64 bit field indicating the length of the
                                          payload, </simpara>
                              </listitem>
                              <listitem>
                                    <simpara>followed by length bytes of payload. </simpara>
                              </listitem>
                        </itemizedlist>
                        <para>Note that since the offset and length are included in the block, out
                              of order reception is possible, as long as the receiving side can
                              handle it, either via something like a seek on a file, or via some
                              application level buffering and ordering logic that will wait for the
                              out of order blocks. </para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>F</title>
            <glossentry id="flavor">
                  <glossterm>flavor</glossterm>
                  <glossdef>
                        <para>Term that uniquely encompasses Machine
                              Architecture, OS, Compiler and other attributes into a single term,
                              for example: gcc32dbgpthr for a threaded Linux debug
                        distribution.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="fork">
                  <glossterm>fork</glossterm>
                  <glossdef>
                        <para>A POSIX-specific way of creating new processes.
                        GRAM implements a basic fork
                        <glossterm>LRM Adapter</glossterm> which runs jobs on
                        the GRAM head node.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>G</title>
            <glossentry id="gaa-config">
                  <glossterm>GAA configuration file</glossterm>
                  <glossdef>
                        <para> A file that configures the Generic Authorization and Access control
                                    <acronym>GAA</acronym> libraries. When using GSI, this file is typically found in
                                    <filename>/etc/grid-security/gsi-gaa.conf</filename>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="gatekeeper">
                  <glossterm>Gatekeeper</glossterm>
                  <glossdef>
                        <para>A part of GRAM that runs as root and
                        authenticates clients prior to starting the
                        <glossterm>Job Manager</glossterm>.</para>
                  </glossdef>
            </glossentry>
 
            <glossentry id="gram">
                  <glossterm>Grid Resource Allocation and Management</glossterm>
                  <acronym>GRAM</acronym>
                  <glossdef>
                        <para>This component is used to locate, submit, monitor, and cancel jobs on Grid computing resources.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="gridftp">
                  <glossterm>GridFTP</glossterm>
                  <glossdef>
                        <para>
                            A file transfer protocol based on FTP with
                            extensions for security and parallel data
                            transfers.
                        </para>
                  </glossdef>
            </glossentry>

            <glossentry id="grid-map-file">
                  <glossterm>grid map file</glossterm>
                  <glossdef>
                        <para> A file containing entries mapping certificate subjects to local user
                              names. This file can also serve as a access control list for GSI
                              enabled services and is typically found in
                                    <filename>/etc/grid-security/grid-mapfile</filename>. For more
                              information see the Gridmap section <olink targetdoc="gsicAdmin" targetptr="setting-up-gridmap">here</olink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="grid-sec-dir">
                  <glossterm>grid security directory</glossterm>
                  <glossdef>
                        <para> The directory containing GSI configuration files such as the GSI
                              authorization callout configuration and GAA configuration files.
                              Typically this directory is <filename>/etc/grid-security</filename>.
                              For more information see <olink targetdoc="gsicPI" targetptr="gsic-env-gridsecurity">this</olink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="gsi">
                  <glossterm>Grid Security Infrastructure</glossterm>
                  <acronym>GSI</acronym>
                  <glossdef>
                        <para>GSI stands for Grid Security Infrastructure and is used to describe the original infrastructure of GT security, which is comprised of 
                        SSL, PKI and proxy certificates.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="gsi-authz-config">
                  <glossterm>GSI authorization callout configuration file</glossterm>
                  <glossdef>
                        <para> A file that configures authorization callouts to be used for mapping
                              and authorization in GSI enabled services. When using GSI this file is
                              typically found in
                              <filename>/etc/grid-security/gsi-authz.conf</filename>.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>H</title>

            <glossentry id="host-cert">
                  <glossterm>host certificate</glossterm>
                  <glossdef>
                        <para> An <ulink url="#EEC">EEC</ulink> belonging to a host. When using GSI this certificate is
                              typically stored in
                              <filename>/etc/grid-security/hostcert.pem</filename>. For more
                              information on possible host certificate locations see the <olink targetdoc="gsicDeveloper" targetptr="gsic-env-credentials">GSI C Developer's Guide</olink>. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="host-cred">
                  <glossterm>host credentials</glossterm>
                  <glossdef>
                        <para> The combination of a host certificate and its corresponding private
                              key.</para>
                  </glossdef>
            </glossentry>

      </glossdiv>

      <glossdiv>
            <title>J</title>
            <glossentry id="job-description">
                  <glossterm>job description</glossterm>
                  <glossdef>
                        <para>Term used to describe a GRAM5 job for GT5.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="job-manager">
                  <glossterm>Job Manager</glossterm>
                  <glossdef>
                        <para>A part of GRAM that runs as a local
                        user and interfaces with a
                        <glossterm>Local Resource Manager</glossterm>
                        for that user.</para>
                  </glossdef>
            </glossentry>
 
      </glossdiv>
      <glossdiv>
            <title>L</title>
            <glossentry id="local-resource-manager">
                <glossterm>Local Resource Manager</glossterm>
                <acronym>LRM</acronym>
                <glossdef>
                    <para>
                        A system which controls access to a compute resource,
                        such as a compute cluster or parallel computer.
                        Such systems provide batch execution interfaces,
                        which GRAM uses to execute jobs.
                        <glossterm>Condor</glossterm>,
                        <glossterm>Portable Batch System</glossterm>,
                        <glossterm baseform="Oracle GridEngine">GridEngine</glossterm> are examples
                        of local resource managers.
                    </para>
                <glossseealso>Condor</glossseealso>
                <glossseealso>Portable Batch System</glossseealso>
                <glossseealso>Oracle GridEngine</glossseealso>
                </glossdef>
            </glossentry>

            <glossentry id="local-resource-manager-adapter">
                <glossterm>LRM Adapter</glossterm>
                <glossdef>
                    <para>
                        The interface code between 
                        a <glossterm>Local Resource Manager</glossterm> and
                        GRAM. In most cases, this consists of a Perl
                        module that implements the
                        <classname>Globus::GRAM::JobManager</classname> class
                        and a <glossterm>Scheduler Event Generator</glossterm>
                        module.
                    </para>
                  <glossseealso>Local Resource Manager</glossseealso>
                </glossdef>
            </glossentry>

            <glossentry id="libtool">
                  <glossterm>Libtool</glossterm>
                  <glossdef>
                        <para>Libtool is a GNU library support script that abstracts shared library
                              interface. Used by GSI/Sysconfig. Libtool hides the complexity of
                              using shared libraries behind a portable interface.</para>
                        <para>For more information, see <ulink
                                    url="http://www.gnu.org/software/libtool"
                                    >http://www.gnu.org/software/libtool</ulink>.</para>
                        <para>See also <ulink url="#gsi"
                        >GSI</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="lrc">
                  <glossterm>Local Replica Catalog (LRC)</glossterm>
                  <glossdef>
                        <para> Stores mappings between logical names for data items and the target
                              names (often the physical locations) of replicas of those items.
                              Clients query the LRC to discover replicas associated with a logical
                              name. Also may associate attributes with logical or target names. Each
                              LRC periodically sends information about its logical name mappings to
                              one or more RLIs. </para>
                        <para>See also <ulink url="#rli"
                        >RLI</ulink>.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="logical-file-name">
                  <glossterm>logical file name</glossterm>
                  <glossdef>
                        <para> A unique identifier for the contents of a file.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="logical-name">
                  <glossterm>logical name</glossterm>
                  <glossdef>
                        <para> A unique identifier for the contents of a data item. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="lsf">
                  <glossterm>LSF</glossterm>
                  <glossdef>
                        <para>A <glossterm>Local Resource Manager</glossterm> mechanism supported by GRAM.</para>
                        <para>For more information, see <ulink
                                    url="http://www.platform.com/Products/Platform.LSF.Family/Platform.LSF/"
                                    >
                                    http://www.platform.com/Products/Platform.LSF.Family/Platform.LSF/</ulink>.</para>
                  <glossseealso>Local Resource Manager</glossseealso>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>M</title>
            <glossentry id="meta-scheduler">
                  <glossterm>metascheduler</glossterm>
                  <glossdef>
                        <para>A program
                              that typically operates at a higher level than a job scheduler
                              (typically, above the GRAM level). It schedules and submits jobs to
                              GRAM services.</para>
                  </glossdef>
            </glossentry>


            <glossentry id="mpi">
                  <glossterm>Message Passing Interface</glossterm>
                  <acronym>MPI</acronym>
                  <glossdef>
                        <para>The Message Passing Interface (MPI) is a library specification for
                              message-passing, proposed as a standard by a broadly based committee
                              of vendors, implementors, and users.</para>
                        <para>For more information, see <ulink
                                    url="http://www.mcs.anl.gov/mpi/"
                                    >http://www-unix.mcs.anl.gov/mpi/</ulink>. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="mode-command">
                  <glossterm>MODE command</glossterm>
                  <!-- not sure which instances of the word 'mode' to code -->
                  <glossdef>
                        <para> In reality, GridFTP is not one protocol, but a collection of several
                              protocols. There is a protocol used on the control channel, but there
                              is a range of protocols available for use on the data channel. Which
                              protocol is used is selected by the MODE command. Four modes are
                              defined: STREAM (S), BLOCK (B), COMPRESSED (C) in RFC 959 for FTP, and
                              EXTENDED BLOCK (E) in GFD.020 for GridFTP. There is also a new data
                              channel protocol, or mode, being defined in the GGF GridFTP Working
                              group which, for lack of a better name at this point, is called MODE
                              X. </para>
                        <para>See also <ulink url="#extended-block-mode"
                                    >extended block mode (MODE E)</ulink>.</para>
                        <!--  not in near future as of 3/04/2008
                        <para>See also <ulink
                                    url="#improved-extended-block-mode"
                                    >improved extended block mode (MODE X)</ulink>.</para>
                                    -->
                        <para>See also <ulink url="#stream-mode">stream
                                    mode (MODE S)</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="myproxy">
                <glossterm>MyProxy</glossterm>
                <glossdef>
                    <para>
                        Myproxy manages X.509 credentials (certificates and
                        private keys). MyProxy combines an online credential
                        repository with an online certificate authority to
                        allow users to securely obtain credentials.
                    </para>
                </glossdef>
            </glossentry>


      </glossdiv>
      <glossdiv>
            <title>N</title>
            <glossentry id="network-end-points">
                  <glossterm>network end points</glossterm>
                  <glossdef>
                        <para>A network
                              endpoint is generally something that has an IP address (a network
                              interface card). It is a point of access to the network for
                              transmission or reception of data. Note that a single host could have
                              multiple network end points if it has multiple NICs installed
                              (multi-homed). This definition is necessary to differentiate between
                              parallelism and striping.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="nfs">
                  <glossterm>Network File System</glossterm>
                  <acronym>NFS</acronym>
                  <glossdef>
                        <para>The Network File System (NFS) provides remote access to shared file
                              systems across networks. </para>
                        <para>For more information, see <ulink
                                    url="http://www.uwsg.iu.edu/usail/network/nfs/overview.html">
                                    http://www.uwsg.iu.edu/usail/network/nfs/overview.html</ulink>.
                        </para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>O</title>

            <glossentry id="openldap">
                  <glossterm>OpenLDAP</glossterm>
                  <glossdef>
                        <para>
                              <ulink url=" http://www.openldap.org"> http://www.openldap.org</ulink>
                              Open Source Lightweight Directory Access Protocol in the C Language.
                        h</para>
                  </glossdef>
            </glossentry>
            <glossentry id="openssl">
                  <glossterm>OpenSSL</glossterm>
                  <glossdef>
                        <para>SSL implementation used by GSI. Stands for Open Source Secure Sockets
                              Layer. Distribution in the C Language. For more information, see
                                    <ulink url="http://www.openssl.org"
                              >http://www.openssl.org</ulink>.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="Oracle-GridEngine">
                <glossterm>Oracle GridEngine</glossterm>
                <glossdef>
                    <para>
                        A <glossterm>Local Resource Manager</glossterm>
                        supported by GRAM. See <ulink url="http://www.oracle.com/us/products/tools/oracle-grid-engine-075549.html">Oracle's Web Site</ulink>
                        for more information.
                    </para>
                  <glossseealso>Local Resource Manager</glossseealso>
                </glossdef>
            </glossentry>

      </glossdiv>
      <glossdiv>
            <title>P</title>
            <glossentry id="parallelism">
                  <glossterm>parallelism</glossterm>
                  <glossdef>
                        <para> When speaking about GridFTP transfers, parallelism refers to having
                              multiple TCP connections between a single pair of network endpoints.
                              This is used to improve performance of transfers on connections with
                              light to moderate packet loss.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="pbs">
                  <glossterm>Portable Batch System</glossterm>
                  <acronym>PBS</acronym>
                  <glossdef>
                        <para>A <glossterm>Local Resource Manager</glossterm> mechanism supported by GRAM. Multiple implementations of PBS exist: GRAM currently supports TORQUE. See also <glossterm>TORQUE</glossterm>.</para>
                  <glossseealso>Local Resource Manager</glossseealso>
                  <glossseealso>TORQUE</glossseealso>
                  </glossdef>
            </glossentry>
            <glossentry id="physical-file-name">
                  <glossterm>physical file name</glossterm>
                  <glossdef>
                        <para> The address or the location of a copy of a file on a storage system.
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="priv-key">
                  <glossterm>private key</glossterm>
                  <glossdef>
                        <para>The private part of a key pair. Depending on the type of certificate
                              the key corresponds to it may typically be found in
                                    <filename>$HOME/.globus/userkey.pem</filename> (for user
                              certificates), <filename>/etc/grid-security/hostkey.pem</filename>
                              (for host certificates) or
                                          <filename>/etc/grid-security/<replaceable>&lt;service&gt;</replaceable>/<replaceable>&lt;service&gt;</replaceable>key.pem</filename>
                              (for service certificates).</para>
                        <para>For more information on possible private key locations see
                              <olink targetdoc="gsicPI" targetptr="gsic-env-credentials">this</olink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="proxy-cert">
                  <glossterm>proxy certificate</glossterm>
                  <glossdef>
                        <para> A short lived certificate issued using a EEC. A proxy certificate
                              typically has the same effective subject as the EEC that issued it and
                              can thus be used in its place. GSI uses proxy certificates for single
                              sign on and delegation of rights to other entities.</para>
                        <para>For more information about types of proxy certificates and their
                              compatibility in different versions of GT, see <ulink
                                    url="http://dev.globus.org/wiki/Security/ProxyCertTypes"
                                    >http://dev.globus.org/wiki/Security/ProxyCertTypes</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="proxy-cred">
                  <glossterm>proxy credentials</glossterm>
                  <glossdef>
                        <para> The combination of a proxy certificate and its corresponding private
                              key. GSI typically stores proxy credentials in
                                          <filename>/tmp/x509up_u<replaceable>&lt;uid&gt;</replaceable>
                              </filename>, where &lt;uid&gt; is the user id of the proxy
                              owner.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="pub-key">
                  <glossterm>public key</glossterm>
                  <glossdef>
                        <para> The public part of a key pair used for cryptographic operations (e.g.
                              signing, encrypting).</para>
                  </glossdef>
            </glossentry>
 
      </glossdiv>

      <glossdiv>
            <title>R</title>

  
            <glossentry id="rsl">
                  <glossterm>Resource Specification Language</glossterm>
                  <acronym>RSL</acronym>
                  <glossdef>
                        <para>Term used to describe a GRAM job for GT2 and GT3. (Note: This is not
                              the same as RLS - the Replica Location Service) </para>
                  </glossdef>
            </glossentry>
 
      </glossdiv>
      <glossdiv>
            <title>S</title>

            <glossentry id="sasl">
                  <glossterm>SASL</glossterm>
                  <glossdef>
                        <para>Utilized by GSI. Open Source Simple Authentication and Security Layer
                              in the C Language. For more information, see <ulink
                                    url="http://asg.web.cmu.edu/sasl"
                              >http://asg.web.cmu.edu/sasl</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="scheduler">
                  <glossterm>scheduler</glossterm>
                  <glossdef>
                        <para>Term used to describe a job scheduler mechanism to which GRAM
                              interfaces. It is a networked system for submitting, controlling, and
                              monitoring the workload of batch jobs in one or more computers. The
                              jobs or tasks are scheduled for execution at a time chosen by the
                              subsystem according to an available policy and availability of
                              resources. Popular job schedulers include Portable Batch System (PBS),
                              Platform LSF, and IBM LoadLeveler.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="scheduler-adapter">
                  <glossterm>scheduler adapter</glossterm>
                  <glossdef>
                        <para>The interface used by GRAM to communicate/interact with a job
                              scheduler mechanism. In GT 4.x, this is both the perl submission
                              scripts and the SEG program.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="seg">
                  <glossterm>Scheduler Event Generator</glossterm>
                  <acronym>SEG</acronym>
                  <glossdef>
                        <para>The Scheduler Event Generator (SEG) is a program which uses
                              scheduler-specific monitoring modules to generate job state change events.
                              Depending on scheduler-specific requirements, the SEG may need to run with
                              privileges to enable it to obtain scheduler event notifications. As such, one
                              SEG runs per scheduler resource. For example, on a host which provides access
                              to both PBS and fork jobs, two SEGs, running at (potentially) different privilege
                              levels will be running.
                              One SEG instance exists for any particular scheduled resource instance (one for all
                              homogeneous PBS queues, one for all fork jobs, etc).
                              The SEG is implemented in an executable called the globus-scheduler-event-generator,
                              located in the Globus Toolkit's libexec directory.
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="simplecA">
                <glossterm>SimpleCA</glossterm>
                <glossdef>
                    <para>
                        SimpleCA is a tool for creating and managing a
                        CA. It provides a way to implement a X.509
                        trust root and sign certificates for users and
                        hosts.
                    </para>
                </glossdef>
            </glossentry>
            <glossentry id="Sun-GridEngine">
                <glossterm>Sun GridEngine</glossterm>
                <acronym>SGE</acronym>
                <glossdef>
                    <para>
                    The old name for <glossterm>Oracle GridEngine</glossterm>.
                    </para>
                    <glossseealso>Oracle GridEngine</glossseealso>
                </glossdef>

            </glossentry>
            <glossentry id="server">
                  <glossterm>server</glossterm>
                  <glossdef>
                        <para>A process that receives commands and sends responses to
                              those commands. Since it is a server or service, and it receives
                              commands, it must be listening on a port somewhere to receive the
                              commands. Both FTP and GridFTP have IANA registered ports. For FTP it
                              is port 21, for GridFTP it is port 2811. This is normally handled via
                              inetd or xinetd on Unix variants. However, it is also possible to
                              implement a daemon that listens on the specified port. This is
                              described more fully in in the Architecture section of the GridFTP
                              Developer's Guide.</para>
                  </glossdef>
            </glossentry>


            <glossentry id="svc-cert">
                  <glossterm>service certificate</glossterm>
                  <glossdef>
                        <para> A EEC for a specific service (e.g. FTP or LDAP). When using GSI this
                              certificate is typically stored in
                                          <filename>/etc/grid-security/<replaceable>&lt;service&gt;</replaceable>/<replaceable>&lt;service&gt;</replaceable>cert.pem</filename>.
                              For more information on possible service certificate locations, see
                             <olink targetdoc="gsicPI" targetptr="gsic-env-credentials">this</olink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="svc-cred">
                  <glossterm>service credentials</glossterm>
                  <glossdef>
                        <para> The combination of a service certificate and its corresponding
                              private key.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="SLURM">
                <glossterm>Simple Linux Utility for Resource Management</glossterm>
                <acronym>SLURM</acronym>
                <glossdef>
                    <para>
                    A resource manager supported by GRAM
                    </para>
                </glossdef>
            </glossentry>
 
            <glossentry id="stream-mode">
                  <glossterm>stream mode (MODE S)</glossterm>
                  <glossdef>
                        <para> The only mode normally implemented for FTP is MODE S. This is simply
                              sending each byte, one after another over the socket in order, with no
                              application level framing of any kind. This is the default and is what
                              a standard FTP server will use. This is also the default for GridFTP.
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="striping">
                  <glossterm>striping</glossterm>
                  <glossdef>
                        <para> When speaking about GridFTP transfers, striping refers to having
                              multiple network endpoints at the source, destination, or both
                              participating in the transfer of the same file. This is normally
                              accomplished by having a cluster with a parallel shared file system.
                              Each node in the cluster reads a section of the file and sends it over
                              the network. This mode of transfer is necessary if you wish to
                              transfer a single file faster than a single host is capable of. This
                              also tends to only be effective for large files, though how large
                              depends on how many hosts and how fast the end-to-end transfer is.
                              Note that while it is theoretically possible to use NFS for the shared
                              file system, your performance will be poor, and would make using
                              striping pointless. </para>
                  </glossdef>
            </glossentry>
  
      </glossdiv>
      <glossdiv>
            <title>T</title>
            <glossentry id="target-name">
                  <glossterm>target name</glossterm>
                  <glossdef>
                        <para> The address or location of a copy of a data item on a storage system.
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="third-party-transfers">
                  <glossterm>third party transfers</glossterm>
                  <glossdef>
                        <para>In the simplest terms, a third party transfer moves a file between two
                              GridFTP servers.</para>
                        <para> The following is a more detailed, programmatic description. </para>
                        <para>In a third party transfer, there are three entities involved. The
                              client, who will only orchestrate, but not actually take place in the
                              data transfer, and two servers one of which will be sending data to
                              the other. This scenario is common in Grid applications where you may
                              wish to stage data from a data store somewhere to a supercomputer you
                              have reserved. The commands are quite similar to the client/server
                              transfer. However, now the client must establish two control channels,
                              one to each server. He will then choose one to listen, and send it the
                              PASV command. When it responds with the IP/port it is listening on,
                              the client will send that IP/port as part of the PORT command to the
                              other server. This will cause the second server to connect to the
                              first server, rather than the client. To initiate the actual movement
                              of the data, the client then sends the RETR filename command to the
                              server that will read from disk and write to the network (the
                              sending server) and will send the STOR filename command to the
                              other server which will read from the network and write to the disk
                              (the receiving server). </para>
                        <glossseealso otherterm="client-server-transfer">client/server transfer</glossseealso>
                  </glossdef>
            </glossentry>
            <glossentry id="TORQUE">
                <glossterm>TORQUE</glossterm>
                <glossdef>
                    <para>
                    An implementation of the <glossterm>Portable Batch System</glossterm>
                    interface by <ulink url="http://www.adaptivecomputing.com/products/torque.php">Adaptive Computing</ulink>.
                    </para>
                <glossseealso>Portable Batch System</glossseealso>
                </glossdef>
            </glossentry>
            <glossentry id="transport-level-security">
                  <glossterm>transport-level security</glossterm>
                  <glossdef>
                        <para>Uses transport-level security (TLS) mechanisms.</para>
                  </glossdef>
            </glossentry>

            <glossentry id="trusted-ca-dir">
                  <glossterm>trusted CAs directory</glossterm>
                  <glossdef>
                        <para> The directory containing the CA certificates and signing policy files
                              of the CAs trusted by GSI. Typically this directory is
                                    <filename>/etc/grid-security/certificates</filename>. For more
                              information see <olink targetdoc="gsicPI" targetptr="gsic-env-gridsecurity">this</olink>.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>U</title>
            <glossentry id="uuid">
                  <glossterm>Universally Unique Identifier</glossterm>
                  <acronym>UUID</acronym>
                  <glossdef>
                        <para>Identifier that is immutable and unique across time and space.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="user-cert">
                  <glossterm>user certificate</glossterm>
                  <glossdef>
                        <para> A EEC belonging to a user. When using GSI, this certificate is
                              typically stored in <filename>$HOME/.globus/usercert.pem</filename>.
                              For more information on possible user certificate locations, see
                              <olink targetdoc="gsicPI" targetptr="gsic-env-credentials">this</olink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="user-cred">
                  <glossterm>user credentials</glossterm>
                  <glossdef>
                        <para> The combination of a user certificate and its corresponding private
                              key.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>

 
</glossary>
